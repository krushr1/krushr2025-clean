{
  "version": 3,
  "sources": ["../../frontend/src/components/contacts/Contacts.tsx"],
  "sourcesContent": ["\nimport React, { useState, useRef, useEffect } from 'react'\nimport { Button } from '../ui/button'\nimport { FloatingInput } from '../ui/floating-input'\nimport { ScrollArea } from '../ui/scroll-area'\nimport { Badge } from '../ui/badge'\nimport { Avatar, AvatarFallback } from '../ui/avatar'\nimport { \n  Plus,\n  Search,\n  Users,\n  Phone,\n  Mail,\n  MapPin,\n  Building,\n  Star,\n  MoreHorizontal,\n  Edit3,\n  MessageCircle,\n  Calendar,\n  GripVertical\n} from 'lucide-react'\nimport { cn } from '../../lib/utils'\nimport { trpc } from '../../lib/trpc'\n\ninterface Contact {\n  id: string\n  name: string\n  email: string\n  phone?: string\n  company?: string\n  position?: string\n  location?: string\n  tags: string[]\n  isFavorite: boolean\n  avatar?: string\n  lastContact: string\n  notes?: string\n}\n\ninterface ContactsProps {\n  workspaceId?: string\n  className?: string\n}\n\nexport default function Contacts({ workspaceId, className }: ContactsProps) {\n  const [selectedContact, setSelectedContact] = useState<string | null>(null)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [leftPaneWidth, setLeftPaneWidth] = useState(320)\n  const [isResizing, setIsResizing] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const resizerRef = useRef<HTMLDivElement>(null)\n\n  const mockContacts: Contact[] = [\n    {\n      id: '1',\n      name: 'Alice Johnson',\n      email: 'alice.johnson@techcorp.com',\n      phone: '+1 (555) 123-4567',\n      company: 'TechCorp Solutions',\n      position: 'Senior Product Manager',\n      location: 'San Francisco, CA',\n      tags: ['client', 'product'],\n      isFavorite: true,\n      avatar: 'AJ',\n      lastContact: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n      notes: 'Key stakeholder for Q2 product launch. Prefers morning meetings.'\n    },\n    {\n      id: '2',\n      name: 'Bob Chen',\n      email: 'b.chen@designstudio.co',\n      phone: '+1 (555) 987-6543',\n      company: 'Design Studio Co',\n      position: 'Creative Director',\n      location: 'New York, NY',\n      tags: ['partner', 'design'],\n      isFavorite: false,\n      avatar: 'BC',\n      lastContact: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n      notes: 'Excellent collaboration on branding projects. Very detail-oriented.'\n    },\n    {\n      id: '3',\n      name: 'Carol Smith',\n      email: 'carol@startup.io',\n      phone: '+1 (555) 456-7890',\n      company: 'Startup.io',\n      position: 'Co-Founder & CEO',\n      location: 'Austin, TX',\n      tags: ['investor', 'startup'],\n      isFavorite: true,\n      avatar: 'CS',\n      lastContact: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n      notes: 'Interested in strategic partnership. Follow up on Q3 roadmap.'\n    },\n    {\n      id: '4',\n      name: 'David Rodriguez',\n      email: 'david.r@consultancy.com',\n      phone: '+1 (555) 321-0987',\n      company: 'Business Consultancy',\n      position: 'Senior Consultant',\n      location: 'Chicago, IL',\n      tags: ['consultant', 'strategy'],\n      isFavorite: false,\n      avatar: 'DR',\n      lastContact: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(),\n      notes: 'Provided excellent market analysis. Available for future projects.'\n    }\n  ]\n\n  const filteredContacts = mockContacts.filter(contact =>\n    contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.company?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    contact.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n  )\n\n  const selectedContactData = mockContacts.find(contact => contact.id === selectedContact)\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString)\n    const now = new Date()\n    const diffTime = Math.abs(now.getTime() - date.getTime())\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n    \n    if (diffDays === 1) return 'Today'\n    if (diffDays === 2) return 'Yesterday'\n    if (diffDays <= 7) return `${diffDays - 1} days ago`\n    return date.toLocaleDateString()\n  }\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!isResizing || !containerRef.current) return\n      \n      const containerRect = containerRef.current.getBoundingClientRect()\n      const newWidth = e.clientX - containerRect.left\n      const minWidth = 240\n      const maxWidth = containerRect.width * 0.7\n      \n      setLeftPaneWidth(Math.max(minWidth, Math.min(newWidth, maxWidth)))\n    }\n\n    const handleMouseUp = () => {\n      setIsResizing(false)\n    }\n\n    if (isResizing) {\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n      document.body.style.cursor = 'col-resize'\n      document.body.style.userSelect = 'none'\n    }\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove)\n      document.removeEventListener('mouseup', handleMouseUp)\n      document.body.style.cursor = ''\n      document.body.style.userSelect = ''\n    }\n  }, [isResizing])\n\n  useEffect(() => {\n    if (filteredContacts.length > 0 && !selectedContact) {\n      setSelectedContact(filteredContacts[0].id)\n    }\n  }, [filteredContacts, selectedContact])\n\n  return (\n    <div ref={containerRef} className={cn(\"flex h-full bg-krushr-gray-50\", className)}>\n      {/* Left Pane - Contacts List */}\n      <div style={{ width: leftPaneWidth }} className=\"flex-shrink-0\">\n        <div className=\"flex flex-col h-full bg-white\">\n        {/* Header */}\n        <div className=\"p-4 border-b border-krushr-gray-200\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h3 className=\"font-medium text-sm text-krushr-gray-900\">Contacts</h3>\n            <button \n              className=\"bg-krushr-primary text-white px-3 h-8 rounded-button text-sm font-medium hover:bg-krushr-coral-red transition-all duration-200 shadow-elevation-sm hover:shadow-elevation-md flex items-center justify-center flex-shrink-0\"\n              title=\"Create new contact\"\n            >\n              <Plus className=\"w-4 h-4\" />\n            </button>\n          </div>\n          \n          {/* Search */}\n          <div className=\"relative flex-1 mr-2\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-krushr-gray-400 pointer-events-none z-10\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search contacts...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 h-8 text-base font-manrope border border-krushr-gray-300 rounded-lg bg-white focus:border-krushr-primary focus:ring-2 focus:ring-krushr-primary-100 focus:shadow-elevation-sm transition-all duration-200 outline-none relative z-20 placeholder:text-krushr-gray-400 placeholder:font-manrope\"\n            />\n          </div>\n        </div>\n\n        {/* Contacts List */}\n        <ScrollArea className=\"flex-1\">\n          <div className=\"p-1\">\n            {filteredContacts.map((contact) => (\n              <div\n                key={contact.id}\n                className={cn(\n                  \"border rounded-lg p-3 cursor-pointer transition-all duration-200 mb-1\",\n                  selectedContact === contact.id \n                    ? \"border-2 border-krushr-primary shadow-lg bg-gradient-to-r from-krushr-primary-50 to-white ring-2 ring-krushr-primary/20 transform scale-[1.02]\" \n                    : \"border border-krushr-gray-200 hover:border-krushr-primary hover:shadow-md hover:bg-krushr-gray-50/50\"\n                )}\n                onClick={() => setSelectedContact(contact.id)}\n              >\n                <div className=\"flex items-start gap-2\">\n                  <Avatar className=\"w-8 h-8 mt-0.5\">\n                    <AvatarFallback className=\"text-xs bg-blue-100 text-blue-700\">\n                      {contact.avatar || contact.name.slice(0, 2).toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                      <h3 className={cn(\n                        \"font-medium truncate flex-1 font-manrope\",\n                        selectedContact === contact.id\n                          ? \"text-krushr-primary font-semibold\"\n                          : \"text-krushr-gray-900\"\n                      )}>\n                        {contact.name}\n                      </h3>\n                      {contact.isFavorite && (\n                        <Star className=\"w-3 h-3 text-krushr-warning fill-current flex-shrink-0\" />\n                      )}\n                    </div>\n                    \n                    <div \n                      className=\"text-sm font-brand text-krushr-gray-600 line-clamp-2 mb-2 leading-relaxed\"\n                    >\n                      {contact.position && contact.company \n                        ? `${contact.position} at ${contact.company}`\n                        : contact.company || contact.email\n                      }\n                    </div>\n\n                    <div className=\"flex items-center justify-between text-xs font-brand text-krushr-gray-400\">\n                      <span>{formatDate(contact.lastContact)}</span>\n                      <div className=\"flex items-center space-x-2\">\n                        {contact.tags.length > 0 && (\n                          <div className=\"flex items-center space-x-1\">\n                            <span>{contact.tags.length} tags</span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex flex-wrap gap-1 mt-2\">\n                  {contact.tags.slice(0, 2).map((tag) => (\n                    <div key={tag} className=\"inline-flex items-center rounded-full border py-0.5 font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 text-foreground text-xs h-4 px-1\">\n                      {tag}\n                    </div>\n                  ))}\n                  {contact.tags.length > 2 && (\n                    <span className=\"text-xs text-krushr-gray-400\">+{contact.tags.length - 2}</span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </ScrollArea>\n        </div>\n      </div>\n\n      {/* Resizer */}\n      <div\n        ref={resizerRef}\n        className={cn(\n          \"w-1 bg-krushr-gray-200 hover:bg-krushr-primary transition-colors cursor-col-resize relative group\",\n          isResizing && \"bg-krushr-primary\"\n        )}\n        onMouseDown={() => setIsResizing(true)}\n      >\n        <div className=\"absolute inset-y-0 -left-1 -right-1 flex items-center justify-center\">\n          <GripVertical className=\"w-3 h-3 text-krushr-gray-400 group-hover:text-krushr-primary opacity-0 group-hover:opacity-100 transition-opacity\" />\n        </div>\n      </div>\n\n      {/* Right Pane - Contact Details */}\n      <div className=\"flex-1 flex flex-col bg-white\">\n        {selectedContactData ? (\n          <>\n            {/* Contact Header */}\n            <div className=\"border-b border-krushr-gray-200 p-4 bg-white\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-start gap-3 flex-1 mr-4\">\n                  <Avatar className=\"w-12 h-12\">\n                    <AvatarFallback className=\"text-lg bg-blue-100 text-blue-700\">\n                      {selectedContactData.avatar || selectedContactData.name.slice(0, 2).toUpperCase()}\n                    </AvatarFallback>\n                  </Avatar>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center gap-2 mb-1\">\n                      <h1 className=\"text-base font-brand font-semibold text-krushr-gray-800 flex-1 mr-4\">\n                        {selectedContactData.name}\n                      </h1>\n                      {selectedContactData.isFavorite && <Star className=\"w-4 h-4 text-krushr-warning fill-current\" />}\n                    </div>\n                    \n                    {selectedContactData.position && selectedContactData.company && (\n                      <p className=\"text-sm text-krushr-gray-600 mb-1\">\n                        {selectedContactData.position} at {selectedContactData.company}\n                      </p>\n                    )}\n                    \n                    <div className=\"flex items-center gap-3 text-xs text-krushr-gray-500\">\n                      <span>Last contact: {formatDate(selectedContactData.lastContact)}</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center gap-1\">\n                  <button className=\"bg-krushr-primary text-white px-4 py-2 rounded-button text-sm font-medium hover:bg-krushr-primary-700 transition-colors shadow-elevation-sm hover:shadow-elevation-md flex items-center gap-2\">\n                    <MessageCircle className=\"w-4 h-4\" />\n                    Message\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <ScrollArea className=\"flex-1\">\n              <div className=\"p-4\">\n                <div className=\"space-y-4\">\n                  {/* Contact Details */}\n                  <div>\n                    <h3 className=\"text-sm font-medium text-krushr-gray-900 mb-2\">Contact Information</h3>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center gap-2 text-sm\">\n                        <Mail className=\"w-4 h-4 text-krushr-gray-400\" />\n                        <span className=\"text-krushr-gray-900\">{selectedContactData.email}</span>\n                      </div>\n                      \n                      {selectedContactData.phone && (\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <Phone className=\"w-4 h-4 text-krushr-gray-400\" />\n                          <span className=\"text-krushr-gray-900\">{selectedContactData.phone}</span>\n                        </div>\n                      )}\n                      \n                      {selectedContactData.company && (\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <Building className=\"w-4 h-4 text-krushr-gray-400\" />\n                          <span className=\"text-krushr-gray-900\">{selectedContactData.company}</span>\n                        </div>\n                      )}\n                      \n                      {selectedContactData.location && (\n                        <div className=\"flex items-center gap-2 text-sm\">\n                          <MapPin className=\"w-4 h-4 text-krushr-gray-400\" />\n                          <span className=\"text-krushr-gray-900\">{selectedContactData.location}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Tags */}\n                  {selectedContactData.tags.length > 0 && (\n                    <div>\n                      <h3 className=\"text-sm font-medium text-krushr-gray-900 mb-2\">Tags</h3>\n                      <div className=\"flex flex-wrap gap-1\">\n                        {selectedContactData.tags.map((tag) => (\n                          <div key={tag} className=\"inline-flex items-center rounded-full border px-2.5 py-0.5 font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 text-foreground text-xs\">\n                            {tag}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Notes */}\n                  {selectedContactData.notes && (\n                    <div>\n                      <h3 className=\"text-sm font-medium text-krushr-gray-900 mb-2\">Notes</h3>\n                      <div \n                        className=\"text-sm text-krushr-gray-700 font-brand leading-relaxed max-w-none prose prose-sm prose-headings:text-krushr-gray-800 prose-p:text-sm prose-p:text-krushr-gray-700 prose-p:font-brand prose-li:text-sm prose-li:text-krushr-gray-700 cursor-pointer hover:bg-krushr-gray-50 rounded-lg p-3 transition-colors border border-transparent hover:border-krushr-gray-200\" \n                        title=\"Click to edit notes\"\n                      >\n                        {selectedContactData.notes}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </ScrollArea>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center bg-krushr-gray-50\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-krushr-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Users className=\"w-8 h-8 text-krushr-gray-400\" />\n              </div>\n              <p className=\"text-base font-brand font-medium text-krushr-gray-700 mb-2\">Select a contact to view</p>\n              <p className=\"text-sm font-brand text-krushr-gray-500\">Choose a contact from the list to start viewing details</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}"],
  "mappings": "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",
  "names": []
}
