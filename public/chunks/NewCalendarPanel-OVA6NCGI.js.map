{
  "version": 3,
  "sources": ["../../frontend/src/components/calendar/NewCalendarPanel.tsx", "../../frontend/src/components/calendar/AgendaView.tsx"],
  "sourcesContent": ["import React, { useState, useMemo, useEffect, useRef } from 'react'\nimport { \n  Calendar as CalendarIcon, \n  ChevronLeft, \n  ChevronRight, \n  Plus, \n  Clock, \n  MapPin, \n  Users, \n  Filter,\n  Search,\n  MoreHorizontal,\n  AlertCircle,\n  CheckCircle2,\n  Zap,\n  Eye,\n  Edit,\n  Trash2,\n  List,\n  X\n} from 'lucide-react'\nimport { Card, CardContent, CardHeader } from '../ui/card'\nimport { Button } from '../ui/button'\nimport { Badge } from '../ui/badge'\nimport { FloatingInput } from '../ui/floating-input'\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '../ui/tooltip'\nimport { trpc } from '../../lib/trpc'\nimport { cn } from '../../lib/utils'\nimport { shouldProcessHotkey } from '../../lib/keyboard-utils'\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval, isSameMonth, isSameDay, addMonths, subMonths, isToday, parseISO, startOfWeek, endOfWeek } from 'date-fns'\nimport AgendaView from './AgendaView'\nimport CompactTaskModal from '../kanban/CompactTaskModal'\n\ninterface NewCalendarPanelProps {\n  workspaceId: string\n  className?: string\n  showHolidays?: boolean\n  holidayCountry?: string\n}\n\ninterface CalendarEvent {\n  id: string\n  title: string\n  description?: string\n  startTime: Date\n  endTime: Date\n  allDay: boolean\n  location?: string\n  color: string\n  type: 'MEETING' | 'TASK' | 'REMINDER' | 'EVENT' | 'DEADLINE' | 'MILESTONE'\n  status: 'CONFIRMED' | 'TENTATIVE' | 'CANCELLED'\n  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL'\n}\n\nconst EVENT_COLORS = {\n  blue: { bg: 'bg-krushr-primary/10', border: 'border-krushr-primary/20', text: 'text-krushr-primary' },\n  green: { bg: 'bg-krushr-success/10', border: 'border-krushr-success/20', text: 'text-krushr-success' },\n  purple: { bg: 'bg-krushr-purple/10', border: 'border-krushr-purple/20', text: 'text-krushr-purple' },\n  orange: { bg: 'bg-krushr-orange/10', border: 'border-krushr-orange/20', text: 'text-krushr-orange' },\n  red: { bg: 'bg-krushr-secondary/10', border: 'border-krushr-secondary/20', text: 'text-krushr-secondary' }\n}\n\nconst EVENT_TYPE_ICONS = {\n  MEETING: Users,\n  TASK: CheckCircle2,\n  REMINDER: AlertCircle,\n  EVENT: CalendarIcon,\n  DEADLINE: Zap,\n  MILESTONE: CheckCircle2\n}\n\nconst PRIORITY_COLORS = {\n  LOW: 'bg-krushr-priority-low',\n  MEDIUM: 'bg-krushr-priority-medium', \n  HIGH: 'bg-krushr-priority-high',\n  CRITICAL: 'bg-krushr-priority-critical'\n}\n\nexport default function NewCalendarPanel({ \n  workspaceId, \n  className,\n  showHolidays = true,\n  holidayCountry = 'US' // Currently only US holidays supported\n}: NewCalendarPanelProps) {\n  const [currentDate, setCurrentDate] = useState(new Date())\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null)\n  const [view, setView] = useState<'month' | 'agenda'>('month')\n  const [showEventModal, setShowEventModal] = useState(false)\n  const [selectedEvent, setSelectedEvent] = useState<CalendarEvent | null>(null)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [showFilters, setShowFilters] = useState(false)\n  const [showSearch, setShowSearch] = useState(false)\n  const [panelSize, setPanelSize] = useState({ width: 0, height: 0 })\n  const containerRef = useRef<HTMLDivElement>(null)\n  \n  // US Federal Holidays for 2024-2025 (can be expanded)\n  const usHolidays = useMemo(() => {\n    if (!showHolidays) return []\n    \n    const holidays = [\n      // 2024 Holidays\n      { date: '2024-01-01', name: 'New Year\\'s Day', type: 'Federal Holiday' },\n      { date: '2024-01-15', name: 'Martin Luther King Jr. Day', type: 'Federal Holiday' },\n      { date: '2024-02-19', name: 'Presidents Day', type: 'Federal Holiday' },\n      { date: '2024-05-27', name: 'Memorial Day', type: 'Federal Holiday' },\n      { date: '2024-06-19', name: 'Juneteenth', type: 'Federal Holiday' },\n      { date: '2024-07-04', name: 'Independence Day', type: 'Federal Holiday' },\n      { date: '2024-09-02', name: 'Labor Day', type: 'Federal Holiday' },\n      { date: '2024-10-14', name: 'Columbus Day', type: 'Federal Holiday' },\n      { date: '2024-11-11', name: 'Veterans Day', type: 'Federal Holiday' },\n      { date: '2024-11-28', name: 'Thanksgiving Day', type: 'Federal Holiday' },\n      { date: '2024-12-25', name: 'Christmas Day', type: 'Federal Holiday' },\n      \n      // 2025 Holidays\n      { date: '2025-01-01', name: 'New Year\\'s Day', type: 'Federal Holiday' },\n      { date: '2025-01-20', name: 'Martin Luther King Jr. Day', type: 'Federal Holiday' },\n      { date: '2025-02-17', name: 'Presidents Day', type: 'Federal Holiday' },\n      { date: '2025-05-26', name: 'Memorial Day', type: 'Federal Holiday' },\n      { date: '2025-06-19', name: 'Juneteenth', type: 'Federal Holiday' },\n      { date: '2025-07-04', name: 'Independence Day', type: 'Federal Holiday' },\n      { date: '2025-09-01', name: 'Labor Day', type: 'Federal Holiday' },\n      { date: '2025-10-13', name: 'Columbus Day', type: 'Federal Holiday' },\n      { date: '2025-11-11', name: 'Veterans Day', type: 'Federal Holiday' },\n      { date: '2025-11-27', name: 'Thanksgiving Day', type: 'Federal Holiday' },\n      { date: '2025-12-25', name: 'Christmas Day', type: 'Federal Holiday' },\n    ]\n    \n    return holidays\n  }, [showHolidays])\n\n  const monthStart = startOfMonth(currentDate)\n  const monthEnd = endOfMonth(currentDate)\n  \n  // Create proper calendar grid with 6 weeks (42 days)\n  const calendarStart = startOfWeek(monthStart, { weekStartsOn: 0 }) // Sunday = 0\n  const calendarEnd = endOfWeek(monthEnd, { weekStartsOn: 0 })\n  const calendarDays = eachDayOfInterval({ start: calendarStart, end: calendarEnd })\n\n  const { data: eventsData, isLoading } = trpc.calendar.list.useQuery({\n    workspaceId,\n    startDate: calendarStart,\n    endDate: calendarEnd\n  }, {\n    retry: false,\n    refetchOnWindowFocus: false\n  })\n\n  const events: CalendarEvent[] = useMemo(() => {\n    if (!eventsData) return []\n    return eventsData.map((event: any) => ({\n      ...event,\n      startTime: new Date(event.startTime),\n      endTime: new Date(event.endTime)\n    }))\n  }, [eventsData])\n\n  const getEventsForDay = (date: Date) => {\n    return events.filter(event => \n      isSameDay(new Date(event.startTime), date) ||\n      (event.allDay && isSameDay(new Date(event.startTime), date))\n    )\n  }\n\n  const getHolidayForDate = (date: Date) => {\n    if (!showHolidays) return null\n    const dateString = format(date, 'yyyy-MM-dd')\n    return usHolidays.find(holiday => holiday.date === dateString) || null\n  }\n\n  useEffect(() => {\n    const updateSize = () => {\n      if (containerRef.current) {\n        const rect = containerRef.current.getBoundingClientRect()\n        setPanelSize({ width: rect.width, height: rect.height })\n      }\n    }\n\n    const resizeObserver = new ResizeObserver(updateSize)\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current)\n      updateSize() // Initial size\n    }\n\n    return () => resizeObserver.disconnect()\n  }, [])\n\n  const layoutConfig = useMemo(() => {\n    const { width, height } = panelSize\n    \n    if (width < 300 || height < 200) {\n      return {\n        size: 'micro',\n        showSidebar: false,\n        showSearch: true,\n        showFilters: true,\n        showToday: false,\n        showViewToggle: true,\n        showEventButton: true,\n        headerPadding: 'p-2',\n        headerGap: 'gap-1',\n        gridCols: 7,\n        dayHeight: 'min-h-[40px]',\n        fontSize: 'text-xs',\n        buttonSize: 'h-8 w-8', // Minimum 32px touch targets\n        iconSize: 'w-3 h-3',\n        maxEventsPerDay: 0,\n        compactMode: true\n      }\n    }\n    \n    if (width < 500 || height < 300) {\n      return {\n        size: 'small',\n        showSidebar: false,\n        showSearch: true,\n        showFilters: true,\n        showToday: false,\n        showViewToggle: true,\n        showEventButton: true,\n        headerPadding: 'p-2',\n        headerGap: 'gap-1',\n        gridCols: 7,\n        dayHeight: 'min-h-[50px]',\n        fontSize: 'text-xs',\n        buttonSize: 'h-8 w-8', // Better touch targets\n        iconSize: 'w-3 h-3',\n        maxEventsPerDay: 1,\n        compactMode: true\n      }\n    }\n    \n    if (width < 800 || height < 500) {\n      return {\n        size: 'medium',\n        showSidebar: !!selectedDate,\n        showSearch: true,\n        showFilters: true,\n        showToday: true,\n        showViewToggle: true,\n        showEventButton: true,\n        headerPadding: 'p-3',\n        headerGap: 'gap-2',\n        gridCols: 7,\n        dayHeight: 'min-h-[70px]',\n        fontSize: 'text-sm',\n        buttonSize: 'h-9 w-9', // Approaching ideal 44px touch targets\n        iconSize: 'w-4 h-4',\n        maxEventsPerDay: 2,\n        compactMode: false\n      }\n    }\n    \n    return {\n      size: 'large',\n      showSidebar: true,\n      showSearch: showSearch,\n      showFilters: true,\n      showToday: true,\n      showViewToggle: true,\n      showEventButton: true,\n      headerPadding: 'p-4',\n      headerGap: 'gap-3',\n      gridCols: 7,\n      dayHeight: 'min-h-[90px]',\n      fontSize: 'text-sm',\n      buttonSize: 'h-10 w-10', // Ideal 40px touch targets\n      iconSize: 'w-4 h-4',\n      maxEventsPerDay: 3,\n      compactMode: false\n    }\n  }, [panelSize, selectedDate, showSearch])\n\n  const filteredEvents = useMemo(() => {\n    if (!searchQuery) return events\n    return events.filter(event => \n      event.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      event.description?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      event.location?.toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  }, [events, searchQuery])\n\n  const navigateMonth = (direction: 'prev' | 'next') => {\n    setCurrentDate(direction === 'prev' ? subMonths(currentDate, 1) : addMonths(currentDate, 1))\n  }\n\n  const handleDateClick = (date: Date) => {\n    // If clicking on a date from previous/next month, navigate to that month\n    if (!isSameMonth(date, currentDate)) {\n      setCurrentDate(date)\n      setSelectedDate(date)\n    } else {\n      setSelectedDate(isSameDay(date, selectedDate || new Date()) ? null : date)\n    }\n  }\n\n  const handleEventClick = (event: CalendarEvent) => {\n    setSelectedEvent(event)\n    setShowEventModal(true)\n  }\n\n  React.useEffect(() => {\n    if (searchQuery === '' && showSearch) {\n      const timer = setTimeout(() => {\n        setShowSearch(false)\n      }, 2000)\n      return () => clearTimeout(timer)\n    }\n  }, [searchQuery, showSearch])\n\n  React.useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      // Don't process shortcuts if user is typing\n      if (!shouldProcessHotkey(e)) {\n        return\n      }\n\n      switch (e.key) {\n        case 'Escape':\n          if (showSearch) {\n            setShowSearch(false)\n            setSearchQuery('')\n          } else if (selectedDate) {\n            setSelectedDate(null)\n          }\n          break\n        \n        case '/':\n          if (layoutConfig.showSearch !== false) {\n            e.preventDefault()\n            setShowSearch(true)\n          }\n          break\n          \n        case 'ArrowLeft':\n          if (e.metaKey || e.ctrlKey) {\n            e.preventDefault()\n            navigateMonth('prev')\n          }\n          break\n          \n        case 'ArrowRight':\n          if (e.metaKey || e.ctrlKey) {\n            e.preventDefault()\n            navigateMonth('next')\n          }\n          break\n          \n        case 't':\n          if (!e.metaKey && !e.ctrlKey && !e.altKey) {\n            e.preventDefault()\n            setCurrentDate(new Date())\n          }\n          break\n          \n        case 'm':\n          if (layoutConfig.showViewToggle && !e.metaKey && !e.ctrlKey && !e.altKey) {\n            e.preventDefault()\n            setView('month')\n          }\n          break\n          \n        case 'a':\n          if (layoutConfig.showViewToggle && !e.metaKey && !e.ctrlKey && !e.altKey) {\n            e.preventDefault()\n            setView('agenda')\n          }\n          break\n      }\n    }\n    \n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [showSearch, selectedDate, layoutConfig, navigateMonth])\n\n  if (isLoading) {\n    return (\n      <div ref={containerRef} className={cn(\"flex h-full bg-white\", className)}>\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <CalendarIcon className={cn(\"text-krushr-primary mx-auto mb-2 animate-pulse\", \n              panelSize.width < 200 ? \"w-4 h-4\" : \"w-8 h-8\")} />\n            {panelSize.width >= 200 && (\n              <p className=\"text-sm text-gray-500 font-manrope\">Loading...</p>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (layoutConfig.size === 'micro' && panelSize.height < 150) {\n    return (\n      <div ref={containerRef} className={cn(\"flex h-full bg-white\", className)}>\n        <div className=\"flex-1 flex flex-col\">\n          {/* Ultra-minimal header */}\n          <div className=\"p-2 border-b border-gray-200 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-1\">\n                <Button\n                  variant=\"ghost\" \n                  size=\"sm\"\n                  onClick={() => navigateMonth('prev')}\n                  className=\"p-1 h-6 w-6 focus:ring-2 focus:ring-krushr-primary focus:outline-none\"\n                  title=\"Previous month\"\n                >\n                  <ChevronLeft className=\"w-3 h-3\" />\n                </Button>\n                <span className=\"text-xs font-semibold text-gray-900 font-manrope min-w-0 px-1\">\n                  {format(currentDate, 'M/yy')}\n                </span>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\" \n                  onClick={() => navigateMonth('next')}\n                  className=\"p-1 h-6 w-6 focus:ring-2 focus:ring-krushr-primary focus:outline-none\"\n                  title=\"Next month\"\n                >\n                  <ChevronRight className=\"w-3 h-3\" />\n                </Button>\n              </div>\n              <Button\n                variant=\"default\"\n                size=\"sm\"\n                onClick={() => setShowEventModal(true)}\n                className=\"bg-krushr-primary hover:bg-krushr-primary/90 text-white p-1 h-6 w-6 focus:ring-2 focus:ring-krushr-primary focus:outline-none\"\n                title=\"Create new task\"\n              >\n                <Plus className=\"w-3 h-3\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Ultra-compact calendar grid */}\n          <div className=\"flex-1 p-1\">\n            <div className=\"grid grid-cols-7 gap-px bg-gray-200 rounded overflow-hidden text-xs\">\n              {/* Minimal day headers */}\n              {['S','M','T','W','T','F','S'].map((day, index) => (\n                <div key={index} className=\"bg-gray-50 text-center p-0.5\">\n                  <span className=\"text-xs font-medium text-gray-600\">{day}</span>\n                </div>\n              ))}\n              \n              {/* Minimal calendar days */}\n              {calendarDays.map(date => {\n                const dayEvents = getEventsForDay(date)\n                const isCurrentMonth = isSameMonth(date, currentDate)\n                const isCurrentDay = isToday(date)\n                const holiday = getHolidayForDate(date)\n                \n                return (\n                  <div\n                    key={date.toISOString()}\n                    onClick={() => handleDateClick(date)}\n                    className={cn(\n                      \"bg-white cursor-pointer border-r border-b border-gray-100 hover:bg-gray-50 transition-colors min-h-[20px] p-0.5 text-center\",\n                      !isCurrentMonth && \"bg-gray-50/50 text-gray-400 hover:bg-gray-100\",\n                      isCurrentDay && \"bg-krushr-primary/10 text-krushr-primary font-semibold\",\n                      holiday && \"bg-red-50 border-red-200\"\n                    )}\n                    title={(() => {\n                      const tooltipParts = []\n                      \n                      if (holiday) {\n                        tooltipParts.push(`\uD83C\uDF89 ${holiday.name}`)\n                        if (holiday.type) {\n                          tooltipParts.push(`(${holiday.type})`)\n                        }\n                      }\n                      \n                      if (dayEvents.length > 0) {\n                        if (tooltipParts.length > 0) tooltipParts.push('\\n---\\n')\n                        tooltipParts.push(`\uD83D\uDCC5 ${dayEvents.length} event${dayEvents.length > 1 ? 's' : ''}:`)\n                        dayEvents.slice(0, 3).forEach(event => {\n                          const timeStr = event.allDay ? 'All day' : format(new Date(event.startTime), 'h:mm a')\n                          tooltipParts.push(`\u2022 ${timeStr}: ${event.title}`)\n                        })\n                        if (dayEvents.length > 3) {\n                          tooltipParts.push(`\u2022 +${dayEvents.length - 3} more events`)\n                        }\n                      }\n                      \n                      return tooltipParts.length > 0 ? tooltipParts.join('\\n') : undefined\n                    })()}\n                  >\n                    <div className=\"flex items-center justify-center h-full\">\n                      <span className={cn(\n                        \"text-xs\",\n                        holiday && \"text-red-600 font-medium\"\n                      )}>\n                        {format(date, 'd')}\n                      </span>\n                      {(dayEvents.length > 0 || holiday) && (\n                        <div className={cn(\n                          \"w-1 h-1 rounded-full ml-0.5\",\n                          holiday ? \"bg-red-500\" : \"bg-krushr-primary\"\n                        )} />\n                      )}\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <TooltipProvider>\n      <div ref={containerRef} className={cn(\"flex h-full bg-white\", className)}>\n        {/* Main Calendar Area */}\n      <div className=\"flex-1 flex flex-col\">\n        {/* Header */}\n        <div className=\"border-b border-gray-200/80 bg-gradient-to-r from-white to-gray-50/30\">\n          {/* Main Header Row */}\n          <div className={cn(\"flex items-center justify-between\", layoutConfig.headerPadding)}>\n            {/* Left Section: Navigation & Title */}\n            <div className=\"flex items-center min-w-0 flex-1\">\n              {/* Month Navigation Group */}\n              <div className=\"flex items-center bg-white/80 backdrop-blur-sm rounded-xl border border-gray-200/60 shadow-sm\">\n                <Button\n                  variant=\"ghost\" \n                  size=\"sm\"\n                  onClick={() => navigateMonth('prev')}\n                  className={cn(\n                    \"h-9 w-9 rounded-l-xl border-r border-gray-100/80 hover:bg-krushr-primary/5 hover:text-krushr-primary transition-all duration-200\",\n                    \"focus:ring-2 focus:ring-krushr-primary/20 focus:outline-none\"\n                  )}\n                  title=\"Previous month\"\n                >\n                  <ChevronLeft className=\"w-4 h-4\" />\n                </Button>\n                \n                <div className={cn(\n                  \"text-center py-2\",\n                  layoutConfig.size === 'micro' ? \"px-1 min-w-[50px]\" : \n                  layoutConfig.size === 'small' ? \"px-1.5 min-w-[60px]\" : \n                  \"px-2 min-w-[80px]\"\n                )}>\n                  <h2 className=\"font-semibold text-gray-900 font-manrope text-sm leading-none\">\n                    {layoutConfig.size === 'micro' ? format(currentDate, 'M/yy') :\n                     layoutConfig.size === 'small' ? format(currentDate, 'MMM yy') :\n                     layoutConfig.size === 'medium' ? format(currentDate, 'MMM yyyy') :\n                     format(currentDate, 'MMMM yyyy')}\n                  </h2>\n                  {layoutConfig.size === 'large' && (\n                    <div className=\"text-xs text-gray-500 mt-0.5 font-manrope\">\n                      {format(currentDate, 'yyyy')}\n                    </div>\n                  )}\n                </div>\n                \n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\" \n                  onClick={() => navigateMonth('next')}\n                  className={cn(\n                    \"h-9 w-9 rounded-r-xl border-l border-gray-100/80 hover:bg-krushr-primary/5 hover:text-krushr-primary transition-all duration-200\",\n                    \"focus:ring-2 focus:ring-krushr-primary/20 focus:outline-none\"\n                  )}\n                  title=\"Next month\"\n                >\n                  <ChevronRight className=\"w-4 h-4\" />\n                </Button>\n              </div>\n              \n              {/* Today Button - Elevated design */}\n              {layoutConfig.showToday && layoutConfig.size !== 'micro' && layoutConfig.size !== 'small' && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentDate(new Date())}\n                  className={cn(\n                    \"ml-3 bg-white/80 backdrop-blur-sm border-gray-200/60 hover:bg-krushr-primary hover:text-white hover:border-krushr-primary\",\n                    \"shadow-sm transition-all duration-200 font-manrope px-3 h-9\",\n                    \"focus:ring-2 focus:ring-krushr-primary/20 focus:outline-none\"\n                  )}\n                  title=\"Go to today\"\n                >\n                  <Clock className=\"w-3.5 h-3.5 mr-1.5\" />\n                  Today\n                </Button>\n              )}\n            </div>\n\n            {/* Right Section: Actions & Controls */}\n            <div className=\"flex items-center gap-2 ml-4\">\n              {/* View Toggle - Refined segmented control */}\n              {layoutConfig.showViewToggle && (\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl border border-gray-200/60 shadow-sm p-1\">\n                  <div className=\"flex\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setView('month')}\n                      className={cn(\n                        \"h-8 px-3 rounded-lg transition-all duration-200 relative\",\n                        view === 'month' \n                          ? \"bg-krushr-primary text-white shadow-md\" \n                          : \"text-gray-600 hover:bg-gray-50 hover:text-krushr-primary\"\n                      )}\n                      title=\"Month view\"\n                    >\n                      <CalendarIcon className=\"w-3.5 h-3.5\" />\n                      {layoutConfig.size === 'large' && <span className=\"ml-1.5 text-xs font-medium\">Month</span>}\n                    </Button>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setView('agenda')}\n                      className={cn(\n                        \"h-8 px-3 rounded-lg transition-all duration-200 relative\",\n                        view === 'agenda' \n                          ? \"bg-krushr-primary text-white shadow-md\" \n                          : \"text-gray-600 hover:bg-gray-50 hover:text-krushr-primary\"\n                      )}\n                      title=\"Agenda view\"\n                    >\n                      <List className=\"w-3.5 h-3.5\" />\n                      {layoutConfig.size === 'large' && <span className=\"ml-1.5 text-xs font-medium\">Agenda</span>}\n                    </Button>\n                  </div>\n                </div>\n              )}\n\n              {/* Secondary Actions Group */}\n              <div className=\"flex items-center bg-white/80 backdrop-blur-sm rounded-xl border border-gray-200/60 shadow-sm\">\n                {/* Search button */}\n                {layoutConfig.showSearch !== false && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowSearch(!showSearch)}\n                    className={cn(\n                      \"transition-all duration-200\",\n                      layoutConfig.size === 'micro' ? \"h-8 w-8 rounded-l-lg\" : \"h-9 w-9 rounded-l-xl\",\n                      showSearch \n                        ? \"bg-krushr-primary/10 text-krushr-primary\" \n                        : \"hover:bg-gray-50 hover:text-krushr-primary text-gray-500\",\n                      \"focus:ring-2 focus:ring-krushr-primary/20 focus:outline-none\"\n                    )}\n                    title=\"Search events\"\n                  >\n                    <Search className={cn(\n                      layoutConfig.size === 'micro' ? \"w-3.5 h-3.5\" : \"w-4 h-4\"\n                    )} />\n                  </Button>\n                )}\n\n                {/* Filter button */}\n                {layoutConfig.showFilters && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowFilters(!showFilters)}\n                    className={cn(\n                      \"border-l border-gray-100/80 hover:bg-gray-50 hover:text-krushr-primary text-gray-500 transition-all duration-200\",\n                      layoutConfig.size === 'micro' ? \"h-8 w-8\" : \"h-9 w-9\",\n                      \"focus:ring-2 focus:ring-krushr-primary/20 focus:outline-none\"\n                    )}\n                    title=\"Filter events\"\n                  >\n                    <Filter className={cn(\n                      layoutConfig.size === 'micro' ? \"w-3.5 h-3.5\" : \"w-4 h-4\"\n                    )} />\n                  </Button>\n                )}\n\n                {/* Add Event button - Primary CTA */}\n                {layoutConfig.showEventButton && (\n                  <Button\n                    variant=\"default\"\n                    size=\"sm\"\n                    onClick={() => setShowEventModal(true)}\n                    className={cn(\n                      \"bg-krushr-primary hover:bg-krushr-primary/90 text-white transition-all duration-200 shadow-md\",\n                      \"focus:ring-2 focus:ring-krushr-primary/40 focus:outline-none\",\n                      layoutConfig.size === 'micro' ? \"h-8 rounded-r-lg\" : \"h-9 rounded-r-xl\",\n                      layoutConfig.showSearch !== false ? \"border-l border-krushr-primary/20\" : \"rounded-xl\",\n                      layoutConfig.size === 'micro' ? \"px-2\" : \"px-3\"\n                    )}\n                    title=\"Create new task\"\n                  >\n                    <Plus className={cn(\n                      layoutConfig.size === 'micro' ? \"w-3.5 h-3.5\" : \"w-4 h-4\"\n                    )} />\n                    {layoutConfig.size === 'large' && <span className=\"ml-1.5 text-xs font-medium\">New Task</span>}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Search Bar - Floating overlay design */}\n          {showSearch && layoutConfig.showSearch !== false && (\n            <div className=\"px-4 pb-3 animate-in slide-in-from-top-2 duration-300\">\n              <div className=\"relative bg-white/95 backdrop-blur-sm rounded-xl border border-gray-200/60 shadow-lg\">\n                <Search className={cn(\n                  \"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\",\n                  layoutConfig.size === 'micro' ? \"w-3.5 h-3.5\" : \"w-4 h-4\"\n                )} />\n                <FloatingInput\n                  label=\"Search events, locations, or attendees...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-12 pr-4 h-12 border-0 bg-transparent font-manrope text-sm focus:ring-2 focus:ring-krushr-primary/20\"\n                  autoFocus\n                />\n                {searchQuery && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => {\n                      setSearchQuery('')\n                      setShowSearch(false)\n                    }}\n                    className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-8 w-8 rounded-lg hover:bg-gray-100\"\n                  >\n                    <X className=\"w-4 h-4\" />\n                  </Button>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Calendar Content */}\n        {view === 'agenda' ? (\n          <AgendaView workspaceId={workspaceId} className=\"flex-1\" />\n        ) : (\n          <div className={cn(\"flex-1\", layoutConfig.headerPadding)}>\n            <div className=\"grid grid-cols-7 gap-px bg-gray-200 rounded-lg overflow-hidden\">\n            {/* Day Headers */}\n            {(layoutConfig.size === 'micro' ? ['S','M','T','W','T','F','S'] : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']).map((day, index) => (\n              <div key={index} className={cn(\"bg-gray-50 text-center\", layoutConfig.size === 'micro' ? 'p-1' : 'p-2')}>\n                <span className={cn(\"font-medium text-gray-600 font-manrope\", layoutConfig.fontSize)}>{day}</span>\n              </div>\n            ))}\n            \n            {/* Calendar Days */}\n            {calendarDays.map(date => {\n              const dayEvents = getEventsForDay(date)\n              const isSelected = selectedDate && isSameDay(date, selectedDate)\n              const isCurrentMonth = isSameMonth(date, currentDate)\n              const isCurrentDay = isToday(date)\n              const holiday = getHolidayForDate(date)\n              \n              const maxEvents = layoutConfig.maxEventsPerDay\n              \n              return (\n                <div\n                  key={date.toISOString()}\n                  onClick={() => handleDateClick(date)}\n                  className={cn(\n                    \"bg-white cursor-pointer border-r border-b border-gray-100 hover:bg-gray-50 transition-colors\",\n                    layoutConfig.dayHeight,\n                    layoutConfig.size === 'micro' ? 'p-1' : 'p-2',\n                    !isCurrentMonth && \"bg-gray-50/50 text-gray-400 hover:bg-gray-100\",\n                    isSelected && \"bg-krushr-primary/5 border-krushr-primary\",\n                    isCurrentDay && \"bg-krushr-primary/10\",\n                    holiday && \"bg-red-50/50 border-red-200/50\"\n                  )}\n                  title={(() => {\n                    const tooltipParts = []\n                    \n                    if (holiday) {\n                      tooltipParts.push(`\uD83C\uDF89 ${holiday.name}`)\n                      if (holiday.type) {\n                        tooltipParts.push(`(${holiday.type})`)\n                      }\n                    }\n                    \n                    if (dayEvents.length > 0) {\n                      if (tooltipParts.length > 0) tooltipParts.push('\\n---\\n')\n                      tooltipParts.push(`\uD83D\uDCC5 ${dayEvents.length} event${dayEvents.length > 1 ? 's' : ''}:`)\n                      dayEvents.slice(0, 3).forEach(event => {\n                        const timeStr = event.allDay ? 'All day' : format(new Date(event.startTime), 'h:mm a')\n                        tooltipParts.push(`\u2022 ${timeStr}: ${event.title}`)\n                      })\n                      if (dayEvents.length > 3) {\n                        tooltipParts.push(`\u2022 +${dayEvents.length - 3} more events`)\n                      }\n                    }\n                    \n                    return tooltipParts.length > 0 ? tooltipParts.join('\\n') : undefined\n                  })()}\n                >\n                  <div className={cn(\"flex items-center justify-between\", layoutConfig.size !== 'micro' && \"mb-1\")}>\n                    <span className={cn(\n                      \"font-manrope\",\n                      layoutConfig.fontSize,\n                      isCurrentDay && \"font-semibold text-krushr-primary\",\n                      !isCurrentMonth && \"text-gray-400 opacity-75\",\n                      holiday && isCurrentMonth && \"text-red-600 font-medium\"\n                    )}>\n                      {format(date, 'd')}\n                    </span>\n                    {dayEvents.length > 0 && layoutConfig.size !== 'micro' && (\n                      <Badge variant=\"secondary\" className={cn(\"px-1 py-0\", layoutConfig.fontSize === 'text-xs' ? 'text-xs' : 'text-xs')}>\n                        {dayEvents.length}\n                      </Badge>\n                    )}\n                    {holiday && layoutConfig.size !== 'micro' && dayEvents.length === 0 && (\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <div className=\"w-1.5 h-1.5 bg-red-500 rounded-full cursor-pointer\" />\n                        </TooltipTrigger>\n                        <TooltipContent side=\"right\" className=\"max-w-xs\">\n                          <div className=\"space-y-1\">\n                            <div className=\"font-semibold text-sm flex items-center gap-2\">\n                              \uD83C\uDF89 {holiday.name}\n                            </div>\n                            <div className=\"text-xs text-gray-600\">\n                              {holiday.type}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">\n                              {format(date, 'EEEE, MMMM d, yyyy')}\n                            </div>\n                          </div>\n                        </TooltipContent>\n                      </Tooltip>\n                    )}\n                    {(dayEvents.length > 0 || holiday) && layoutConfig.size === 'micro' && (\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <div className={cn(\n                            \"w-1.5 h-1.5 rounded-full cursor-pointer\",\n                            holiday ? \"bg-red-500\" : \"bg-krushr-primary\"\n                          )} />\n                        </TooltipTrigger>\n                        <TooltipContent side=\"right\" className=\"max-w-xs\">\n                          <div className=\"space-y-1\">\n                            {holiday && (\n                              <>\n                                <div className=\"font-semibold text-sm flex items-center gap-2\">\n                                  \uD83C\uDF89 {holiday.name}\n                                </div>\n                                <div className=\"text-xs text-gray-600\">\n                                  {holiday.type}\n                                </div>\n                              </>\n                            )}\n                            {dayEvents.length > 0 && (\n                              <>\n                                {holiday && <div className=\"border-t border-gray-100 pt-1 mt-1\" />}\n                                <div className=\"text-xs text-gray-600\">\n                                  \uD83D\uDCC5 {dayEvents.length} event{dayEvents.length > 1 ? 's' : ''}\n                                </div>\n                                {dayEvents.slice(0, 3).map(event => (\n                                  <div key={event.id} className=\"text-xs text-gray-500\">\n                                    \u2022 {event.title}\n                                  </div>\n                                ))}\n                                {dayEvents.length > 3 && (\n                                  <div className=\"text-xs text-gray-400\">\n                                    +{dayEvents.length - 3} more\n                                  </div>\n                                )}\n                              </>\n                            )}\n                            <div className=\"text-xs text-gray-500 border-t border-gray-100 pt-1\">\n                              {format(date, 'EEEE, MMMM d, yyyy')}\n                            </div>\n                          </div>\n                        </TooltipContent>\n                      </Tooltip>\n                    )}\n                  </div>\n                  \n                  {/* Events for this day - hide in micro view */}\n                  {maxEvents > 0 && (\n                    <div className=\"space-y-0.5\">\n                      {dayEvents.slice(0, maxEvents).map(event => {\n                        const colorConfig = EVENT_COLORS[event.color as keyof typeof EVENT_COLORS] || EVENT_COLORS.blue\n                        const IconComponent = EVENT_TYPE_ICONS[event.type]\n                        \n                        return (\n                          <Tooltip key={event.id}>\n                            <TooltipTrigger asChild>\n                              <div\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  handleEventClick(event)\n                                }}\n                                className={cn(\n                                  \"rounded truncate cursor-pointer transition-colors hover:opacity-80 border\",\n                                  colorConfig.bg,\n                                  colorConfig.border,\n                                  colorConfig.text,\n                                  layoutConfig.size === 'small' ? 'p-0.5' : 'p-1',\n                                  !isCurrentMonth && \"opacity-60\"\n                                )}\n                              >\n                                <div className=\"flex items-center gap-1\">\n                                  {layoutConfig.size !== 'small' && <IconComponent className={cn(\"flex-shrink-0\", layoutConfig.iconSize)} />}\n                                  <span className={cn(\"truncate font-manrope\", layoutConfig.fontSize)}>{event.title}</span>\n                                  {event.priority !== 'LOW' && layoutConfig.size !== 'small' && (\n                                    <div className={cn(\"rounded-full flex-shrink-0\", PRIORITY_COLORS[event.priority], \n                                      layoutConfig.size === 'medium' ? 'w-1 h-1' : 'w-1.5 h-1.5')} />\n                                  )}\n                                </div>\n                              </div>\n                            </TooltipTrigger>\n                            <TooltipContent side=\"right\" className=\"max-w-xs\">\n                              <div className=\"space-y-2\">\n                                <div className=\"font-semibold text-sm\">{event.title}</div>\n                                <div className=\"text-xs space-y-1\">\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"font-medium\">Type:</span>\n                                    <Badge variant=\"secondary\" className=\"text-xs\">{event.type}</Badge>\n                                  </div>\n                                  <div className=\"flex items-center gap-2\">\n                                    <Clock className=\"w-3 h-3\" />\n                                    <span>\n                                      {event.allDay ? 'All day' : `${format(event.startTime, 'h:mm a')} - ${format(event.endTime, 'h:mm a')}`}\n                                    </span>\n                                  </div>\n                                  {event.location && (\n                                    <div className=\"flex items-center gap-2\">\n                                      <MapPin className=\"w-3 h-3\" />\n                                      <span>{event.location}</span>\n                                    </div>\n                                  )}\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"font-medium\">Priority:</span>\n                                    <Badge \n                                      variant={event.priority === 'HIGH' ? 'destructive' : \n                                              event.priority === 'MEDIUM' ? 'default' : 'secondary'}\n                                      className=\"text-xs\"\n                                    >\n                                      {event.priority}\n                                    </Badge>\n                                  </div>\n                                  {event.description && (\n                                    <div className=\"mt-2 pt-2 border-t border-gray-100\">\n                                      <span className=\"text-gray-700\">{event.description}</span>\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </TooltipContent>\n                          </Tooltip>\n                        )\n                      })}\n                      {dayEvents.length > maxEvents && (\n                        <div className={cn(\"text-gray-500 font-manrope pl-1\", layoutConfig.fontSize)}>\n                          +{dayEvents.length - maxEvents} more\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              )\n            })}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Right Sidebar - Event Details */}\n      {selectedDate && layoutConfig.showSidebar && (\n        <div className={cn(\"border-l border-gray-200 bg-gray-50\", \n          layoutConfig.size === 'medium' ? 'w-64' : 'w-80')}>\n          <div className={layoutConfig.headerPadding}>\n            <h3 className={cn(\"font-semibold text-gray-900 mb-2 font-manrope\", layoutConfig.fontSize)}>\n              {layoutConfig.size === 'medium' \n                ? format(selectedDate, 'MMM d')\n                : format(selectedDate, 'EEEE, MMMM d')}\n            </h3>\n            \n            {/* Show holiday information if present */}\n            {(() => {\n              const holiday = getHolidayForDate(selectedDate)\n              return holiday ? (\n                <div className=\"mb-3 p-2 bg-red-50 border border-red-200 rounded-lg\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-red-500 rounded-full\" />\n                    <span className={cn(\"text-red-700 font-medium font-manrope\", layoutConfig.fontSize)}>\n                      {holiday.name}\n                    </span>\n                  </div>\n                  {holiday.type && (\n                    <p className={cn(\"text-red-600 mt-1 font-manrope\", layoutConfig.fontSize === 'text-sm' ? 'text-xs' : 'text-xs')}>\n                      {holiday.type}\n                    </p>\n                  )}\n                </div>\n              ) : null\n            })()}\n            \n            {getEventsForDay(selectedDate).length === 0 ? (\n              <div className=\"text-center py-8\">\n                <CalendarIcon className={cn(\"text-gray-400 mx-auto mb-2\", layoutConfig.iconSize === 'w-4 h-4' ? 'w-6 h-6' : 'w-8 h-8')} />\n                <p className={cn(\"text-gray-500 font-manrope\", layoutConfig.fontSize)}>No events scheduled</p>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setShowEventModal(true)}\n                  className={cn(\"mt-2\", layoutConfig.buttonSize)}\n                >\n                  <Plus className={layoutConfig.iconSize} />\n                  <span className=\"ml-1\">Add Event</span>\n                </Button>\n              </div>\n            ) : (\n              <div className={cn(\"space-y-2\", layoutConfig.size === 'medium' && \"space-y-1\")}>\n                {getEventsForDay(selectedDate).map(event => {\n                  const colorConfig = EVENT_COLORS[event.color as keyof typeof EVENT_COLORS] || EVENT_COLORS.blue\n                  const IconComponent = EVENT_TYPE_ICONS[event.type]\n                  \n                  return (\n                    <Card key={event.id} className={cn(\"hover:shadow-sm transition-shadow cursor-pointer\", \n                      layoutConfig.size === 'medium' ? 'p-2' : 'p-3')} onClick={() => handleEventClick(event)}>\n                      <div className=\"flex items-start gap-2\">\n                        <div className={cn(\"rounded-lg\", colorConfig.bg, layoutConfig.size === 'medium' ? 'p-1.5' : 'p-2')}>\n                          <IconComponent className={cn(colorConfig.text, layoutConfig.iconSize)} />\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <h4 className={cn(\"font-medium text-gray-900 truncate font-manrope\", layoutConfig.fontSize)}>{event.title}</h4>\n                          <div className=\"flex items-center gap-2 mt-1\">\n                            <Clock className={cn(\"text-gray-400\", layoutConfig.iconSize)} />\n                            <span className={cn(\"text-gray-600 font-manrope\", layoutConfig.fontSize)}>\n                              {event.allDay ? 'All day' : `${format(event.startTime, 'h:mm a')} - ${format(event.endTime, 'h:mm a')}`}\n                            </span>\n                          </div>\n                          {event.location && (\n                            <div className=\"flex items-center gap-2 mt-1\">\n                              <MapPin className={cn(\"text-gray-400\", layoutConfig.iconSize)} />\n                              <span className={cn(\"text-gray-600 truncate font-manrope\", layoutConfig.fontSize)}>{event.location}</span>\n                            </div>\n                          )}\n                          <div className=\"flex items-center gap-2 mt-2\">\n                            <Badge variant=\"outline\" className={layoutConfig.fontSize}>\n                              {event.type}\n                            </Badge>\n                            {event.priority !== 'LOW' && (\n                              <div className={cn(\"rounded-full\", PRIORITY_COLORS[event.priority], \n                                layoutConfig.size === 'medium' ? 'w-1.5 h-1.5' : 'w-2 h-2')} />\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </Card>\n                  )\n                })}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Task Creation Modal - Reusing existing kanban form */}\n      <CompactTaskModal\n        open={showEventModal}\n        onClose={() => {\n          setShowEventModal(false)\n          setSelectedEvent(null)\n        }}\n        onTaskCreated={() => {\n          // Refresh events data\n          window.location.reload() // Simple refresh for now\n        }}\n        workspaceId={workspaceId}\n        task={selectedEvent}\n        isEditMode={!!selectedEvent}\n        mode=\"calendar\"\n        selectedDate={selectedDate}\n      />\n      </div>\n    </TooltipProvider>\n  )\n}", "import React, { useState, useMemo } from 'react'\nimport { \n  Clock, \n  MapPin, \n  Users, \n  CheckCircle2, \n  AlertCircle, \n  Calendar,\n  Zap,\n  ChevronDown,\n  ChevronRight,\n  MoreHorizontal,\n  Phone,\n  Video,\n  Building,\n  Coffee,\n  Target,\n  TrendingUp,\n  FileText,\n  MessageSquare\n} from 'lucide-react'\nimport { Card, CardContent } from '../ui/card'\nimport { Badge } from '../ui/badge'\nimport { Button } from '../ui/button'\nimport { cn } from '../../lib/utils'\nimport { format, startOfWeek, endOfWeek, eachDayOfInterval, isSameDay, addDays, isToday, isTomorrow, isYesterday, startOfDay, endOfDay } from 'date-fns'\nimport { formatDateShort } from '../../../../shared/utils'\nimport { trpc } from '../../lib/trpc'\n\ninterface AgendaViewProps {\n  workspaceId: string\n  className?: string\n}\n\ninterface AgendaItem {\n  id: string\n  title: string\n  description?: string\n  startTime: Date\n  endTime: Date\n  location?: string\n  type: 'meeting' | 'task' | 'deadline' | 'call' | 'review' | 'planning'\n  priority: 'low' | 'medium' | 'high' | 'critical'\n  status: 'pending' | 'confirmed' | 'completed' | 'cancelled'\n  attendees?: string[]\n  tags?: string[]\n  notes?: string\n}\n\nconst TYPE_ICONS = {\n  meeting: Users,\n  task: CheckCircle2,\n  deadline: Zap,\n  call: Phone,\n  review: FileText,\n  planning: Target\n}\n\nconst PRIORITY_COLORS = {\n  low: 'bg-gray-400',\n  medium: 'bg-krushr-priority-medium',\n  high: 'bg-krushr-priority-high',\n  critical: 'bg-krushr-priority-critical'\n}\n\nconst STATUS_COLORS = {\n  pending: 'border-gray-300 bg-gray-50',\n  confirmed: 'border-krushr-primary/20 bg-krushr-primary/5',\n  completed: 'border-krushr-success/20 bg-krushr-success/5',\n  cancelled: 'border-red-300 bg-red-50'\n}\n\nexport default function AgendaView({ workspaceId, className }: AgendaViewProps) {\n  const [expandedDays, setExpandedDays] = useState<Set<string>>(new Set(['today']))\n  const [selectedItem, setSelectedItem] = useState<AgendaItem | null>(null)\n\n  // Fetch calendar events for the next 3 days\n  const today = new Date()\n  const tomorrow = addDays(today, 1)\n  const dayAfter = addDays(today, 2)\n  \n  const { data: calendarEvents } = trpc.calendar.list.useQuery({\n    workspaceId,\n    startDate: startOfDay(today).toISOString(),\n    endDate: endOfDay(dayAfter).toISOString()\n  })\n\n  const groupedAgenda = useMemo(() => {\n    if (!calendarEvents) {\n      return []\n    }\n\n    // Transform calendar events to agenda items\n    const agendaItems: AgendaItem[] = calendarEvents.map(event => ({\n      id: event.id,\n      title: event.title,\n      description: event.description || undefined,\n      startTime: new Date(event.startTime),\n      endTime: new Date(event.endTime),\n      location: event.location || undefined,\n      type: event.type === 'MEETING' ? 'meeting' : \n            event.type === 'TASK' ? 'task' :\n            event.type === 'EVENT' ? 'meeting' : 'meeting',\n      priority: 'medium', // Calendar events don't have priority, default to medium\n      status: 'confirmed',\n      attendees: event.attendees?.map(a => a.user?.name || a.user?.email || 'Unknown') || [],\n      tags: event.type ? [event.type.toLowerCase()] : [],\n      notes: event.description || undefined\n    }))\n\n    const groups = [\n      {\n        key: 'today',\n        label: 'Today',\n        date: today,\n        items: agendaItems.filter(item => isSameDay(item.startTime, today))\n      },\n      {\n        key: 'tomorrow',\n        label: `Tomorrow (${formatDateShort(tomorrow)})`,\n        date: tomorrow,\n        items: agendaItems.filter(item => isSameDay(item.startTime, tomorrow))\n      },\n      {\n        key: 'dayafter',\n        label: formatDateShort(dayAfter),\n        date: dayAfter,\n        items: agendaItems.filter(item => isSameDay(item.startTime, dayAfter))\n      }\n    ]\n\n    return groups.filter(group => group.items.length > 0)\n  }, [calendarEvents, today, tomorrow, dayAfter])\n\n  const toggleDayExpansion = (dayKey: string) => {\n    const newExpanded = new Set(expandedDays)\n    if (newExpanded.has(dayKey)) {\n      newExpanded.delete(dayKey)\n    } else {\n      newExpanded.add(dayKey)\n    }\n    setExpandedDays(newExpanded)\n  }\n\n  const getTimeString = (startTime: Date, endTime: Date) => {\n    return `${format(startTime, 'h:mm a')} - ${format(endTime, 'h:mm a')}`\n  }\n\n  const getDayStats = (items: AgendaItem[]) => {\n    const meetings = items.filter(item => item.type === 'meeting' || item.type === 'call').length\n    const tasks = items.filter(item => item.type === 'task' || item.type === 'review').length\n    const critical = items.filter(item => item.priority === 'critical').length\n    \n    return { meetings, tasks, critical }\n  }\n\n  return (\n    <div className={cn(\"flex h-full bg-white\", className)}>\n      {/* Main Agenda List */}\n      <div className=\"flex-1 flex flex-col\">\n        <div className=\"px-3 py-1.5 border-b border-gray-200\">\n          <h2 className=\"text-sm font-medium text-gray-900 font-manrope\">\n            Executive Agenda\n          </h2>\n        </div>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          {groupedAgenda.map(group => {\n            const isExpanded = expandedDays.has(group.key)\n            const stats = getDayStats(group.items)\n            const isToday = isSameDay(group.date, new Date())\n\n            return (\n              <div key={group.key} className=\"border-b border-gray-100/50\">\n                <button\n                  onClick={() => toggleDayExpansion(group.key)}\n                  className={cn(\n                    \"w-full px-3 py-1.5 flex items-center justify-between hover:bg-gray-50 transition-colors\",\n                    isToday && \"bg-krushr-primary/5\"\n                  )}\n                >\n                  <div className=\"flex items-center gap-1.5\">\n                    {isExpanded ? (\n                      <ChevronDown className=\"w-3 h-3 text-gray-400\" />\n                    ) : (\n                      <ChevronRight className=\"w-3 h-3 text-gray-400\" />\n                    )}\n                    <h3 className={cn(\n                      \"font-medium text-xs font-manrope\",\n                      isToday ? \"text-krushr-primary\" : \"text-gray-900\"\n                    )}>\n                      {group.label} ({group.items.length})\n                    </h3>\n                  </div>\n                  \n                  <div className=\"flex items-center gap-1.5\">\n                    {stats.critical > 0 && (\n                      <Badge variant=\"destructive\" className=\"text-xs px-1 py-0 h-3.5 text-xs\">\n                        {stats.critical}\n                      </Badge>\n                    )}\n                    <span className=\"text-xs text-gray-500 font-manrope\">\n                      {stats.meetings}m \u2022 {stats.tasks}t\n                    </span>\n                  </div>\n                </button>\n\n                {isExpanded && (\n                  <div className=\"px-3 pb-1\">\n                    <div className=\"space-y-0.5\">\n                      {group.items.map(item => {\n                        const IconComponent = TYPE_ICONS[item.type]\n                        const priorityColor = PRIORITY_COLORS[item.priority]\n\n                        return (\n                          <div \n                            key={item.id}\n                            className={cn(\n                              \"border-l-2 pl-2 py-1 cursor-pointer hover:bg-gray-50 transition-colors rounded-r text-xs\",\n                              item.priority === 'critical' && \"border-l-krushr-priority-critical bg-red-50/30\",\n                              item.priority === 'high' && \"border-l-krushr-priority-high bg-orange-50/30\",\n                              item.priority === 'medium' && \"border-l-krushr-priority-medium bg-yellow-50/30\",\n                              item.priority === 'low' && \"border-l-gray-400 bg-gray-50/30\"\n                            )}\n                            onClick={() => setSelectedItem(item)}\n                          >\n                            <div className=\"flex items-center gap-1.5 mb-0.5\">\n                              <IconComponent className=\"w-2.5 h-2.5 text-krushr-primary flex-shrink-0\" />\n                              <div className={cn(\"w-1 h-1 rounded-full flex-shrink-0\", priorityColor)} />\n                              <h4 className=\"font-medium text-xs text-gray-900 font-manrope truncate flex-1\">{item.title}</h4>\n                              <div className=\"flex items-center gap-0.5 text-xs text-gray-500 font-manrope\">\n                                <Clock className=\"w-2.5 h-2.5\" />\n                                {format(item.startTime, 'h:mm a')}\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center justify-between text-xs text-gray-600 pl-4\">\n                              <div className=\"flex items-center gap-1.5 truncate\">\n                                {item.location && (\n                                  <div className=\"flex items-center gap-0.5\">\n                                    {item.location.includes('Zoom') || item.location.includes('Teams') ? (\n                                      <Video className=\"w-2.5 h-2.5\" />\n                                    ) : (\n                                      <MapPin className=\"w-2.5 h-2.5\" />\n                                    )}\n                                    <span className=\"truncate text-xs\">{item.location}</span>\n                                  </div>\n                                )}\n                                {item.attendees && item.attendees.length > 0 && (\n                                  <div className=\"flex items-center gap-0.5\">\n                                    <Users className=\"w-2.5 h-2.5\" />\n                                    <span className=\"text-xs\">{item.attendees.length}</span>\n                                  </div>\n                                )}\n                              </div>\n                              \n                              {item.tags && item.tags.length > 0 && (\n                                <div className=\"flex gap-0.5\">\n                                  {item.tags.slice(0, 1).map(tag => (\n                                    <Badge key={tag} variant=\"outline\" className=\"text-xs px-1 py-0 h-3.5\">\n                                      {tag}\n                                    </Badge>\n                                  ))}\n                                  {item.tags.length > 1 && (\n                                    <span className=\"text-xs text-gray-400\">+{item.tags.length - 1}</span>\n                                  )}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n\n      {/* Details Sidebar */}\n      {selectedItem && (\n        <div className=\"w-72 border-l border-gray-200 bg-gray-50\">\n          <div className=\"p-3\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"font-medium text-sm text-gray-900 font-manrope\">Details</h3>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => setSelectedItem(null)}\n                className=\"p-1 h-5 w-5\"\n              >\n                \u2715\n              </Button>\n            </div>\n\n            <div className=\"space-y-2\">\n              <div>\n                <h4 className=\"font-medium text-sm text-gray-900 mb-1 font-manrope\">{selectedItem.title}</h4>\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Badge variant=\"outline\" className=\"text-xs px-1 py-0\">\n                    {selectedItem.type}\n                  </Badge>\n                  <div className={cn(\"w-2 h-2 rounded-full\", PRIORITY_COLORS[selectedItem.priority])} />\n                  <span className=\"text-xs text-gray-600 capitalize\">{selectedItem.priority}</span>\n                </div>\n                {selectedItem.description && (\n                  <p className=\"text-xs text-gray-600 font-manrope leading-relaxed\">{selectedItem.description}</p>\n                )}\n              </div>\n\n              <div className=\"space-y-1.5 text-xs\">\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"w-3 h-3 text-gray-400\" />\n                  <span className=\"font-manrope\">{getTimeString(selectedItem.startTime, selectedItem.endTime)}</span>\n                </div>\n                \n                {selectedItem.location && (\n                  <div className=\"flex items-center gap-2\">\n                    {selectedItem.location.includes('Zoom') || selectedItem.location.includes('Teams') ? (\n                      <Video className=\"w-3 h-3 text-gray-400\" />\n                    ) : (\n                      <MapPin className=\"w-3 h-3 text-gray-400\" />\n                    )}\n                    <span className=\"font-manrope\">{selectedItem.location}</span>\n                  </div>\n                )}\n\n                {selectedItem.attendees && selectedItem.attendees.length > 0 && (\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"w-3 h-3 text-gray-400\" />\n                    <span className=\"font-manrope\">{selectedItem.attendees.length} attendees</span>\n                  </div>\n                )}\n              </div>\n\n              {selectedItem.attendees && selectedItem.attendees.length > 0 && (\n                <div>\n                  <h5 className=\"font-medium text-xs text-gray-900 mb-1 font-manrope\">Attendees</h5>\n                  <div className=\"space-y-0.5\">\n                    {selectedItem.attendees.slice(0, 4).map(attendee => (\n                      <div key={attendee} className=\"text-xs text-gray-600 font-manrope\">\n                        {attendee}\n                      </div>\n                    ))}\n                    {selectedItem.attendees.length > 4 && (\n                      <div className=\"text-xs text-gray-400\">+{selectedItem.attendees.length - 4} more</div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              {selectedItem.notes && (\n                <div>\n                  <h5 className=\"font-medium text-xs text-gray-900 mb-1 font-manrope\">Notes</h5>\n                  <p className=\"text-xs text-gray-600 font-manrope bg-white p-2 rounded border leading-relaxed\">\n                    {selectedItem.notes}\n                  </p>\n                </div>\n              )}\n\n              {selectedItem.tags && selectedItem.tags.length > 0 && (\n                <div>\n                  <h5 className=\"font-medium text-xs text-gray-900 mb-1 font-manrope\">Tags</h5>\n                  <div className=\"flex flex-wrap gap-1\">\n                    {selectedItem.tags.map(tag => (\n                      <Badge key={tag} variant=\"outline\" className=\"text-xs px-1 py-0\">\n                        {tag}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],
  "mappings": "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",
  "names": ["import_react", "isToday", "import_jsx_runtime", "PRIORITY_COLORS", "React"]
}
