import{c as C,d as W}from"/chunks/chunk-UTGMEFH3.js";var N=t=>{let r,e=new Set,o=(i,v)=>{let S=typeof i=="function"?i(r):i;if(!Object.is(S,r)){let f=r;r=v??(typeof S!="object"||S===null)?S:Object.assign({},r,S),e.forEach(p=>p(r,f))}},n=()=>r,l={setState:o,getState:n,getInitialState:()=>u,subscribe:i=>(e.add(i),()=>e.delete(i))},u=r=t(o,n,l);return l},I=t=>t?N(t):N;var g=C(W(),1);var P=t=>t;function D(t,r=P){let e=g.default.useSyncExternalStore(t.subscribe,()=>r(t.getState()),()=>r(t.getInitialState()));return g.default.useDebugValue(e),e}var _=t=>{let r=I(t),e=o=>D(r,o);return Object.assign(e,r),e},O=t=>t?_(t):_;var U=t=>(r,e,o)=>{let n=o.subscribe;return o.subscribe=(c,l,u)=>{let i=c;if(l){let v=u?.equalityFn||Object.is,S=c(o.getState());i=f=>{let p=c(f);if(!v(S,p)){let E=S;l(S=p,E)}},u?.fireImmediately&&l(S,S)}return n(i)},t(r,e,o)},y=U;function x(t,r){let e;try{e=t()}catch{return}return{getItem:n=>{var s;let c=u=>u===null?null:JSON.parse(u,r?.reviver),l=(s=e.getItem(n))!=null?s:null;return l instanceof Promise?l.then(c):c(l)},setItem:(n,s)=>e.setItem(n,JSON.stringify(s,r?.replacer)),removeItem:n=>e.removeItem(n)}}var h=t=>r=>{try{let e=t(r);return e instanceof Promise?e:{then(o){return h(o)(e)},catch(o){return this}}}catch(e){return{then(o){return this},catch(o){return h(o)(e)}}}},M=(t,r)=>(e,o,n)=>{let s={storage:x(()=>localStorage),partialize:a=>a,version:0,merge:(a,b)=>({...b,...a}),...r},c=!1,l=new Set,u=new Set,i=s.storage;if(!i)return t((...a)=>{console.warn(`[zustand persist middleware] Unable to update item '${s.name}', the given storage is currently unavailable.`),e(...a)},o,n);let v=()=>{let a=s.partialize({...o()});return i.setItem(s.name,{state:a,version:s.version})},S=n.setState;n.setState=(a,b)=>{S(a,b),v()};let f=t((...a)=>{e(...a),v()},o,n);n.getInitialState=()=>f;let p,E=()=>{var a,b;if(!i)return;c=!1,l.forEach(d=>{var m;return d((m=o())!=null?m:f)});let A=((b=s.onRehydrateStorage)==null?void 0:b.call(s,(a=o())!=null?a:f))||void 0;return h(i.getItem.bind(i))(s.name).then(d=>{if(d)if(typeof d.version=="number"&&d.version!==s.version){if(s.migrate){let m=s.migrate(d.state,d.version);return m instanceof Promise?m.then(T=>[!0,T]):[!0,m]}console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}else return[!1,d.state];return[!1,void 0]}).then(d=>{var m;let[T,R]=d;if(p=s.merge(R,(m=o())!=null?m:f),e(p,!0),T)return v()}).then(()=>{A?.(p,void 0),p=o(),c=!0,u.forEach(d=>d(p))}).catch(d=>{A?.(void 0,d)})};return n.persist={setOptions:a=>{s={...s,...a},a.storage&&(i=a.storage)},clearStorage:()=>{i?.removeItem(s.name)},getOptions:()=>s,rehydrate:()=>E(),hasHydrated:()=>c,onHydrate:a=>(l.add(a),()=>{l.delete(a)}),onFinishHydration:a=>(u.add(a),()=>{u.delete(a)})},s.skipHydration||E(),p||f},G=M;var J={LOGIN:"/auth/login",REGISTER:"/auth/register",LOGOUT:"/auth/logout",ME:"/auth/me",WORKSPACES:"/workspaces",TEAMS:"/teams",KANBANS:"/kanbans",TASKS:"/tasks",PANELS:"/panels",NOTIFICATIONS:"/notifications",EMAILS:"/emails",CALENDAR:"/calendar",CHAT:"/chat",PERSONAL_CHAT:"/chat/personal",TEAM_CHAT:"/chat/team",OPENAI:"/openai",TAGS:"/tags"};var k={PERSONAL_CHAT_MESSAGE:"personal-chat-message",TEAM_CHAT_MESSAGE:"team-chat-message",NOTIFICATION_CREATED:"notification-created",TASK_UPDATED:"task-updated",KANBAN_UPDATED:"kanban-updated",USER_ONLINE:"user-online",USER_OFFLINE:"user-offline"};var w=O()(y((t,r)=>({user:null,isAuthenticated:!1,workspaces:[],activeWorkspace:null,teams:[],kanbans:[],tasks:[],notifications:[],sidebarOpen:!0,currentPage:"home",loading:!1,error:null,websocket:{connected:!1,socket:null,reconnectAttempts:0,maxReconnectAttempts:5},setUser:e=>t({user:e,isAuthenticated:!!e}),setActiveWorkspace:e=>t({activeWorkspace:e}),setWorkspaces:e=>t({workspaces:e}),setTeams:e=>t({teams:e}),setKanbans:e=>t({kanbans:e}),setTasks:e=>t({tasks:e}),addTask:e=>t(o=>({tasks:[...o.tasks,e]})),updateTask:(e,o)=>t(n=>({tasks:n.tasks.map(s=>s.id===e?{...s,...o}:s)})),deleteTask:e=>t(o=>({tasks:o.tasks.filter(n=>n.id!==e)})),setNotifications:e=>t({notifications:e}),addNotification:e=>t(o=>({notifications:[e,...o.notifications]})),markNotificationRead:e=>t(o=>({notifications:o.notifications.map(n=>n.id===e?{...n,is_read:!0}:n)})),setSidebarOpen:e=>t({sidebarOpen:e}),setCurrentPage:e=>t({currentPage:e}),setLoading:e=>t({loading:e}),setError:e=>t({error:e}),connectWebSocket:()=>{let e=r();if(e.websocket.socket||!e.isAuthenticated)return;let o="wss://api.krushr.app/ws";try{let n=new WebSocket(o);n.onopen=()=>{console.log("WebSocket connected"),t(s=>({websocket:{...s.websocket,connected:!0,socket:n,reconnectAttempts:0}}))},n.onmessage=s=>{try{let c=JSON.parse(s.data);L(c,t,r)}catch(c){console.error("WebSocket message parse error:",c)}},n.onclose=()=>{console.log("WebSocket disconnected"),t(c=>({websocket:{...c.websocket,connected:!1,socket:null}}));let s=r();s.websocket.reconnectAttempts<s.websocket.maxReconnectAttempts&&setTimeout(()=>{t(c=>({websocket:{...c.websocket,reconnectAttempts:c.websocket.reconnectAttempts+1}})),r().connectWebSocket()},2e3*Math.pow(2,s.websocket.reconnectAttempts))},n.onerror=s=>{console.error("WebSocket error:",s),t({error:"Connection error occurred"})}}catch(n){console.error("WebSocket connection failed:",n),t({error:"Failed to connect to real-time service"})}},disconnectWebSocket:()=>{let e=r();e.websocket.socket&&(e.websocket.socket.close(),t(o=>({websocket:{...o.websocket,connected:!1,socket:null}})))},sendMessage:(e,o)=>{let n=r();n.websocket.connected&&n.websocket.socket&&n.websocket.socket.send(JSON.stringify({event:e,data:o,timestamp:new Date().toISOString()}))}})));function L(t,r,e){let{event:o,data:n}=t;switch(o){case k.TASK_UPDATED:e().updateTask(n.id,n);break;case k.KANBAN_UPDATED:r(s=>({kanbans:s.kanbans.map(c=>c.id===n.id?n:c)}));break;case k.NOTIFICATION_CREATED:e().addNotification(n);break;case k.PERSONAL_CHAT_MESSAGE:case k.TEAM_CHAT_MESSAGE:console.log("Chat message received:",n);break;case k.USER_ONLINE:case k.USER_OFFLINE:console.log("User presence change:",n);break;default:console.log("Unknown WebSocket event:",o,n)}}var $=()=>{let t=w(e=>e.websocket.connected),r=w(e=>e.sendMessage);return{connected:t,sendMessage:r}};export{O as a,G as b,J as c,w as d,$ as e};
