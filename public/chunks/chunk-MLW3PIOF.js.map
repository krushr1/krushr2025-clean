{
  "version": 3,
  "sources": ["../../frontend/src/components/kanban/KanbanBoard.tsx", "../../node_modules/@dnd-kit/utilities/src/hooks/useCombinedRefs.ts", "../../node_modules/@dnd-kit/utilities/src/execution-context/canUseDOM.ts", "../../node_modules/@dnd-kit/utilities/src/type-guards/isWindow.ts", "../../node_modules/@dnd-kit/utilities/src/type-guards/isNode.ts", "../../node_modules/@dnd-kit/utilities/src/execution-context/getWindow.ts", "../../node_modules/@dnd-kit/utilities/src/type-guards/isDocument.ts", "../../node_modules/@dnd-kit/utilities/src/type-guards/isHTMLElement.ts", "../../node_modules/@dnd-kit/utilities/src/type-guards/isSVGElement.ts", "../../node_modules/@dnd-kit/utilities/src/execution-context/getOwnerDocument.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useIsomorphicLayoutEffect.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useEvent.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useInterval.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useLatestValue.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useLazyMemo.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useNodeRef.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/usePrevious.ts", "../../node_modules/@dnd-kit/utilities/src/hooks/useUniqueId.ts", "../../node_modules/@dnd-kit/utilities/src/adjustment.ts", "../../node_modules/@dnd-kit/utilities/src/event/hasViewportRelativeCoordinates.ts", "../../node_modules/@dnd-kit/utilities/src/event/isKeyboardEvent.ts", "../../node_modules/@dnd-kit/utilities/src/event/isTouchEvent.ts", "../../node_modules/@dnd-kit/utilities/src/coordinates/getEventCoordinates.ts", "../../node_modules/@dnd-kit/utilities/src/css.ts", "../../node_modules/@dnd-kit/utilities/src/focus/findFirstFocusableNode.ts", "../../node_modules/@dnd-kit/accessibility/src/components/HiddenText/HiddenText.tsx", "../../node_modules/@dnd-kit/accessibility/src/components/LiveRegion/LiveRegion.tsx", "../../node_modules/@dnd-kit/accessibility/src/hooks/useAnnouncement.ts", "../../node_modules/@dnd-kit/core/src/components/DndMonitor/context.ts", "../../node_modules/@dnd-kit/core/src/components/DndMonitor/useDndMonitor.ts", "../../node_modules/@dnd-kit/core/src/components/DndMonitor/useDndMonitorProvider.tsx", "../../node_modules/@dnd-kit/core/src/components/Accessibility/defaults.ts", "../../node_modules/@dnd-kit/core/src/components/Accessibility/Accessibility.tsx", "../../node_modules/@dnd-kit/core/src/store/actions.ts", "../../node_modules/@dnd-kit/core/src/utilities/other/noop.ts", "../../node_modules/@dnd-kit/core/src/sensors/useSensor.ts", "../../node_modules/@dnd-kit/core/src/sensors/useSensors.ts", "../../node_modules/@dnd-kit/core/src/utilities/coordinates/constants.ts", "../../node_modules/@dnd-kit/core/src/utilities/coordinates/distanceBetweenPoints.ts", "../../node_modules/@dnd-kit/core/src/utilities/coordinates/getRelativeTransformOrigin.ts", "../../node_modules/@dnd-kit/core/src/utilities/algorithms/helpers.ts", "../../node_modules/@dnd-kit/core/src/utilities/algorithms/closestCenter.ts", "../../node_modules/@dnd-kit/core/src/utilities/algorithms/closestCorners.ts", "../../node_modules/@dnd-kit/core/src/utilities/algorithms/rectIntersection.ts", "../../node_modules/@dnd-kit/core/src/utilities/algorithms/pointerWithin.ts", "../../node_modules/@dnd-kit/core/src/utilities/rect/adjustScale.ts", "../../node_modules/@dnd-kit/core/src/utilities/rect/getRectDelta.ts", "../../node_modules/@dnd-kit/core/src/utilities/rect/rectAdjustment.ts", "../../node_modules/@dnd-kit/core/src/utilities/transform/parseTransform.ts", "../../node_modules/@dnd-kit/core/src/utilities/transform/inverseTransform.ts", "../../node_modules/@dnd-kit/core/src/utilities/rect/getRect.ts", "../../node_modules/@dnd-kit/core/src/utilities/rect/getWindowClientRect.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/isFixed.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/isScrollable.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollableAncestors.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollableElement.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollCoordinates.ts", "../../node_modules/@dnd-kit/core/src/types/direction.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/documentScrollingElement.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollPosition.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollDirectionAndSpeed.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollElementRect.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/getScrollOffsets.ts", "../../node_modules/@dnd-kit/core/src/utilities/scroll/scrollIntoViewIfNeeded.ts", "../../node_modules/@dnd-kit/core/src/utilities/rect/Rect.ts", "../../node_modules/@dnd-kit/core/src/sensors/utilities/Listeners.ts", "../../node_modules/@dnd-kit/core/src/sensors/utilities/getEventListenerTarget.ts", "../../node_modules/@dnd-kit/core/src/sensors/utilities/hasExceededDistance.ts", "../../node_modules/@dnd-kit/core/src/sensors/events.ts", "../../node_modules/@dnd-kit/core/src/sensors/keyboard/types.ts", "../../node_modules/@dnd-kit/core/src/sensors/keyboard/defaults.ts", "../../node_modules/@dnd-kit/core/src/sensors/keyboard/KeyboardSensor.ts", "../../node_modules/@dnd-kit/core/src/sensors/pointer/AbstractPointerSensor.ts", "../../node_modules/@dnd-kit/core/src/sensors/pointer/PointerSensor.ts", "../../node_modules/@dnd-kit/core/src/sensors/mouse/MouseSensor.ts", "../../node_modules/@dnd-kit/core/src/sensors/touch/TouchSensor.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useAutoScroller.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useCachedNode.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useCombineActivators.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useDroppableMeasuring.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useInitialValue.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useInitialRect.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useMutationObserver.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useResizeObserver.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useRect.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useRectDelta.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useScrollableAncestors.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useScrollOffsets.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useScrollOffsetsDelta.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useSensorSetup.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useSyntheticListeners.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useWindowRect.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useRects.ts", "../../node_modules/@dnd-kit/core/src/utilities/nodes/getMeasurableNode.ts", "../../node_modules/@dnd-kit/core/src/hooks/utilities/useDragOverlayMeasuring.ts", "../../node_modules/@dnd-kit/core/src/components/DndContext/defaults.ts", "../../node_modules/@dnd-kit/core/src/store/constructors.ts", "../../node_modules/@dnd-kit/core/src/store/context.ts", "../../node_modules/@dnd-kit/core/src/store/reducer.ts", "../../node_modules/@dnd-kit/core/src/components/Accessibility/components/RestoreFocus.tsx", "../../node_modules/@dnd-kit/core/src/modifiers/applyModifiers.ts", "../../node_modules/@dnd-kit/core/src/components/DndContext/hooks/useMeasuringConfiguration.ts", "../../node_modules/@dnd-kit/core/src/components/DndContext/hooks/useLayoutShiftScrollCompensation.ts", "../../node_modules/@dnd-kit/core/src/components/DndContext/DndContext.tsx", "../../node_modules/@dnd-kit/core/src/hooks/useDraggable.ts", "../../node_modules/@dnd-kit/core/src/hooks/useDndContext.ts", "../../node_modules/@dnd-kit/core/src/hooks/useDroppable.ts", "../../node_modules/@dnd-kit/core/src/components/DragOverlay/components/AnimationManager/AnimationManager.tsx", "../../node_modules/@dnd-kit/core/src/components/DragOverlay/components/NullifiedContextProvider/NullifiedContextProvider.tsx", "../../node_modules/@dnd-kit/core/src/components/DragOverlay/components/PositionedOverlay/PositionedOverlay.tsx", "../../node_modules/@dnd-kit/core/src/components/DragOverlay/hooks/useDropAnimation.ts", "../../node_modules/@dnd-kit/core/src/components/DragOverlay/hooks/useKey.ts", "../../node_modules/@dnd-kit/core/src/components/DragOverlay/DragOverlay.tsx", "../../node_modules/@dnd-kit/sortable/src/utilities/arrayMove.ts", "../../node_modules/@dnd-kit/sortable/src/utilities/arraySwap.ts", "../../node_modules/@dnd-kit/sortable/src/utilities/getSortedRects.ts", "../../node_modules/@dnd-kit/sortable/src/utilities/isValidIndex.ts", "../../node_modules/@dnd-kit/sortable/src/utilities/itemsEqual.ts", "../../node_modules/@dnd-kit/sortable/src/utilities/normalizeDisabled.ts", "../../node_modules/@dnd-kit/sortable/src/strategies/horizontalListSorting.ts", "../../node_modules/@dnd-kit/sortable/src/strategies/rectSorting.ts", "../../node_modules/@dnd-kit/sortable/src/strategies/rectSwapping.ts", "../../node_modules/@dnd-kit/sortable/src/strategies/verticalListSorting.ts", "../../node_modules/@dnd-kit/sortable/src/components/SortableContext.tsx", "../../node_modules/@dnd-kit/sortable/src/hooks/defaults.ts", "../../node_modules/@dnd-kit/sortable/src/hooks/utilities/useDerivedTransform.ts", "../../node_modules/@dnd-kit/sortable/src/hooks/useSortable.ts", "../../node_modules/@dnd-kit/sortable/src/types/type-guard.ts", "../../node_modules/@dnd-kit/sortable/src/sensors/keyboard/sortableKeyboardCoordinates.ts", "../../frontend/src/components/kanban/TaskCard.tsx", "../../frontend/src/components/kanban/KanbanColumn.tsx", "../../node_modules/date-fns/compareAsc.mjs", "../../node_modules/date-fns/differenceInCalendarMonths.mjs", "../../node_modules/date-fns/_lib/getRoundingMethod.mjs", "../../node_modules/date-fns/differenceInMilliseconds.mjs", "../../node_modules/date-fns/isLastDayOfMonth.mjs", "../../node_modules/date-fns/differenceInMonths.mjs", "../../node_modules/date-fns/differenceInSeconds.mjs", "../../node_modules/date-fns/formatDistance.mjs", "../../node_modules/date-fns/formatDistanceToNow.mjs", "../../frontend/src/components/task/TaskDetail.tsx", "../../frontend/src/components/ui/sheet.tsx", "../../node_modules/@radix-ui/react-dialog/src/dialog.tsx", "../../node_modules/@radix-ui/react-focus-scope/src/focus-scope.tsx", "../../node_modules/@radix-ui/react-focus-guards/src/focus-guards.tsx", "../../node_modules/tslib/tslib.es6.mjs", "../../node_modules/react-remove-scroll/dist/es2015/Combination.js", "../../node_modules/react-remove-scroll/dist/es2015/UI.js", "../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js", "../../node_modules/use-callback-ref/dist/es2015/assignRef.js", "../../node_modules/use-callback-ref/dist/es2015/useRef.js", "../../node_modules/use-callback-ref/dist/es2015/useMergeRef.js", "../../node_modules/use-sidecar/dist/es2015/medium.js", "../../node_modules/use-sidecar/dist/es2015/exports.js", "../../node_modules/react-remove-scroll/dist/es2015/medium.js", "../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js", "../../node_modules/react-remove-scroll-bar/dist/es2015/component.js", "../../node_modules/react-style-singleton/dist/es2015/hook.js", "../../node_modules/get-nonce/dist/es2015/index.js", "../../node_modules/react-style-singleton/dist/es2015/singleton.js", "../../node_modules/react-style-singleton/dist/es2015/component.js", "../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js", "../../node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js", "../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js", "../../node_modules/react-remove-scroll/dist/es2015/sidecar.js", "../../node_modules/aria-hidden/dist/es2015/index.js", "../../frontend/src/components/ui/select.tsx", "../../node_modules/@radix-ui/react-select/src/select.tsx", "../../node_modules/@radix-ui/react-collection/src/collection-legacy.tsx", "../../node_modules/@radix-ui/react-collection/src/collection.tsx", "../../node_modules/@radix-ui/react-collection/src/ordered-dictionary.ts", "../../node_modules/@radix-ui/react-use-previous/src/use-previous.tsx", "../../frontend/src/components/common/AttachmentList-simple.tsx"],
  "sourcesContent": ["import React, { useState, useEffect } from 'react'\nimport { DndContext, DragEndEvent, DragOverlay, DragStartEvent, PointerSensor, useSensor, useSensors, closestCorners } from '@dnd-kit/core'\nimport { arrayMove, SortableContext, horizontalListSortingStrategy } from '@dnd-kit/sortable'\nimport { Card, CardContent, CardHeader } from '../ui/card'\nimport { Button } from '../ui/button'\nimport { FloatingInput } from '../ui/floating-input'\nimport { Badge } from '../ui/badge'\nimport { Plus, Search, Filter, Users, Calendar, MoreHorizontal, Settings, Edit, Trash2, GripVertical } from 'lucide-react'\nimport { trpc } from '../../lib/trpc'\nimport KanbanColumnComponent from './KanbanColumn'\nimport TaskCard from './TaskCard'\nimport CompactTaskModal from './CompactTaskModal'\nimport TaskDetail from '../task/TaskDetail'\nimport { cn } from '../../lib/utils'\nimport { Task } from '../../types'\nimport { useOptimisticDelete } from '@/hooks/use-optimistic-delete'\nimport { useOptimisticAction } from '@/hooks/use-optimistic-action'\nimport { useToast } from '@/hooks/use-toast'\n\ninterface KanbanBoardProps {\n  kanban: any\n  className?: string\n}\n\nexport default function KanbanBoard({ kanban, className }: KanbanBoardProps) {\n  const [activeTask, setActiveTask] = useState<any | null>(null)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [showFilters, setShowFilters] = useState(false)\n  const [selectedPriorities, setSelectedPriorities] = useState<string[]>([])\n  const [selectedAssignees, setSelectedAssignees] = useState<string[]>([])\n  const [showCreatePanel, setShowCreatePanel] = useState(false)\n  const [selectedTaskId, setSelectedTaskId] = useState<string | null>(null)\n  const [selectedColumnId, setSelectedColumnId] = useState<string | null>(null)\n  const [showColumnManagement, setShowColumnManagement] = useState(false)\n  const [editingColumn, setEditingColumn] = useState<any | null>(null)\n  const [newColumnTitle, setNewColumnTitle] = useState('')\n  const [newColumnColor, setNewColumnColor] = useState('#6B7280')\n  \n  const [bulkMode, setBulkMode] = useState(false)\n  const [selectedTasks, setSelectedTasks] = useState<Set<string>>(new Set())\n  const [showBulkActions, setShowBulkActions] = useState(false)\n\n  const { data: kanbanData, refetch: refetchKanban } = trpc.kanban.get.useQuery({ id: kanban.id })\n  const columns = kanbanData?.columns || []\n  \n  const { data: tasks = [], refetch: refetchTasks } = trpc.task.list.useQuery({\n    workspaceId: kanban.workspaceId,\n    kanbanId: kanban.id\n  })\n  \n  const updateTaskMutation = trpc.task.update.useMutation({\n    onSuccess: () => {\n      refetchTasks()\n    }\n  })\n\n  const createTaskMutation = trpc.task.create.useMutation({\n    onSuccess: () => {\n      refetchTasks()\n    }\n  })\n\n  const deleteTaskMutation = trpc.task.delete.useMutation({\n    onSuccess: () => {\n      refetchTasks()\n    }\n  })\n\n  const createColumnMutation = trpc.kanban.createColumn.useMutation({\n    onSuccess: () => {\n      refetchKanban()\n      setNewColumnTitle('')\n      setNewColumnColor('#6B7280')\n    }\n  })\n\n  const updateColumnMutation = trpc.kanban.updateColumn.useMutation({\n    onSuccess: () => {\n      refetchKanban()\n      setEditingColumn(null)\n    }\n  })\n\n  const deleteColumnMutation = trpc.kanban.deleteColumn.useMutation({\n    onSuccess: () => {\n      refetchKanban()\n    }\n  })\n\n  const reorderColumnsMutation = trpc.kanban.reorderColumns.useMutation({\n    onSuccess: () => {\n      refetchKanban()\n    }\n  })\n\n  const columnIds = columns.map(col => col.id)\n  const kanbanTasks = tasks.filter(task => \n    task.kanbanColumnId && columnIds.includes(task.kanbanColumnId)\n  )\n\n  const filteredTasks = kanbanTasks.filter(task => {\n    const matchesSearch = !searchTerm || \n      task.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      task.description?.toLowerCase().includes(searchTerm.toLowerCase())\n    \n    const matchesPriority = selectedPriorities.length === 0 || \n      selectedPriorities.includes(task.priority)\n    \n    const matchesAssignee = selectedAssignees.length === 0 || \n      (task.assigneeId && selectedAssignees.includes(task.assigneeId))\n\n    return matchesSearch && matchesPriority && matchesAssignee\n  })\n\n  const tasksByColumn = columns.reduce((acc, column) => {\n    acc[column.id] = filteredTasks\n      .filter(task => task.kanbanColumnId === column.id)\n      .sort((a, b) => a.position - b.position)\n    return acc\n  }, {} as Record<string, any[]>)\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    })\n  )\n\n  const handleDragStart = (event: DragStartEvent) => {\n    const { active } = event\n    if (active.data.current?.type === 'task') {\n      setActiveTask(active.data.current.task)\n    }\n  }\n\n  const handleDragEnd = async (event: DragEndEvent) => {\n    const { active, over } = event\n    setActiveTask(null)\n\n    if (!over) return\n\n    const activeType = active.data.current?.type\n    const overType = over.data.current?.type\n\n    if (activeType === 'task') {\n      const activeTask = active.data.current?.task as Task\n      if (!activeTask) return\n\n      const sourceColumn = columns.find(col => col.id === activeTask.kanbanColumnId)\n      let targetColumn: any\n      let targetIndex: number\n\n      if (overType === 'column') {\n        targetColumn = columns.find(col => col.id === over.id)!\n        targetIndex = tasksByColumn[targetColumn.id]?.length || 0\n      } else if (overType === 'task') {\n        const overTask = over.data.current?.task as any\n        targetColumn = columns.find(col => col.id === overTask.kanbanColumnId)!\n        targetIndex = tasksByColumn[targetColumn.id].findIndex(task => task.id === overTask.id)\n      } else {\n        return\n      }\n\n      if (!sourceColumn || !targetColumn) return\n\n      const targetTasks = tasksByColumn[targetColumn.id]\n      let newOrderNumber: number\n\n      if (targetTasks.length === 0) {\n        newOrderNumber = 1\n      } else if (targetIndex === 0) {\n        newOrderNumber = targetTasks[0].position - 1\n      } else if (targetIndex >= targetTasks.length) {\n        newOrderNumber = targetTasks[targetTasks.length - 1].position + 1\n      } else {\n        const prevOrder = targetTasks[targetIndex - 1].position\n        const nextOrder = targetTasks[targetIndex].position\n        newOrderNumber = (prevOrder + nextOrder) / 2\n      }\n\n      const updates = {\n        kanbanColumnId: targetColumn.id,\n        position: newOrderNumber,\n      }\n\n      try {\n        await updateTaskMutation.mutateAsync({\n          id: activeTask.id,\n          ...updates\n        })\n      } catch (error) {\n        console.error('Failed to move task:', error)\n      }\n    }\n  }\n\n  const getTaskCount = (columnId: string) => {\n    return tasksByColumn[columnId]?.length || 0\n  }\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority?.toLowerCase()) {\n      case 'high': return 'bg-krushr-priority-high/10 text-krushr-priority-high border-krushr-priority-high/20'\n      case 'medium': return 'bg-krushr-priority-medium/10 text-krushr-priority-medium border-krushr-priority-medium/20'\n      case 'low': return 'bg-krushr-priority-low/10 text-krushr-priority-low border-krushr-priority-low/20'\n      default: return 'bg-gray-100 text-gray-700 border-gray-200'\n    }\n  }\n\n  const toggleTaskSelection = (taskId: string) => {\n    const newSelected = new Set(selectedTasks)\n    if (newSelected.has(taskId)) {\n      newSelected.delete(taskId)\n    } else {\n      newSelected.add(taskId)\n    }\n    setSelectedTasks(newSelected)\n    setShowBulkActions(newSelected.size > 0)\n  }\n\n  const selectAllTasks = () => {\n    const allTaskIds = new Set(filteredTasks.map(task => task.id))\n    setSelectedTasks(allTaskIds)\n    setShowBulkActions(allTaskIds.size > 0)\n  }\n\n  const clearSelection = () => {\n    setSelectedTasks(new Set())\n    setShowBulkActions(false)\n    setBulkMode(false)\n  }\n\n  const handleBulkMove = (targetColumnId: string) => {\n    if (selectedTasks.size === 0) return\n    \n    const taskIds = Array.from(selectedTasks)\n    taskIds.forEach(taskId => {\n      const task = tasks.find(t => t.id === taskId)\n      if (task) {\n        updateTaskMutation.mutate({\n          id: taskId,\n          kanbanColumnId: targetColumnId\n        })\n      }\n    })\n    clearSelection()\n  }\n\n  const handleBulkPriority = (priority: string) => {\n    if (selectedTasks.size === 0) return\n    \n    const taskIds = Array.from(selectedTasks)\n    taskIds.forEach(taskId => {\n      updateTaskMutation.mutate({\n        id: taskId,\n        priority\n      })\n    })\n    clearSelection()\n  }\n\n  const handleCreateColumn = async () => {\n    if (!newColumnTitle.trim()) return\n    \n    try {\n      await createColumnMutation.mutateAsync({\n        kanbanId: kanban.id,\n        title: newColumnTitle.trim(),\n        color: newColumnColor\n      })\n    } catch (error) {\n      console.error('Failed to create column:', error)\n    }\n  }\n\n  const handleUpdateColumn = async (columnId: string, title: string, color: string) => {\n    try {\n      await updateColumnMutation.mutateAsync({\n        id: columnId,\n        title: title.trim(),\n        color\n      })\n    } catch (error) {\n      console.error('Failed to update column:', error)\n    }\n  }\n\n  const { deleteItem } = useOptimisticDelete()\n  const { execute } = useOptimisticAction()\n  const { toast } = useToast()\n\n  const handleDeleteColumn = async (columnId: string) => {\n    const column = columns.find(col => col.id === columnId)\n    const taskCount = getTaskCount(columnId)\n    \n    if (taskCount > 0) {\n      toast({\n        title: 'Cannot Delete Column',\n        description: `The column \"${column?.title}\" contains ${taskCount} task${taskCount !== 1 ? 's' : ''}. Please move or delete the tasks first.`,\n        variant: 'destructive'\n      })\n      return\n    }\n    \n    if (!column) return\n    \n    await deleteItem({\n      type: 'column',\n      item: column,\n      itemName: column.title,\n      deleteAction: async () => {\n        await deleteColumnMutation.mutateAsync({ id: columnId })\n      },\n      onOptimisticRemove: () => {\n        // The column will be removed from the UI by the refetch\n      },\n      onRestore: () => {\n        // Trigger a refetch to show the column again\n        refetchKanban()\n      }\n    })\n  }\n\n  const handleReorderColumns = async (newOrder: string[]) => {\n    try {\n      await reorderColumnsMutation.mutateAsync({\n        kanbanId: kanban.id,\n        columnIds: newOrder\n      })\n    } catch (error) {\n      console.error('Failed to reorder columns:', error)\n    }\n  }\n\n  return (\n    <div className={cn('flex flex-col h-full bg-gray-50', className)}>\n      \n      {/* Bulk Operations Toolbar */}\n      {showBulkActions && (\n        <div className=\"mx-2 mt-1 p-2 bg-blue-50 border border-blue-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium text-blue-900 font-manrope\">\n                {selectedTasks.size} task{selectedTasks.size !== 1 ? 's' : ''} selected\n              </span>\n              <Button \n                size=\"sm\" \n                variant=\"outline\" \n                onClick={clearSelection}\n                className=\"h-8 min-h-[32px] text-xs hover:bg-gray-50 focus:bg-gray-50 focus:ring-2 focus:ring-blue-500 transition-all duration-200 font-manrope\"\n                aria-label=\"Clear task selection\"\n              >\n                Clear\n              </Button>\n            </div>\n            \n            <div className=\"flex items-center gap-1\">\n              {/* Move to Column */}\n              <select \n                className=\"text-sm border rounded px-3 py-2 h-10 min-h-[40px] focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-manrope\"\n                onChange={(e) => e.target.value && handleBulkMove(e.target.value)}\n                defaultValue=\"\"\n                aria-label=\"Move selected tasks to column\"\n              >\n                <option value=\"\">Move to...</option>\n                {columns.map(col => (\n                  <option key={col.id} value={col.id}>{col.title}</option>\n                ))}\n              </select>\n              \n              {/* Set Priority */}\n              <select \n                className=\"text-sm border rounded px-3 py-2 h-10 min-h-[40px] focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-manrope\"\n                onChange={(e) => e.target.value && handleBulkPriority(e.target.value)}\n                defaultValue=\"\"\n                aria-label=\"Set priority for selected tasks\"\n              >\n                <option value=\"\">Set priority...</option>\n                <option value=\"high\">High</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"low\">Low</option>\n              </select>\n              \n              <Button \n                size=\"sm\" \n                variant=\"destructive\" \n                onClick={async () => {\n                  const selectedTasksArray = Array.from(selectedTasks)\n                  const tasksToDelete = selectedTasksArray.map(id => \n                    tasks.find(t => t.id === id)\n                  ).filter(Boolean)\n                  \n                  clearSelection() // Clear selection immediately for better UX\n                  \n                  await execute({\n                    type: 'bulk-tasks',\n                    action: async () => {\n                      // TODO: Implement bulk delete API call\n                      // For now, delete one by one\n                      for (const taskId of selectedTasksArray) {\n                        await deleteTaskMutation.mutateAsync({ id: taskId })\n                      }\n                    },\n                    undoAction: async () => {\n                      // Restore all tasks\n                      for (const task of tasksToDelete) {\n                        if (task) {\n                          await createTaskMutation.mutateAsync({\n                            title: task.title,\n                            description: task.description,\n                            status: task.status,\n                            priority: task.priority,\n                            dueDate: task.dueDate,\n                            assignedUserId: task.assignedUserId,\n                            tags: task.tags,\n                            kanbanColumnId: task.kanbanColumnId,\n                            projectId: task.projectId\n                          })\n                        }\n                      }\n                    },\n                    item: tasksToDelete,\n                    getMessage: () => `${selectedTasksArray.length} tasks deleted`,\n                    getUndoMessage: () => `${selectedTasksArray.length} tasks restored`\n                  })\n                }}\n                className=\"h-10 min-h-[40px] text-sm px-3 hover:bg-red-600 focus:bg-red-600 focus:ring-2 focus:ring-red-500 transition-all duration-200\"\n                aria-label={`Delete ${selectedTasks.size} selected tasks`}\n              >\n                Delete\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Main Toolbar */}\n      <div className=\"flex items-center justify-between p-2 bg-white border-b\">\n        <div className=\"flex items-center gap-2\">\n          <FloatingInput\n            label=\"Search tasks\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-64 h-10 min-h-[40px] text-sm focus:ring-2 focus:ring-blue-500\"\n            type=\"search\"\n          />\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => setShowFilters(!showFilters)}\n            className=\"h-10 min-h-[40px] text-sm hover:bg-gray-50 focus:bg-gray-50 focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n            aria-label={`${showFilters ? 'Hide' : 'Show'} task filters`}\n            aria-expanded={showFilters}\n          >\n            <Filter className=\"w-4 h-4 mr-2\" />\n            Filters\n          </Button>\n        </div>\n        \n        <div className=\"flex items-center gap-1\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => setShowColumnManagement(!showColumnManagement)}\n            className=\"h-10 min-h-[40px] text-sm hover:bg-gray-50 focus:bg-gray-50 focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n            aria-label={`${showColumnManagement ? 'Hide' : 'Show'} column management`}\n            aria-expanded={showColumnManagement}\n          >\n            <Settings className=\"w-4 h-4 mr-2\" />\n            Columns\n          </Button>\n          \n          <Button\n            size=\"sm\"\n            variant={bulkMode ? \"default\" : \"outline\"}\n            onClick={() => {\n              setBulkMode(!bulkMode)\n              if (bulkMode) clearSelection()\n            }}\n            className=\"h-10 min-h-[40px] text-sm hover:bg-gray-50 focus:bg-gray-50 focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n            aria-label={bulkMode ? 'Exit bulk selection mode' : 'Enter bulk selection mode'}\n            aria-pressed={bulkMode}\n          >\n            {bulkMode ? 'Exit Bulk' : 'Bulk Select'}\n          </Button>\n          \n          {bulkMode && (\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={selectAllTasks}\n              className=\"h-10 min-h-[40px] text-sm hover:bg-gray-50 focus:bg-gray-50 focus:ring-2 focus:ring-blue-500 transition-all duration-200\"\n              aria-label=\"Select all visible tasks\"\n            >\n              Select All\n            </Button>\n          )}\n          \n          <button\n            onClick={() => {\n              setSelectedColumnId(columns[0]?.id || null)\n              setShowCreatePanel(true)\n            }}\n            className=\"w-8 h-8 bg-krushr-primary text-white rounded-md flex items-center justify-center hover:bg-krushr-primary/90 transition-colors\"\n            aria-label=\"Create new task\"\n            title=\"Create new task\"\n          >\n            <Plus className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Filter Panel */}\n      {showFilters && (\n        <div className=\"mx-2 mt-1 p-2 bg-gray-50 rounded border\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Priority\n                </label>\n                <div className=\"flex flex-wrap gap-2\">\n                  {['high', 'medium', 'low'].map((priority) => (\n                    <Badge\n                      key={priority}\n                      variant={selectedPriorities.includes(priority) ? \"default\" : \"outline\"}\n                      className={cn(\n                        \"cursor-pointer capitalize\",\n                        selectedPriorities.includes(priority) && getPriorityColor(priority)\n                      )}\n                      onClick={() => {\n                        setSelectedPriorities(prev =>\n                          prev.includes(priority)\n                            ? prev.filter(p => p !== priority)\n                            : [...prev, priority]\n                        )\n                      }}\n                    >\n                      {priority}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Assignees\n                </label>\n                <div className=\"text-sm text-gray-500\">\n                  Select team members to filter by...\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      {/* Column Management Panel */}\n      {showColumnManagement && (\n        <div className=\"mx-2 mt-1 p-3 bg-white border rounded-lg shadow-sm\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h3 className=\"font-medium text-gray-900\">Manage Columns</h3>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => setShowColumnManagement(false)}\n              className=\"h-6 w-6 p-0\"\n            >\n              \u00D7\n            </Button>\n          </div>\n          \n          {/* Add New Column */}\n          <div className=\"mb-4 p-3 bg-gray-50 rounded border\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <FloatingInput\n                label=\"Column title\"\n                value={newColumnTitle}\n                onChange={(e) => setNewColumnTitle(e.target.value)}\n                className=\"flex-1 h-8 text-sm\"\n                onKeyPress={(e) => e.key === 'Enter' && handleCreateColumn()}\n              />\n              <select\n                value={newColumnColor}\n                onChange={(e) => setNewColumnColor(e.target.value)}\n                className=\"h-8 text-sm border rounded px-2\"\n              >\n                <option value=\"#6B7280\">Gray</option>\n                <option value=\"#3B82F6\">Blue</option>\n                <option value=\"#10B981\">Green</option>\n                <option value=\"#F59E0B\">Yellow</option>\n                <option value=\"#EF4444\">Red</option>\n                <option value=\"#8B5CF6\">Purple</option>\n              </select>\n              <button\n                onClick={handleCreateColumn}\n                disabled={!newColumnTitle.trim() || createColumnMutation.isLoading}\n                className=\"w-8 h-8 bg-krushr-primary text-white rounded-md flex items-center justify-center hover:bg-krushr-primary/90 transition-colors disabled:opacity-50\"\n                title=\"Add column\"\n              >\n                <Plus className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n          \n          {/* Existing Columns */}\n          <div className=\"space-y-2\">\n            {columns.map((column) => (\n              <div key={column.id} className=\"flex items-center gap-2 p-2 border rounded hover:bg-gray-50\">\n                <GripVertical className=\"w-4 h-4 text-gray-400 cursor-move\" />\n                <div\n                  className=\"w-3 h-3 rounded-full border\"\n                  style={{ backgroundColor: column.color }}\n                />\n                \n                {editingColumn?.id === column.id ? (\n                  <>\n                    <FloatingInput\n                      label=\"Column title\"\n                      value={editingColumn.title}\n                      onChange={(e) => setEditingColumn({ ...editingColumn, title: e.target.value })}\n                      className=\"flex-1 h-7 text-sm\"\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          handleUpdateColumn(column.id, editingColumn.title, editingColumn.color)\n                        }\n                      }}\n                      autoFocus\n                    />\n                    <select\n                      value={editingColumn.color}\n                      onChange={(e) => setEditingColumn({ ...editingColumn, color: e.target.value })}\n                      className=\"h-7 text-sm border rounded px-1\"\n                    >\n                      <option value=\"#6B7280\">Gray</option>\n                      <option value=\"#3B82F6\">Blue</option>\n                      <option value=\"#10B981\">Green</option>\n                      <option value=\"#F59E0B\">Yellow</option>\n                      <option value=\"#EF4444\">Red</option>\n                      <option value=\"#8B5CF6\">Purple</option>\n                    </select>\n                    <button\n                      onClick={() => handleUpdateColumn(column.id, editingColumn.title, editingColumn.color)}\n                      className=\"w-8 h-8 bg-krushr-primary text-white rounded-md flex items-center justify-center hover:bg-krushr-primary/90 transition-colors\"\n                      title=\"Save changes\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </button>\n                    <button\n                      onClick={() => setEditingColumn(null)}\n                      className=\"w-8 h-8 bg-krushr-gray-light text-krushr-gray-dark rounded-md flex items-center justify-center hover:bg-krushr-gray transition-colors\"\n                      title=\"Cancel\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </button>\n                  </>\n                ) : (\n                  <>\n                    <span className=\"flex-1 text-sm font-medium\">{column.title}</span>\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {getTaskCount(column.id)} tasks\n                    </Badge>\n                    <button\n                      onClick={() => setEditingColumn({ id: column.id, title: column.title, color: column.color })}\n                      className=\"w-8 h-8 bg-krushr-gray-light text-krushr-gray-dark rounded-md flex items-center justify-center hover:bg-krushr-gray transition-colors\"\n                      title=\"Edit column\"\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </button>\n                    <button\n                      onClick={() => handleDeleteColumn(column.id)}\n                      disabled={getTaskCount(column.id) > 0}\n                      className=\"w-8 h-8 bg-krushr-secondary text-white rounded-md flex items-center justify-center hover:bg-krushr-secondary/90 transition-colors disabled:opacity-50\"\n                      title=\"Delete column\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Kanban Columns */}\n      <div className=\"flex-1 overflow-x-auto\">\n        <DndContext\n          sensors={sensors}\n          collisionDetection={closestCorners}\n          onDragStart={handleDragStart}\n          onDragEnd={handleDragEnd}\n        >\n          <div className=\"flex gap-3 p-2 min-w-max h-full\">\n            <SortableContext\n              items={columns.map(col => col.id)}\n              strategy={horizontalListSortingStrategy}\n            >\n              {columns.map((column) => (\n                <KanbanColumnComponent\n                  key={column.id}\n                  column={column}\n                  tasks={tasksByColumn[column.id] || []}\n                  taskCount={getTaskCount(column.id)}\n                  onTaskClick={(taskId) => setSelectedTaskId(taskId)}\n                  onAddTask={() => {\n                    setSelectedColumnId(column.id)\n                    setShowCreatePanel(true)\n                  }}\n                  bulkMode={bulkMode}\n                  selectedTasks={selectedTasks}\n                  onTaskSelect={toggleTaskSelection}\n                  onEditColumn={() => setEditingColumn({ id: column.id, title: column.title, color: column.color })}\n                  onDeleteColumn={() => handleDeleteColumn(column.id)}\n                />\n              ))}\n            </SortableContext>\n          </div>\n\n          <DragOverlay>\n            {activeTask && (\n              <TaskCard\n                task={activeTask}\n                isDragOverlay\n              />\n            )}\n          </DragOverlay>\n        </DndContext>\n      </div>\n\n      {/* Create Task Modal - Compact Utility-Focused Design */}\n      <CompactTaskModal\n        open={showCreatePanel}\n        onClose={() => {\n          setShowCreatePanel(false)\n          setSelectedColumnId(null)\n        }}\n        workspaceId={kanban.workspaceId}\n        kanbanId={kanban.id}\n        kanbanColumnId={selectedColumnId || undefined}\n        onSuccess={() => {\n          refetchTasks()\n          refetchKanban()\n          setShowCreatePanel(false)\n          setSelectedColumnId(null)\n        }}\n      />\n\n      {/* Task Detail */}\n      {selectedTaskId && (\n        <TaskDetail\n          taskId={selectedTaskId}\n          open={!!selectedTaskId}\n          onClose={() => setSelectedTaskId(null)}\n          onUpdate={() => {\n            refetchTasks()\n            refetchKanban()\n          }}\n        />\n      )}\n    </div>\n  )\n}\n", "import {useMemo} from 'react';\n\nexport function useCombinedRefs<T>(\n  ...refs: ((node: T) => void)[]\n): (node: T) => void {\n  return useMemo(\n    () => (node: T) => {\n      refs.forEach((ref) => ref(node));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    refs\n  );\n}\n", "// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const canUseDOM =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined';\n", "export function isWindow(element: Object): element is typeof window {\n  const elementString = Object.prototype.toString.call(element);\n  return (\n    elementString === '[object Window]' ||\n    // In Electron context the Window object serializes to [object global]\n    elementString === '[object global]'\n  );\n}\n", "export function isNode(node: Object): node is Node {\n  return 'nodeType' in node;\n}\n", "import {isWindow} from '../type-guards/isWindow';\nimport {isNode} from '../type-guards/isNode';\n\nexport function getWindow(target: Event['target']): typeof window {\n  if (!target) {\n    return window;\n  }\n\n  if (isWindow(target)) {\n    return target;\n  }\n\n  if (!isNode(target)) {\n    return window;\n  }\n\n  return target.ownerDocument?.defaultView ?? window;\n}\n", "import {getWindow} from '../execution-context/getWindow';\n\nexport function isDocument(node: Node): node is Document {\n  const {Document} = getWindow(node);\n\n  return node instanceof Document;\n}\n", "import {getWindow} from '../execution-context/getWindow';\n\nimport {isWindow} from './isWindow';\n\nexport function isHTMLElement(node: Node | Window): node is HTMLElement {\n  if (isWindow(node)) {\n    return false;\n  }\n\n  return node instanceof getWindow(node).HTMLElement;\n}\n", "import {getWindow} from '../execution-context/getWindow';\n\nexport function isSVGElement(node: Node): node is SVGElement {\n  return node instanceof getWindow(node).SVGElement;\n}\n", "import {\n  isWindow,\n  isHTMLElement,\n  isDocument,\n  isNode,\n  isSVGElement,\n} from '../type-guards';\n\nexport function getOwnerDocument(target: Event['target']): Document {\n  if (!target) {\n    return document;\n  }\n\n  if (isWindow(target)) {\n    return target.document;\n  }\n\n  if (!isNode(target)) {\n    return document;\n  }\n\n  if (isDocument(target)) {\n    return target;\n  }\n\n  if (isHTMLElement(target) || isSVGElement(target)) {\n    return target.ownerDocument;\n  }\n\n  return document;\n}\n", "import {useEffect, useLayoutEffect} from 'react';\n\nimport {canUseDOM} from '../execution-context';\n\n/**\n * A hook that resolves to useEffect on the server and useLayoutEffect on the client\n * @param callback {function} Callback function that is invoked when the dependencies of the hook change\n */\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? useLayoutEffect\n  : useEffect;\n", "import {useCallback, useRef} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useEvent<T extends Function>(handler: T | undefined) {\n  const handlerRef = useRef<T | undefined>(handler);\n\n  useIsomorphicLayoutEffect(() => {\n    handlerRef.current = handler;\n  });\n\n  return useCallback(function (...args: any) {\n    return handlerRef.current?.(...args);\n  }, []);\n}\n", "import {useCallback, useRef} from 'react';\n\nexport function useInterval() {\n  const intervalRef = useRef<number | null>(null);\n\n  const set = useCallback((listener: Function, duration: number) => {\n    intervalRef.current = setInterval(listener, duration);\n  }, []);\n\n  const clear = useCallback(() => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  return [set, clear] as const;\n}\n", "import {useRef} from 'react';\nimport type {DependencyList} from 'react';\n\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect';\n\nexport function useLatestValue<T extends any>(\n  value: T,\n  dependencies: DependencyList = [value]\n) {\n  const valueRef = useRef<T>(value);\n\n  useIsomorphicLayoutEffect(() => {\n    if (valueRef.current !== value) {\n      valueRef.current = value;\n    }\n  }, dependencies);\n\n  return valueRef;\n}\n", "import {useMemo, useRef} from 'react';\n\nexport function useLazyMemo<T>(\n  callback: (prevValue: T | undefined) => T,\n  dependencies: any[]\n) {\n  const valueRef = useRef<T>();\n\n  return useMemo(\n    () => {\n      const newValue = callback(valueRef.current);\n      valueRef.current = newValue;\n\n      return newValue;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...dependencies]\n  );\n}\n", "import {useRef, useCallback} from 'react';\n\nimport {useEvent} from './useEvent';\n\nexport function useNodeRef(\n  onChange?: (\n    newElement: HTMLElement | null,\n    previousElement: HTMLElement | null\n  ) => void\n) {\n  const onChangeHandler = useEvent(onChange);\n  const node = useRef<HTMLElement | null>(null);\n  const setNodeRef = useCallback(\n    (element: HTMLElement | null) => {\n      if (element !== node.current) {\n        onChangeHandler?.(element, node.current);\n      }\n\n      node.current = element;\n    },\n    //eslint-disable-next-line\n    []\n  );\n\n  return [node, setNodeRef] as const;\n}\n", "import {useRef, useEffect} from 'react';\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n", "import {useMemo} from 'react';\n\nlet ids: Record<string, number> = {};\n\nexport function useUniqueId(prefix: string, value?: string) {\n  return useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    const id = ids[prefix] == null ? 0 : ids[prefix] + 1;\n    ids[prefix] = id;\n\n    return `${prefix}-${id}`;\n  }, [prefix, value]);\n}\n", "function createAdjustmentFn(modifier: number) {\n  return <T extends Record<U, number>, U extends string>(\n    object: T,\n    ...adjustments: Partial<T>[]\n  ): T => {\n    return adjustments.reduce<T>(\n      (accumulator, adjustment) => {\n        const entries = Object.entries(adjustment) as [U, number][];\n\n        for (const [key, valueAdjustment] of entries) {\n          const value = accumulator[key];\n\n          if (value != null) {\n            accumulator[key] = (value + modifier * valueAdjustment) as T[U];\n          }\n        }\n\n        return accumulator;\n      },\n      {\n        ...object,\n      }\n    );\n  };\n}\n\nexport const add = createAdjustmentFn(1);\nexport const subtract = createAdjustmentFn(-1);\n", "export function hasViewportRelativeCoordinates(\n  event: Event\n): event is Event & Pick<PointerEvent, 'clientX' | 'clientY'> {\n  return 'clientX' in event && 'clientY' in event;\n}\n", "import {getWindow} from '../execution-context';\n\nexport function isKeyboardEvent(\n  event: Event | undefined | null\n): event is KeyboardEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {KeyboardEvent} = getWindow(event.target);\n\n  return KeyboardEvent && event instanceof KeyboardEvent;\n}\n", "import {getWindow} from '../execution-context';\n\nexport function isTouchEvent(\n  event: Event | undefined | null\n): event is TouchEvent {\n  if (!event) {\n    return false;\n  }\n\n  const {TouchEvent} = getWindow(event.target);\n\n  return TouchEvent && event instanceof TouchEvent;\n}\n", "import type {Coordinates} from './types';\nimport {isTouchEvent, hasViewportRelativeCoordinates} from '../event';\n\n/**\n * Returns the normalized x and y coordinates for mouse and touch events.\n */\nexport function getEventCoordinates(event: Event): Coordinates | null {\n  if (isTouchEvent(event)) {\n    if (event.touches && event.touches.length) {\n      const {clientX: x, clientY: y} = event.touches[0];\n\n      return {\n        x,\n        y,\n      };\n    } else if (event.changedTouches && event.changedTouches.length) {\n      const {clientX: x, clientY: y} = event.changedTouches[0];\n\n      return {\n        x,\n        y,\n      };\n    }\n  }\n\n  if (hasViewportRelativeCoordinates(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    };\n  }\n\n  return null;\n}\n", "export type Transform = {\n  x: number;\n  y: number;\n  scaleX: number;\n  scaleY: number;\n};\n\nexport interface Transition {\n  property: string;\n  easing: string;\n  duration: number;\n}\n\nexport const CSS = Object.freeze({\n  Translate: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {x, y} = transform;\n\n      return `translate3d(${x ? Math.round(x) : 0}px, ${\n        y ? Math.round(y) : 0\n      }px, 0)`;\n    },\n  },\n  Scale: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      const {scaleX, scaleY} = transform;\n\n      return `scaleX(${scaleX}) scaleY(${scaleY})`;\n    },\n  },\n  Transform: {\n    toString(transform: Transform | null) {\n      if (!transform) {\n        return;\n      }\n\n      return [\n        CSS.Translate.toString(transform),\n        CSS.Scale.toString(transform),\n      ].join(' ');\n    },\n  },\n  Transition: {\n    toString({property, duration, easing}: Transition) {\n      return `${property} ${duration}ms ${easing}`;\n    },\n  },\n});\n", "const SELECTOR =\n  'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not(:disabled),*[tabindex]';\n\nexport function findFirstFocusableNode(\n  element: HTMLElement\n): HTMLElement | null {\n  if (element.matches(SELECTOR)) {\n    return element;\n  }\n\n  return element.querySelector(SELECTOR);\n}\n", "import React from 'react';\n\ninterface Props {\n  id: string;\n  value: string;\n}\n\nconst hiddenStyles: React.CSSProperties = {\n  display: 'none',\n};\n\nexport function HiddenText({id, value}: Props) {\n  return (\n    <div id={id} style={hiddenStyles}>\n      {value}\n    </div>\n  );\n}\n", "import React from 'react';\n\nexport interface Props {\n  id: string;\n  announcement: string;\n  ariaLiveType?: \"polite\" | \"assertive\" | \"off\";\n}\n\nexport function LiveRegion({id, announcement, ariaLiveType = \"assertive\"}: Props) {\n  // Hide element visually but keep it readable by screen readers\n  const visuallyHidden: React.CSSProperties = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(100%)',\n    whiteSpace: 'nowrap',\n  };\n  \n  return (\n    <div\n      id={id}\n      style={visuallyHidden}\n      role=\"status\"\n      aria-live={ariaLiveType}\n      aria-atomic\n    >\n      {announcement}\n    </div>\n  );\n}\n", "import {useCallback, useState} from 'react';\n\nexport function useAnnouncement() {\n  const [announcement, setAnnouncement] = useState('');\n  const announce = useCallback((value: string | undefined) => {\n    if (value != null) {\n      setAnnouncement(value);\n    }\n  }, []);\n\n  return {announce, announcement} as const;\n}\n", "import {createContext} from 'react';\n\nimport type {RegisterListener} from './types';\n\nexport const DndMonitorContext = createContext<RegisterListener | null>(null);\n", "import {useContext, useEffect} from 'react';\n\nimport {DndMonitorContext} from './context';\nimport type {DndMonitorListener} from './types';\n\nexport function useDndMonitor(listener: DndMonitorListener) {\n  const registerListener = useContext(DndMonitorContext);\n\n  useEffect(() => {\n    if (!registerListener) {\n      throw new Error(\n        'useDndMonitor must be used within a children of <DndContext>'\n      );\n    }\n\n    const unsubscribe = registerListener(listener);\n\n    return unsubscribe;\n  }, [listener, registerListener]);\n}\n", "import {useCallback, useState} from 'react';\n\nimport type {DndMonitorListener, DndMonitorEvent} from './types';\n\nexport function useDndMonitorProvider() {\n  const [listeners] = useState(() => new Set<DndMonitorListener>());\n\n  const registerListener = useCallback(\n    (listener) => {\n      listeners.add(listener);\n      return () => listeners.delete(listener);\n    },\n    [listeners]\n  );\n\n  const dispatch = useCallback(\n    ({type, event}: DndMonitorEvent) => {\n      listeners.forEach((listener) => listener[type]?.(event as any));\n    },\n    [listeners]\n  );\n\n  return [dispatch, registerListener] as const;\n}\n", "import type {Announcements, ScreenReaderInstructions} from './types';\n\nexport const defaultScreenReaderInstructions: ScreenReaderInstructions = {\n  draggable: `\n    To pick up a draggable item, press the space bar.\n    While dragging, use the arrow keys to move the item.\n    Press space again to drop the item in its new position, or press escape to cancel.\n  `,\n};\n\nexport const defaultAnnouncements: Announcements = {\n  onDragStart({active}) {\n    return `Picked up draggable item ${active.id}.`;\n  },\n  onDragOver({active, over}) {\n    if (over) {\n      return `Draggable item ${active.id} was moved over droppable area ${over.id}.`;\n    }\n\n    return `Draggable item ${active.id} is no longer over a droppable area.`;\n  },\n  onDragEnd({active, over}) {\n    if (over) {\n      return `Draggable item ${active.id} was dropped over droppable area ${over.id}`;\n    }\n\n    return `Draggable item ${active.id} was dropped.`;\n  },\n  onDragCancel({active}) {\n    return `Dragging was cancelled. Draggable item ${active.id} was dropped.`;\n  },\n};\n", "import React, {useEffect, useMemo, useState} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useUniqueId} from '@dnd-kit/utilities';\nimport {HiddenText, LiveRegion, useAnnouncement} from '@dnd-kit/accessibility';\n\nimport {DndMonitorListener, useDndMonitor} from '../DndMonitor';\n\nimport type {Announcements, ScreenReaderInstructions} from './types';\nimport {\n  defaultAnnouncements,\n  defaultScreenReaderInstructions,\n} from './defaults';\n\ninterface Props {\n  announcements?: Announcements;\n  container?: Element;\n  screenReaderInstructions?: ScreenReaderInstructions;\n  hiddenTextDescribedById: string;\n}\n\nexport function Accessibility({\n  announcements = defaultAnnouncements,\n  container,\n  hiddenTextDescribedById,\n  screenReaderInstructions = defaultScreenReaderInstructions,\n}: Props) {\n  const {announce, announcement} = useAnnouncement();\n  const liveRegionId = useUniqueId(`DndLiveRegion`);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  useDndMonitor(\n    useMemo<DndMonitorListener>(\n      () => ({\n        onDragStart({active}) {\n          announce(announcements.onDragStart({active}));\n        },\n        onDragMove({active, over}) {\n          if (announcements.onDragMove) {\n            announce(announcements.onDragMove({active, over}));\n          }\n        },\n        onDragOver({active, over}) {\n          announce(announcements.onDragOver({active, over}));\n        },\n        onDragEnd({active, over}) {\n          announce(announcements.onDragEnd({active, over}));\n        },\n        onDragCancel({active, over}) {\n          announce(announcements.onDragCancel({active, over}));\n        },\n      }),\n      [announce, announcements]\n    )\n  );\n\n  if (!mounted) {\n    return null;\n  }\n\n  const markup = (\n    <>\n      <HiddenText\n        id={hiddenTextDescribedById}\n        value={screenReaderInstructions.draggable}\n      />\n      <LiveRegion id={liveRegionId} announcement={announcement} />\n    </>\n  );\n\n  return container ? createPortal(markup, container) : markup;\n}\n", "import type {Coordinates, UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\nexport enum Action {\n  DragStart = 'dragStart',\n  DragMove = 'dragMove',\n  DragEnd = 'dragEnd',\n  DragCancel = 'dragCancel',\n  DragOver = 'dragOver',\n  RegisterDroppable = 'registerDroppable',\n  SetDroppableDisabled = 'setDroppableDisabled',\n  UnregisterDroppable = 'unregisterDroppable',\n}\n\nexport type Actions =\n  | {\n      type: Action.DragStart;\n      active: UniqueIdentifier;\n      initialCoordinates: Coordinates;\n    }\n  | {type: Action.DragMove; coordinates: Coordinates}\n  | {type: Action.DragEnd}\n  | {type: Action.DragCancel}\n  | {\n      type: Action.RegisterDroppable;\n      element: DroppableContainer;\n    }\n  | {\n      type: Action.SetDroppableDisabled;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n      disabled: boolean;\n    }\n  | {\n      type: Action.UnregisterDroppable;\n      id: UniqueIdentifier;\n      key: UniqueIdentifier;\n    };\n", "export function noop(..._args: any) {}\n", "import {useMemo} from 'react';\n\nimport type {Sensor, SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensor<T extends SensorOptions>(\n  sensor: Sensor<T>,\n  options?: T\n): SensorDescriptor<T> {\n  return useMemo(\n    () => ({\n      sensor,\n      options: options ?? ({} as T),\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sensor, options]\n  );\n}\n", "import {useMemo} from 'react';\n\nimport type {SensorDescriptor, SensorOptions} from './types';\n\nexport function useSensors(\n  ...sensors: (SensorDescriptor<any> | undefined | null)[]\n): SensorDescriptor<SensorOptions>[] {\n  return useMemo(\n    () =>\n      [...sensors].filter(\n        (sensor): sensor is SensorDescriptor<any> => sensor != null\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...sensors]\n  );\n}\n", "import type {Coordinates} from '../../types';\n\nexport const defaultCoordinates: Coordinates = Object.freeze({\n  x: 0,\n  y: 0,\n});\n", "import type {Coordinates} from '../../types';\n\n/**\n * Returns the distance between two points\n */\nexport function distanceBetween(p1: Coordinates, p2: Coordinates) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n", "import {getEventCoordinates} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function getRelativeTransformOrigin(\n  event: MouseEvent | TouchEvent | KeyboardEvent,\n  rect: ClientRect\n) {\n  const eventCoordinates = getEventCoordinates(event);\n\n  if (!eventCoordinates) {\n    return '0 0';\n  }\n\n  const transformOrigin = {\n    x: ((eventCoordinates.x - rect.left) / rect.width) * 100,\n    y: ((eventCoordinates.y - rect.top) / rect.height) * 100,\n  };\n\n  return `${transformOrigin.x}% ${transformOrigin.y}%`;\n}\n", "/* eslint-disable no-redeclare */\nimport type {ClientRect} from '../../types';\n\nimport type {Collision, CollisionDescriptor} from './types';\n\n/**\n * Sort collisions from smallest to greatest value\n */\nexport function sortCollisionsAsc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return a - b;\n}\n\n/**\n * Sort collisions from greatest to smallest value\n */\nexport function sortCollisionsDesc(\n  {data: {value: a}}: CollisionDescriptor,\n  {data: {value: b}}: CollisionDescriptor\n) {\n  return b - a;\n}\n\n/**\n * Returns the coordinates of the corners of a given rectangle:\n * [TopLeft {x, y}, TopRight {x, y}, BottomLeft {x, y}, BottomRight {x, y}]\n */\nexport function cornersOfRectangle({left, top, height, width}: ClientRect) {\n  return [\n    {\n      x: left,\n      y: top,\n    },\n    {\n      x: left + width,\n      y: top,\n    },\n    {\n      x: left,\n      y: top + height,\n    },\n    {\n      x: left + width,\n      y: top + height,\n    },\n  ];\n}\n\n/**\n * Returns the first collision, or null if there isn't one.\n * If a property is specified, returns the specified property of the first collision.\n */\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined\n): Collision | null;\nexport function getFirstCollision<T extends keyof Collision>(\n  collisions: Collision[] | null | undefined,\n  property: T\n): Collision[T] | null;\nexport function getFirstCollision(\n  collisions: Collision[] | null | undefined,\n  property?: keyof Collision\n) {\n  if (!collisions || collisions.length === 0) {\n    return null;\n  }\n\n  const [firstCollision] = collisions;\n\n  return property ? firstCollision[property] : firstCollision;\n}\n", "import {distanceBetween} from '../coordinates';\nimport type {Coordinates, ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the coordinates of the center of a given ClientRect\n */\nfunction centerOfRectangle(\n  rect: ClientRect,\n  left = rect.left,\n  top = rect.top\n): Coordinates {\n  return {\n    x: left + rect.width * 0.5,\n    y: top + rect.height * 0.5,\n  };\n}\n\n/**\n * Returns the closest rectangles from an array of rectangles to the center of a given\n * rectangle.\n */\nexport const closestCenter: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const centerRect = centerOfRectangle(\n    collisionRect,\n    collisionRect.left,\n    collisionRect.top\n  );\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const distBetween = distanceBetween(centerOfRectangle(rect), centerRect);\n\n      collisions.push({id, data: {droppableContainer, value: distBetween}});\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n", "import {distanceBetween} from '../coordinates';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {cornersOfRectangle, sortCollisionsAsc} from './helpers';\n\n/**\n * Returns the closest rectangles from an array of rectangles to the corners of\n * another rectangle.\n */\nexport const closestCorners: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const corners = cornersOfRectangle(collisionRect);\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const rectCorners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner, index) => {\n        return accumulator + distanceBetween(rectCorners[index], corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      collisions.push({\n        id,\n        data: {droppableContainer, value: effectiveDistance},\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n", "import type {ClientRect} from '../../types';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {sortCollisionsDesc} from './helpers';\n\n/**\n * Returns the intersecting rectangle area between two rectangles\n */\nexport function getIntersectionRatio(\n  entry: ClientRect,\n  target: ClientRect\n): number {\n  const top = Math.max(target.top, entry.top);\n  const left = Math.max(target.left, entry.left);\n  const right = Math.min(target.left + target.width, entry.left + entry.width);\n  const bottom = Math.min(target.top + target.height, entry.top + entry.height);\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const targetArea = target.width * target.height;\n    const entryArea = entry.width * entry.height;\n    const intersectionArea = width * height;\n    const intersectionRatio =\n      intersectionArea / (targetArea + entryArea - intersectionArea);\n\n    return Number(intersectionRatio.toFixed(4));\n  }\n\n  // Rectangles do not overlap, or overlap has an area of zero (edge/corner overlap)\n  return 0;\n}\n\n/**\n * Returns the rectangles that has the greatest intersection area with a given\n * rectangle in an array of rectangles.\n */\nexport const rectIntersection: CollisionDetection = ({\n  collisionRect,\n  droppableRects,\n  droppableContainers,\n}) => {\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect) {\n      const intersectionRatio = getIntersectionRatio(rect, collisionRect);\n\n      if (intersectionRatio > 0) {\n        collisions.push({\n          id,\n          data: {droppableContainer, value: intersectionRatio},\n        });\n      }\n    }\n  }\n\n  return collisions.sort(sortCollisionsDesc);\n};\n", "import type {Coordinates, ClientRect} from '../../types';\nimport {distanceBetween} from '../coordinates';\n\nimport type {CollisionDescriptor, CollisionDetection} from './types';\nimport {cornersOfRectangle, sortCollisionsAsc} from './helpers';\n\n/**\n * Check if a given point is contained within a bounding rectangle\n */\nfunction isPointWithinRect(point: Coordinates, rect: ClientRect): boolean {\n  const {top, left, bottom, right} = rect;\n\n  return (\n    top <= point.y && point.y <= bottom && left <= point.x && point.x <= right\n  );\n}\n\n/**\n * Returns the rectangles that the pointer is hovering over\n */\nexport const pointerWithin: CollisionDetection = ({\n  droppableContainers,\n  droppableRects,\n  pointerCoordinates,\n}) => {\n  if (!pointerCoordinates) {\n    return [];\n  }\n\n  const collisions: CollisionDescriptor[] = [];\n\n  for (const droppableContainer of droppableContainers) {\n    const {id} = droppableContainer;\n    const rect = droppableRects.get(id);\n\n    if (rect && isPointWithinRect(pointerCoordinates, rect)) {\n      /* There may be more than a single rectangle intersecting\n       * with the pointer coordinates. In order to sort the\n       * colliding rectangles, we measure the distance between\n       * the pointer and the corners of the intersecting rectangle\n       */\n      const corners = cornersOfRectangle(rect);\n      const distances = corners.reduce((accumulator, corner) => {\n        return accumulator + distanceBetween(pointerCoordinates, corner);\n      }, 0);\n      const effectiveDistance = Number((distances / 4).toFixed(4));\n\n      collisions.push({\n        id,\n        data: {droppableContainer, value: effectiveDistance},\n      });\n    }\n  }\n\n  return collisions.sort(sortCollisionsAsc);\n};\n", "import type {Transform} from '@dnd-kit/utilities';\nimport type {ClientRect} from '../../types';\n\nexport function adjustScale(\n  transform: Transform,\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Transform {\n  return {\n    ...transform,\n    scaleX: rect1 && rect2 ? rect1.width / rect2.width : 1,\n    scaleY: rect1 && rect2 ? rect1.height / rect2.height : 1,\n  };\n}\n", "import type {Coordinates, ClientRect} from '../../types';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getRectDelta(\n  rect1: ClientRect | null,\n  rect2: ClientRect | null\n): Coordinates {\n  return rect1 && rect2\n    ? {\n        x: rect1.left - rect2.left,\n        y: rect1.top - rect2.top,\n      }\n    : defaultCoordinates;\n}\n", "import type {Coordinates, ClientRect} from '../../types';\n\nexport function createRectAdjustmentFn(modifier: number) {\n  return function adjustClientRect(\n    rect: ClientRect,\n    ...adjustments: Coordinates[]\n  ): ClientRect {\n    return adjustments.reduce<ClientRect>(\n      (acc, adjustment) => ({\n        ...acc,\n        top: acc.top + modifier * adjustment.y,\n        bottom: acc.bottom + modifier * adjustment.y,\n        left: acc.left + modifier * adjustment.x,\n        right: acc.right + modifier * adjustment.x,\n      }),\n      {...rect}\n    );\n  };\n}\n\nexport const getAdjustedRect = createRectAdjustmentFn(1);\n", "import type {Transform} from '@dnd-kit/utilities';\n\nexport function parseTransform(transform: string): Transform | null {\n  if (transform.startsWith('matrix3d(')) {\n    const transformArray = transform.slice(9, -1).split(/, /);\n\n    return {\n      x: +transformArray[12],\n      y: +transformArray[13],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[5],\n    };\n  } else if (transform.startsWith('matrix(')) {\n    const transformArray = transform.slice(7, -1).split(/, /);\n\n    return {\n      x: +transformArray[4],\n      y: +transformArray[5],\n      scaleX: +transformArray[0],\n      scaleY: +transformArray[3],\n    };\n  }\n\n  return null;\n}\n", "import type {ClientRect} from '../../types';\n\nimport {parseTransform} from './parseTransform';\n\nexport function inverseTransform(\n  rect: ClientRect,\n  transform: string,\n  transformOrigin: string\n): ClientRect {\n  const parsedTransform = parseTransform(transform);\n\n  if (!parsedTransform) {\n    return rect;\n  }\n\n  const {scaleX, scaleY, x: translateX, y: translateY} = parsedTransform;\n\n  const x = rect.left - translateX - (1 - scaleX) * parseFloat(transformOrigin);\n  const y =\n    rect.top -\n    translateY -\n    (1 - scaleY) *\n      parseFloat(transformOrigin.slice(transformOrigin.indexOf(' ') + 1));\n  const w = scaleX ? rect.width / scaleX : rect.width;\n  const h = scaleY ? rect.height / scaleY : rect.height;\n\n  return {\n    width: w,\n    height: h,\n    top: y,\n    right: x + w,\n    bottom: y + h,\n    left: x,\n  };\n}\n", "import {getWindow} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {inverseTransform} from '../transform';\n\ninterface Options {\n  ignoreTransform?: boolean;\n}\n\nconst defaultOptions: Options = {ignoreTransform: false};\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n */\nexport function getClientRect(\n  element: Element,\n  options: Options = defaultOptions\n) {\n  let rect: ClientRect = element.getBoundingClientRect();\n\n  if (options.ignoreTransform) {\n    const {transform, transformOrigin} =\n      getWindow(element).getComputedStyle(element);\n\n    if (transform) {\n      rect = inverseTransform(rect, transform, transformOrigin);\n    }\n  }\n\n  const {top, left, width, height, bottom, right} = rect;\n\n  return {\n    top,\n    left,\n    width,\n    height,\n    bottom,\n    right,\n  };\n}\n\n/**\n * Returns the bounding client rect of an element relative to the viewport.\n *\n * @remarks\n * The ClientRect returned by this method does not take into account transforms\n * applied to the element it measures.\n *\n */\nexport function getTransformAgnosticClientRect(element: Element): ClientRect {\n  return getClientRect(element, {ignoreTransform: true});\n}\n", "import type {ClientRect} from '../../types';\n\nexport function getWindowClientRect(element: typeof window): ClientRect {\n  const width = element.innerWidth;\n  const height = element.innerHeight;\n\n  return {\n    top: 0,\n    left: 0,\n    right: width,\n    bottom: height,\n    width,\n    height,\n  };\n}\n", "import {getWindow} from '@dnd-kit/utilities';\n\nexport function isFixed(\n  node: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(node).getComputedStyle(node)\n): boolean {\n  return computedStyle.position === 'fixed';\n}\n", "import {getWindow} from '@dnd-kit/utilities';\n\nexport function isScrollable(\n  element: HTMLElement,\n  computedStyle: CSSStyleDeclaration = getWindow(element).getComputedStyle(\n    element\n  )\n): boolean {\n  const overflowRegex = /(auto|scroll|overlay)/;\n  const properties = ['overflow', 'overflowX', 'overflowY'];\n\n  return properties.some((property) => {\n    const value = computedStyle[property as keyof CSSStyleDeclaration];\n\n    return typeof value === 'string' ? overflowRegex.test(value) : false;\n  });\n}\n", "import {\n  getWindow,\n  isDocument,\n  isHTMLElement,\n  isSVGElement,\n} from '@dnd-kit/utilities';\n\nimport {isFixed} from './isFixed';\nimport {isScrollable} from './isScrollable';\n\nexport function getScrollableAncestors(\n  element: Node | null,\n  limit?: number\n): Element[] {\n  const scrollParents: Element[] = [];\n\n  function findScrollableAncestors(node: Node | null): Element[] {\n    if (limit != null && scrollParents.length >= limit) {\n      return scrollParents;\n    }\n\n    if (!node) {\n      return scrollParents;\n    }\n\n    if (\n      isDocument(node) &&\n      node.scrollingElement != null &&\n      !scrollParents.includes(node.scrollingElement)\n    ) {\n      scrollParents.push(node.scrollingElement);\n\n      return scrollParents;\n    }\n\n    if (!isHTMLElement(node) || isSVGElement(node)) {\n      return scrollParents;\n    }\n\n    if (scrollParents.includes(node)) {\n      return scrollParents;\n    }\n\n    const computedStyle = getWindow(element).getComputedStyle(node);\n\n    if (node !== element) {\n      if (isScrollable(node, computedStyle)) {\n        scrollParents.push(node);\n      }\n    }\n\n    if (isFixed(node, computedStyle)) {\n      return scrollParents;\n    }\n\n    return findScrollableAncestors(node.parentNode);\n  }\n\n  if (!element) {\n    return scrollParents;\n  }\n\n  return findScrollableAncestors(element);\n}\n\nexport function getFirstScrollableAncestor(node: Node | null): Element | null {\n  const [firstScrollableAncestor] = getScrollableAncestors(node, 1);\n\n  return firstScrollableAncestor ?? null;\n}\n", "import {\n  canUseDOM,\n  isHTMLElement,\n  isDocument,\n  getOwnerDocument,\n  isNode,\n  isWindow,\n} from '@dnd-kit/utilities';\n\nexport function getScrollableElement(element: EventTarget | null) {\n  if (!canUseDOM || !element) {\n    return null;\n  }\n\n  if (isWindow(element)) {\n    return element;\n  }\n\n  if (!isNode(element)) {\n    return null;\n  }\n\n  if (\n    isDocument(element) ||\n    element === getOwnerDocument(element).scrollingElement\n  ) {\n    return window;\n  }\n\n  if (isHTMLElement(element)) {\n    return element;\n  }\n\n  return null;\n}\n", "import {isWindow} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\n\nexport function getScrollXCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollX;\n  }\n\n  return element.scrollLeft;\n}\n\nexport function getScrollYCoordinate(element: Element | typeof window): number {\n  if (isWindow(element)) {\n    return element.scrollY;\n  }\n\n  return element.scrollTop;\n}\n\nexport function getScrollCoordinates(\n  element: Element | typeof window\n): Coordinates {\n  return {\n    x: getScrollXCoordinate(element),\n    y: getScrollYCoordinate(element),\n  };\n}\n", "export enum Direction {\n  Forward = 1,\n  Backward = -1,\n}\n", "import {canUseDOM} from '@dnd-kit/utilities';\n\nexport function isDocumentScrollingElement(element: Element | null) {\n  if (!canUseDOM || !element) {\n    return false;\n  }\n\n  return element === document.scrollingElement;\n}\n", "import {isDocumentScrollingElement} from './documentScrollingElement';\n\nexport function getScrollPosition(scrollingContainer: Element) {\n  const minScroll = {\n    x: 0,\n    y: 0,\n  };\n  const dimensions = isDocumentScrollingElement(scrollingContainer)\n    ? {\n        height: window.innerHeight,\n        width: window.innerWidth,\n      }\n    : {\n        height: scrollingContainer.clientHeight,\n        width: scrollingContainer.clientWidth,\n      };\n  const maxScroll = {\n    x: scrollingContainer.scrollWidth - dimensions.width,\n    y: scrollingContainer.scrollHeight - dimensions.height,\n  };\n\n  const isTop = scrollingContainer.scrollTop <= minScroll.y;\n  const isLeft = scrollingContainer.scrollLeft <= minScroll.x;\n  const isBottom = scrollingContainer.scrollTop >= maxScroll.y;\n  const isRight = scrollingContainer.scrollLeft >= maxScroll.x;\n\n  return {\n    isTop,\n    isLeft,\n    isBottom,\n    isRight,\n    maxScroll,\n    minScroll,\n  };\n}\n", "import {Direction, ClientRect} from '../../types';\nimport {getScrollPosition} from './getScrollPosition';\n\ninterface PositionalCoordinates\n  extends Pick<ClientRect, 'top' | 'left' | 'right' | 'bottom'> {}\n\nconst defaultThreshold = {\n  x: 0.2,\n  y: 0.2,\n};\n\nexport function getScrollDirectionAndSpeed(\n  scrollContainer: Element,\n  scrollContainerRect: ClientRect,\n  {top, left, right, bottom}: PositionalCoordinates,\n  acceleration = 10,\n  thresholdPercentage = defaultThreshold\n) {\n  const {isTop, isBottom, isLeft, isRight} = getScrollPosition(scrollContainer);\n\n  const direction = {\n    x: 0,\n    y: 0,\n  };\n  const speed = {\n    x: 0,\n    y: 0,\n  };\n  const threshold = {\n    height: scrollContainerRect.height * thresholdPercentage.y,\n    width: scrollContainerRect.width * thresholdPercentage.x,\n  };\n\n  if (!isTop && top <= scrollContainerRect.top + threshold.height) {\n    // Scroll Up\n    direction.y = Direction.Backward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.top + threshold.height - top) / threshold.height\n      );\n  } else if (\n    !isBottom &&\n    bottom >= scrollContainerRect.bottom - threshold.height\n  ) {\n    // Scroll Down\n    direction.y = Direction.Forward;\n    speed.y =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.bottom - threshold.height - bottom) /\n          threshold.height\n      );\n  }\n\n  if (!isRight && right >= scrollContainerRect.right - threshold.width) {\n    // Scroll Right\n    direction.x = Direction.Forward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.right - threshold.width - right) / threshold.width\n      );\n  } else if (!isLeft && left <= scrollContainerRect.left + threshold.width) {\n    // Scroll Left\n    direction.x = Direction.Backward;\n    speed.x =\n      acceleration *\n      Math.abs(\n        (scrollContainerRect.left + threshold.width - left) / threshold.width\n      );\n  }\n\n  return {\n    direction,\n    speed,\n  };\n}\n", "export function getScrollElementRect(element: Element) {\n  if (element === document.scrollingElement) {\n    const {innerWidth, innerHeight} = window;\n\n    return {\n      top: 0,\n      left: 0,\n      right: innerWidth,\n      bottom: innerHeight,\n      width: innerWidth,\n      height: innerHeight,\n    };\n  }\n\n  const {top, left, right, bottom} = element.getBoundingClientRect();\n\n  return {\n    top,\n    left,\n    right,\n    bottom,\n    width: element.clientWidth,\n    height: element.clientHeight,\n  };\n}\n", "import {add} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  getScrollCoordinates,\n  getScrollXCoordinate,\n  getScrollYCoordinate,\n} from './getScrollCoordinates';\nimport {defaultCoordinates} from '../coordinates';\n\nexport function getScrollOffsets(scrollableAncestors: Element[]): Coordinates {\n  return scrollableAncestors.reduce<Coordinates>((acc, node) => {\n    return add(acc, getScrollCoordinates(node));\n  }, defaultCoordinates);\n}\n\nexport function getScrollXOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollXCoordinate(node);\n  }, 0);\n}\n\nexport function getScrollYOffset(scrollableAncestors: Element[]): number {\n  return scrollableAncestors.reduce<number>((acc, node) => {\n    return acc + getScrollYCoordinate(node);\n  }, 0);\n}\n", "import type {ClientRect} from '../../types';\nimport {getClientRect} from '../rect/getRect';\nimport {getFirstScrollableAncestor} from './getScrollableAncestors';\n\nexport function scrollIntoViewIfNeeded(\n  element: HTMLElement | null | undefined,\n  measure: (node: HTMLElement) => ClientRect = getClientRect\n) {\n  if (!element) {\n    return;\n  }\n\n  const {top, left, bottom, right} = measure(element);\n  const firstScrollableAncestor = getFirstScrollableAncestor(element);\n\n  if (!firstScrollableAncestor) {\n    return;\n  }\n\n  if (\n    bottom <= 0 ||\n    right <= 0 ||\n    top >= window.innerHeight ||\n    left >= window.innerWidth\n  ) {\n    element.scrollIntoView({\n      block: 'center',\n      inline: 'center',\n    });\n  }\n}\n", "import type {ClientRect} from '../../types/rect';\nimport {\n  getScrollableAncestors,\n  getScrollOffsets,\n  getScrollXOffset,\n  getScrollYOffset,\n} from '../scroll';\n\nconst properties = [\n  ['x', ['left', 'right'], getScrollXOffset],\n  ['y', ['top', 'bottom'], getScrollYOffset],\n] as const;\n\nexport class Rect {\n  constructor(rect: ClientRect, element: Element) {\n    const scrollableAncestors = getScrollableAncestors(element);\n    const scrollOffsets = getScrollOffsets(scrollableAncestors);\n\n    this.rect = {...rect};\n    this.width = rect.width;\n    this.height = rect.height;\n\n    for (const [axis, keys, getScrollOffset] of properties) {\n      for (const key of keys) {\n        Object.defineProperty(this, key, {\n          get: () => {\n            const currentOffsets = getScrollOffset(scrollableAncestors);\n            const scrollOffsetsDeltla = scrollOffsets[axis] - currentOffsets;\n\n            return this.rect[key] + scrollOffsetsDeltla;\n          },\n          enumerable: true,\n        });\n      }\n    }\n\n    Object.defineProperty(this, 'rect', {enumerable: false});\n  }\n\n  private rect: ClientRect;\n\n  public width: number;\n\n  public height: number;\n\n  // The below properties are set by the `Object.defineProperty` calls in the constructor\n  // @ts-ignore\n  public top: number;\n  // @ts-ignore\n  public bottom: number;\n  // @ts-ignore\n  public right: number;\n  // @ts-ignore\n  public left: number;\n}\n", "export class Listeners {\n  private listeners: [\n    string,\n    EventListenerOrEventListenerObject,\n    AddEventListenerOptions | boolean | undefined\n  ][] = [];\n\n  constructor(private target: EventTarget | null) {}\n\n  public add<T extends Event>(\n    eventName: string,\n    handler: (event: T) => void,\n    options?: AddEventListenerOptions | boolean\n  ) {\n    this.target?.addEventListener(eventName, handler as EventListener, options);\n    this.listeners.push([eventName, handler as EventListener, options]);\n  }\n\n  public removeAll = () => {\n    this.listeners.forEach((listener) =>\n      this.target?.removeEventListener(...listener)\n    );\n  };\n}\n", "import {getOwnerDocument, getWindow} from '@dnd-kit/utilities';\n\nexport function getEventListenerTarget(\n  target: EventTarget | null\n): EventTarget | Document {\n  // If the `event.target` element is removed from the document events will still be targeted\n  // at it, and hence won't always bubble up to the window or document anymore.\n  // If there is any risk of an element being removed while it is being dragged,\n  // the best practice is to attach the event listeners directly to the target.\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n\n  const {EventTarget} = getWindow(target);\n\n  return target instanceof EventTarget ? target : getOwnerDocument(target);\n}\n", "import type {Coordinates, DistanceMeasurement} from '../../types';\n\nexport function hasExceededDistance(\n  delta: Coordinates,\n  measurement: DistanceMeasurement\n): boolean {\n  const dx = Math.abs(delta.x);\n  const dy = Math.abs(delta.y);\n\n  if (typeof measurement === 'number') {\n    return Math.sqrt(dx ** 2 + dy ** 2) > measurement;\n  }\n\n  if ('x' in measurement && 'y' in measurement) {\n    return dx > measurement.x && dy > measurement.y;\n  }\n\n  if ('x' in measurement) {\n    return dx > measurement.x;\n  }\n\n  if ('y' in measurement) {\n    return dy > measurement.y;\n  }\n\n  return false;\n}\n", "export enum EventName {\n  Click = 'click',\n  DragStart = 'dragstart',\n  Keydown = 'keydown',\n  ContextMenu = 'contextmenu',\n  Resize = 'resize',\n  SelectionChange = 'selectionchange',\n  VisibilityChange = 'visibilitychange',\n}\n\nexport function preventDefault(event: Event) {\n  event.preventDefault();\n}\n\nexport function stopPropagation(event: Event) {\n  event.stopPropagation();\n}\n", "import type {Coordinates, UniqueIdentifier} from '../../types';\nimport type {SensorContext} from '../types';\n\nexport enum KeyboardCode {\n  Space = 'Space',\n  Down = 'ArrowDown',\n  Right = 'ArrowRight',\n  Left = 'ArrowLeft',\n  Up = 'ArrowUp',\n  Esc = 'Escape',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n\nexport type KeyboardCodes = {\n  start: KeyboardEvent['code'][];\n  cancel: KeyboardEvent['code'][];\n  end: KeyboardEvent['code'][];\n};\n\nexport type KeyboardCoordinateGetter = (\n  event: KeyboardEvent,\n  args: {\n    active: UniqueIdentifier;\n    currentCoordinates: Coordinates;\n    context: SensorContext;\n  }\n) => Coordinates | void;\n", "import {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\n\nexport const defaultKeyboardCodes: KeyboardCodes = {\n  start: [KeyboardCode.Space, KeyboardCode.Enter],\n  cancel: [KeyboardCode.Esc],\n  end: [KeyboardCode.Space, KeyboardCode.Enter, KeyboardCode.Tab],\n};\n\nexport const defaultKeyboardCoordinateGetter: KeyboardCoordinateGetter = (\n  event,\n  {currentCoordinates}\n) => {\n  switch (event.code) {\n    case KeyboardCode.Right:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x + 25,\n      };\n    case KeyboardCode.Left:\n      return {\n        ...currentCoordinates,\n        x: currentCoordinates.x - 25,\n      };\n    case KeyboardCode.Down:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y + 25,\n      };\n    case KeyboardCode.Up:\n      return {\n        ...currentCoordinates,\n        y: currentCoordinates.y - 25,\n      };\n  }\n\n  return undefined;\n};\n", "import {\n  add as getAdjustedCoordinates,\n  subtract as getCoordinatesDelta,\n  getOwnerDocument,\n  getWindow,\n  isKeyboardEvent,\n} from '@dnd-kit/utilities';\n\nimport type {Coordinates} from '../../types';\nimport {\n  defaultCoordinates,\n  getScrollPosition,\n  getScrollElementRect,\n} from '../../utilities';\nimport {scrollIntoViewIfNeeded} from '../../utilities/scroll';\nimport {EventName} from '../events';\nimport {Listeners} from '../utilities';\nimport type {\n  Activators,\n  SensorInstance,\n  SensorProps,\n  SensorOptions,\n} from '../types';\n\nimport {KeyboardCoordinateGetter, KeyboardCode, KeyboardCodes} from './types';\nimport {\n  defaultKeyboardCodes,\n  defaultKeyboardCoordinateGetter,\n} from './defaults';\n\nexport interface KeyboardSensorOptions extends SensorOptions {\n  keyboardCodes?: KeyboardCodes;\n  coordinateGetter?: KeyboardCoordinateGetter;\n  scrollBehavior?: ScrollBehavior;\n  onActivation?({event}: {event: KeyboardEvent}): void;\n}\n\nexport type KeyboardSensorProps = SensorProps<KeyboardSensorOptions>;\n\nexport class KeyboardSensor implements SensorInstance {\n  public autoScrollEnabled = false;\n  private referenceCoordinates: Coordinates | undefined;\n  private listeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(private props: KeyboardSensorProps) {\n    const {\n      event: {target},\n    } = props;\n\n    this.props = props;\n    this.listeners = new Listeners(getOwnerDocument(target));\n    this.windowListeners = new Listeners(getWindow(target));\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    this.handleStart();\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n\n    setTimeout(() => this.listeners.add(EventName.Keydown, this.handleKeyDown));\n  }\n\n  private handleStart() {\n    const {activeNode, onStart} = this.props;\n    const node = activeNode.node.current;\n\n    if (node) {\n      scrollIntoViewIfNeeded(node);\n    }\n\n    onStart(defaultCoordinates);\n  }\n\n  private handleKeyDown(event: Event) {\n    if (isKeyboardEvent(event)) {\n      const {active, context, options} = this.props;\n      const {\n        keyboardCodes = defaultKeyboardCodes,\n        coordinateGetter = defaultKeyboardCoordinateGetter,\n        scrollBehavior = 'smooth',\n      } = options;\n      const {code} = event;\n\n      if (keyboardCodes.end.includes(code)) {\n        this.handleEnd(event);\n        return;\n      }\n\n      if (keyboardCodes.cancel.includes(code)) {\n        this.handleCancel(event);\n        return;\n      }\n\n      const {collisionRect} = context.current;\n      const currentCoordinates = collisionRect\n        ? {x: collisionRect.left, y: collisionRect.top}\n        : defaultCoordinates;\n\n      if (!this.referenceCoordinates) {\n        this.referenceCoordinates = currentCoordinates;\n      }\n\n      const newCoordinates = coordinateGetter(event, {\n        active,\n        context: context.current,\n        currentCoordinates,\n      });\n\n      if (newCoordinates) {\n        const coordinatesDelta = getCoordinatesDelta(\n          newCoordinates,\n          currentCoordinates\n        );\n        const scrollDelta = {\n          x: 0,\n          y: 0,\n        };\n        const {scrollableAncestors} = context.current;\n\n        for (const scrollContainer of scrollableAncestors) {\n          const direction = event.code;\n          const {isTop, isRight, isLeft, isBottom, maxScroll, minScroll} =\n            getScrollPosition(scrollContainer);\n          const scrollElementRect = getScrollElementRect(scrollContainer);\n\n          const clampedCoordinates = {\n            x: Math.min(\n              direction === KeyboardCode.Right\n                ? scrollElementRect.right - scrollElementRect.width / 2\n                : scrollElementRect.right,\n              Math.max(\n                direction === KeyboardCode.Right\n                  ? scrollElementRect.left\n                  : scrollElementRect.left + scrollElementRect.width / 2,\n                newCoordinates.x\n              )\n            ),\n            y: Math.min(\n              direction === KeyboardCode.Down\n                ? scrollElementRect.bottom - scrollElementRect.height / 2\n                : scrollElementRect.bottom,\n              Math.max(\n                direction === KeyboardCode.Down\n                  ? scrollElementRect.top\n                  : scrollElementRect.top + scrollElementRect.height / 2,\n                newCoordinates.y\n              )\n            ),\n          };\n\n          const canScrollX =\n            (direction === KeyboardCode.Right && !isRight) ||\n            (direction === KeyboardCode.Left && !isLeft);\n          const canScrollY =\n            (direction === KeyboardCode.Down && !isBottom) ||\n            (direction === KeyboardCode.Up && !isTop);\n\n          if (canScrollX && clampedCoordinates.x !== newCoordinates.x) {\n            const newScrollCoordinates =\n              scrollContainer.scrollLeft + coordinatesDelta.x;\n            const canScrollToNewCoordinates =\n              (direction === KeyboardCode.Right &&\n                newScrollCoordinates <= maxScroll.x) ||\n              (direction === KeyboardCode.Left &&\n                newScrollCoordinates >= minScroll.x);\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.y) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                left: newScrollCoordinates,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.x = scrollContainer.scrollLeft - newScrollCoordinates;\n            } else {\n              scrollDelta.x =\n                direction === KeyboardCode.Right\n                  ? scrollContainer.scrollLeft - maxScroll.x\n                  : scrollContainer.scrollLeft - minScroll.x;\n            }\n\n            if (scrollDelta.x) {\n              scrollContainer.scrollBy({\n                left: -scrollDelta.x,\n                behavior: scrollBehavior,\n              });\n            }\n            break;\n          } else if (canScrollY && clampedCoordinates.y !== newCoordinates.y) {\n            const newScrollCoordinates =\n              scrollContainer.scrollTop + coordinatesDelta.y;\n            const canScrollToNewCoordinates =\n              (direction === KeyboardCode.Down &&\n                newScrollCoordinates <= maxScroll.y) ||\n              (direction === KeyboardCode.Up &&\n                newScrollCoordinates >= minScroll.y);\n\n            if (canScrollToNewCoordinates && !coordinatesDelta.x) {\n              // We don't need to update coordinates, the scroll adjustment alone will trigger\n              // logic to auto-detect the new container we are over\n              scrollContainer.scrollTo({\n                top: newScrollCoordinates,\n                behavior: scrollBehavior,\n              });\n              return;\n            }\n\n            if (canScrollToNewCoordinates) {\n              scrollDelta.y = scrollContainer.scrollTop - newScrollCoordinates;\n            } else {\n              scrollDelta.y =\n                direction === KeyboardCode.Down\n                  ? scrollContainer.scrollTop - maxScroll.y\n                  : scrollContainer.scrollTop - minScroll.y;\n            }\n\n            if (scrollDelta.y) {\n              scrollContainer.scrollBy({\n                top: -scrollDelta.y,\n                behavior: scrollBehavior,\n              });\n            }\n\n            break;\n          }\n        }\n\n        this.handleMove(\n          event,\n          getAdjustedCoordinates(\n            getCoordinatesDelta(newCoordinates, this.referenceCoordinates),\n            scrollDelta\n          )\n        );\n      }\n    }\n  }\n\n  private handleMove(event: Event, coordinates: Coordinates) {\n    const {onMove} = this.props;\n\n    event.preventDefault();\n    onMove(coordinates);\n  }\n\n  private handleEnd(event: Event) {\n    const {onEnd} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onEnd();\n  }\n\n  private handleCancel(event: Event) {\n    const {onCancel} = this.props;\n\n    event.preventDefault();\n    this.detach();\n    onCancel();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n  }\n\n  static activators: Activators<KeyboardSensorOptions> = [\n    {\n      eventName: 'onKeyDown' as const,\n      handler: (\n        event: React.KeyboardEvent,\n        {keyboardCodes = defaultKeyboardCodes, onActivation},\n        {active}\n      ) => {\n        const {code} = event.nativeEvent;\n\n        if (keyboardCodes.start.includes(code)) {\n          const activator = active.activatorNode.current;\n\n          if (activator && event.target !== activator) {\n            return false;\n          }\n\n          event.preventDefault();\n\n          onActivation?.({event: event.nativeEvent});\n\n          return true;\n        }\n\n        return false;\n      },\n    },\n  ];\n}\n", "import {\n  subtract as getCoordinatesDelta,\n  getEventCoordinates,\n  getOwnerDocument,\n  getWindow,\n} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\nimport {\n  getEventListenerTarget,\n  hasExceededDistance,\n  Listeners,\n} from '../utilities';\nimport {EventName, preventDefault, stopPropagation} from '../events';\nimport {KeyboardCode} from '../keyboard';\nimport type {SensorInstance, SensorProps, SensorOptions} from '../types';\nimport type {Coordinates, DistanceMeasurement} from '../../types';\n\ninterface DistanceConstraint {\n  distance: DistanceMeasurement;\n  tolerance?: DistanceMeasurement;\n}\n\ninterface DelayConstraint {\n  delay: number;\n  tolerance: DistanceMeasurement;\n}\n\ninterface EventDescriptor {\n  name: keyof DocumentEventMap;\n  passive?: boolean;\n}\n\nexport interface PointerEventHandlers {\n  cancel?: EventDescriptor;\n  move: EventDescriptor;\n  end: EventDescriptor;\n}\n\nexport type PointerActivationConstraint =\n  | DelayConstraint\n  | DistanceConstraint\n  | (DelayConstraint & DistanceConstraint);\n\nfunction isDistanceConstraint(\n  constraint: PointerActivationConstraint\n): constraint is PointerActivationConstraint & DistanceConstraint {\n  return Boolean(constraint && 'distance' in constraint);\n}\n\nfunction isDelayConstraint(\n  constraint: PointerActivationConstraint\n): constraint is DelayConstraint {\n  return Boolean(constraint && 'delay' in constraint);\n}\n\nexport interface AbstractPointerSensorOptions extends SensorOptions {\n  activationConstraint?: PointerActivationConstraint;\n  bypassActivationConstraint?(\n    props: Pick<AbstractPointerSensorProps, 'activeNode' | 'event' | 'options'>\n  ): boolean;\n  onActivation?({event}: {event: Event}): void;\n}\n\nexport type AbstractPointerSensorProps =\n  SensorProps<AbstractPointerSensorOptions>;\n\nexport class AbstractPointerSensor implements SensorInstance {\n  public autoScrollEnabled = true;\n  private document: Document;\n  private activated: boolean = false;\n  private initialCoordinates: Coordinates;\n  private timeoutId: NodeJS.Timeout | null = null;\n  private listeners: Listeners;\n  private documentListeners: Listeners;\n  private windowListeners: Listeners;\n\n  constructor(\n    private props: AbstractPointerSensorProps,\n    private events: PointerEventHandlers,\n    listenerTarget = getEventListenerTarget(props.event.target)\n  ) {\n    const {event} = props;\n    const {target} = event;\n\n    this.props = props;\n    this.events = events;\n    this.document = getOwnerDocument(target);\n    this.documentListeners = new Listeners(this.document);\n    this.listeners = new Listeners(listenerTarget);\n    this.windowListeners = new Listeners(getWindow(target));\n    this.initialCoordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    this.handleStart = this.handleStart.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleKeydown = this.handleKeydown.bind(this);\n    this.removeTextSelection = this.removeTextSelection.bind(this);\n\n    this.attach();\n  }\n\n  private attach() {\n    const {\n      events,\n      props: {\n        options: {activationConstraint, bypassActivationConstraint},\n      },\n    } = this;\n\n    this.listeners.add(events.move.name, this.handleMove, {passive: false});\n    this.listeners.add(events.end.name, this.handleEnd);\n\n    if (events.cancel) {\n      this.listeners.add(events.cancel.name, this.handleCancel);\n    }\n\n    this.windowListeners.add(EventName.Resize, this.handleCancel);\n    this.windowListeners.add(EventName.DragStart, preventDefault);\n    this.windowListeners.add(EventName.VisibilityChange, this.handleCancel);\n    this.windowListeners.add(EventName.ContextMenu, preventDefault);\n    this.documentListeners.add(EventName.Keydown, this.handleKeydown);\n\n    if (activationConstraint) {\n      if (\n        bypassActivationConstraint?.({\n          event: this.props.event,\n          activeNode: this.props.activeNode,\n          options: this.props.options,\n        })\n      ) {\n        return this.handleStart();\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        this.timeoutId = setTimeout(\n          this.handleStart,\n          activationConstraint.delay\n        );\n        this.handlePending(activationConstraint);\n        return;\n      }\n\n      if (isDistanceConstraint(activationConstraint)) {\n        this.handlePending(activationConstraint);\n        return;\n      }\n    }\n\n    this.handleStart();\n  }\n\n  private detach() {\n    this.listeners.removeAll();\n    this.windowListeners.removeAll();\n\n    // Wait until the next event loop before removing document listeners\n    // This is necessary because we listen for `click` and `selection` events on the document\n    setTimeout(this.documentListeners.removeAll, 50);\n\n    if (this.timeoutId !== null) {\n      clearTimeout(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  private handlePending(\n    constraint: PointerActivationConstraint,\n    offset?: Coordinates | undefined\n  ): void {\n    const {active, onPending} = this.props;\n    onPending(active, constraint, this.initialCoordinates, offset);\n  }\n\n  private handleStart() {\n    const {initialCoordinates} = this;\n    const {onStart} = this.props;\n\n    if (initialCoordinates) {\n      this.activated = true;\n\n      // Stop propagation of click events once activation constraints are met\n      this.documentListeners.add(EventName.Click, stopPropagation, {\n        capture: true,\n      });\n\n      // Remove any text selection from the document\n      this.removeTextSelection();\n\n      // Prevent further text selection while dragging\n      this.documentListeners.add(\n        EventName.SelectionChange,\n        this.removeTextSelection\n      );\n\n      onStart(initialCoordinates);\n    }\n  }\n\n  private handleMove(event: Event) {\n    const {activated, initialCoordinates, props} = this;\n    const {\n      onMove,\n      options: {activationConstraint},\n    } = props;\n\n    if (!initialCoordinates) {\n      return;\n    }\n\n    const coordinates = getEventCoordinates(event) ?? defaultCoordinates;\n    const delta = getCoordinatesDelta(initialCoordinates, coordinates);\n\n    // Constraint validation\n    if (!activated && activationConstraint) {\n      if (isDistanceConstraint(activationConstraint)) {\n        if (\n          activationConstraint.tolerance != null &&\n          hasExceededDistance(delta, activationConstraint.tolerance)\n        ) {\n          return this.handleCancel();\n        }\n\n        if (hasExceededDistance(delta, activationConstraint.distance)) {\n          return this.handleStart();\n        }\n      }\n\n      if (isDelayConstraint(activationConstraint)) {\n        if (hasExceededDistance(delta, activationConstraint.tolerance)) {\n          return this.handleCancel();\n        }\n      }\n\n      this.handlePending(activationConstraint, delta);\n      return;\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    onMove(coordinates);\n  }\n\n  private handleEnd() {\n    const {onAbort, onEnd} = this.props;\n\n    this.detach();\n    if (!this.activated) {\n      onAbort(this.props.active);\n    }\n    onEnd();\n  }\n\n  private handleCancel() {\n    const {onAbort, onCancel} = this.props;\n\n    this.detach();\n    if (!this.activated) {\n      onAbort(this.props.active);\n    }\n    onCancel();\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (event.code === KeyboardCode.Esc) {\n      this.handleCancel();\n    }\n  }\n\n  private removeTextSelection() {\n    this.document.getSelection()?.removeAllRanges();\n  }\n}\n", "import type {PointerEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  AbstractPointerSensorOptions,\n  PointerEventHandlers,\n} from './AbstractPointerSensor';\n\nconst events: PointerEventHandlers = {\n  cancel: {name: 'pointercancel'},\n  move: {name: 'pointermove'},\n  end: {name: 'pointerup'},\n};\n\nexport interface PointerSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type PointerSensorProps = SensorProps<PointerSensorOptions>;\n\nexport class PointerSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    const {event} = props;\n    // Pointer events stop firing if the target is unmounted while dragging\n    // Therefore we attach listeners to the owner document instead\n    const listenerTarget = getOwnerDocument(event.target);\n\n    super(props, events, listenerTarget);\n  }\n\n  static activators = [\n    {\n      eventName: 'onPointerDown' as const,\n      handler: (\n        {nativeEvent: event}: PointerEvent,\n        {onActivation}: PointerSensorOptions\n      ) => {\n        if (!event.isPrimary || event.button !== 0) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n", "import type {MouseEvent} from 'react';\nimport {getOwnerDocument} from '@dnd-kit/utilities';\n\nimport type {SensorProps} from '../types';\nimport {\n  AbstractPointerSensor,\n  PointerEventHandlers,\n  AbstractPointerSensorOptions,\n} from '../pointer';\n\nconst events: PointerEventHandlers = {\n  move: {name: 'mousemove'},\n  end: {name: 'mouseup'},\n};\n\nenum MouseButton {\n  RightClick = 2,\n}\n\nexport interface MouseSensorOptions extends AbstractPointerSensorOptions {}\n\nexport type MouseSensorProps = SensorProps<MouseSensorOptions>;\n\nexport class MouseSensor extends AbstractPointerSensor {\n  constructor(props: MouseSensorProps) {\n    super(props, events, getOwnerDocument(props.event.target));\n  }\n\n  static activators = [\n    {\n      eventName: 'onMouseDown' as const,\n      handler: (\n        {nativeEvent: event}: MouseEvent,\n        {onActivation}: MouseSensorOptions\n      ) => {\n        if (event.button === MouseButton.RightClick) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n}\n", "import type {TouchEvent} from 'react';\n\nimport {\n  AbstractPointerSensor,\n  PointerSensorProps,\n  PointerEventHandlers,\n  PointerSensorOptions,\n} from '../pointer';\nimport type {SensorProps} from '../types';\n\nconst events: PointerEventHandlers = {\n  cancel: {name: 'touchcancel'},\n  move: {name: 'touchmove'},\n  end: {name: 'touchend'},\n};\n\nexport interface TouchSensorOptions extends PointerSensorOptions {}\n\nexport type TouchSensorProps = SensorProps<TouchSensorOptions>;\n\nexport class TouchSensor extends AbstractPointerSensor {\n  constructor(props: PointerSensorProps) {\n    super(props, events);\n  }\n\n  static activators = [\n    {\n      eventName: 'onTouchStart' as const,\n      handler: (\n        {nativeEvent: event}: TouchEvent,\n        {onActivation}: TouchSensorOptions\n      ) => {\n        const {touches} = event;\n\n        if (touches.length > 1) {\n          return false;\n        }\n\n        onActivation?.({event});\n\n        return true;\n      },\n    },\n  ];\n\n  static setup() {\n    // Adding a non-capture and non-passive `touchmove` listener in order\n    // to force `event.preventDefault()` calls to work in dynamically added\n    // touchmove event handlers. This is required for iOS Safari.\n    window.addEventListener(events.move.name, noop, {\n      capture: false,\n      passive: false,\n    });\n\n    return function teardown() {\n      window.removeEventListener(events.move.name, noop);\n    };\n\n    // We create a new handler because the teardown function of another sensor\n    // could remove our event listener if we use a referentially equal listener.\n    function noop() {}\n  }\n}\n", "import {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useInterval, useLazyMemo, usePrevious} from '@dnd-kit/utilities';\n\nimport {getScrollDirectionAndSpeed} from '../../utilities';\nimport {Direction} from '../../types';\nimport type {Coordinates, ClientRect} from '../../types';\n\nexport type ScrollAncestorSortingFn = (ancestors: Element[]) => Element[];\n\nexport enum AutoScrollActivator {\n  Pointer,\n  DraggableRect,\n}\n\nexport interface Options {\n  acceleration?: number;\n  activator?: AutoScrollActivator;\n  canScroll?: CanScroll;\n  enabled?: boolean;\n  interval?: number;\n  layoutShiftCompensation?:\n    | boolean\n    | {\n        x: boolean;\n        y: boolean;\n      };\n  order?: TraversalOrder;\n  threshold?: {\n    x: number;\n    y: number;\n  };\n}\n\ninterface Arguments extends Options {\n  draggingRect: ClientRect | null;\n  enabled: boolean;\n  pointerCoordinates: Coordinates | null;\n  scrollableAncestors: Element[];\n  scrollableAncestorRects: ClientRect[];\n  delta: Coordinates;\n}\n\nexport type CanScroll = (element: Element) => boolean;\n\nexport enum TraversalOrder {\n  TreeOrder,\n  ReversedTreeOrder,\n}\n\ninterface ScrollDirection {\n  x: 0 | Direction;\n  y: 0 | Direction;\n}\n\nexport function useAutoScroller({\n  acceleration,\n  activator = AutoScrollActivator.Pointer,\n  canScroll,\n  draggingRect,\n  enabled,\n  interval = 5,\n  order = TraversalOrder.TreeOrder,\n  pointerCoordinates,\n  scrollableAncestors,\n  scrollableAncestorRects,\n  delta,\n  threshold,\n}: Arguments) {\n  const scrollIntent = useScrollIntent({delta, disabled: !enabled});\n  const [setAutoScrollInterval, clearAutoScrollInterval] = useInterval();\n  const scrollSpeed = useRef<Coordinates>({x: 0, y: 0});\n  const scrollDirection = useRef<ScrollDirection>({x: 0, y: 0});\n  const rect = useMemo(() => {\n    switch (activator) {\n      case AutoScrollActivator.Pointer:\n        return pointerCoordinates\n          ? {\n              top: pointerCoordinates.y,\n              bottom: pointerCoordinates.y,\n              left: pointerCoordinates.x,\n              right: pointerCoordinates.x,\n            }\n          : null;\n      case AutoScrollActivator.DraggableRect:\n        return draggingRect;\n    }\n  }, [activator, draggingRect, pointerCoordinates]);\n  const scrollContainerRef = useRef<Element | null>(null);\n  const autoScroll = useCallback(() => {\n    const scrollContainer = scrollContainerRef.current;\n\n    if (!scrollContainer) {\n      return;\n    }\n\n    const scrollLeft = scrollSpeed.current.x * scrollDirection.current.x;\n    const scrollTop = scrollSpeed.current.y * scrollDirection.current.y;\n\n    scrollContainer.scrollBy(scrollLeft, scrollTop);\n  }, []);\n  const sortedScrollableAncestors = useMemo(\n    () =>\n      order === TraversalOrder.TreeOrder\n        ? [...scrollableAncestors].reverse()\n        : scrollableAncestors,\n    [order, scrollableAncestors]\n  );\n\n  useEffect(\n    () => {\n      if (!enabled || !scrollableAncestors.length || !rect) {\n        clearAutoScrollInterval();\n        return;\n      }\n\n      for (const scrollContainer of sortedScrollableAncestors) {\n        if (canScroll?.(scrollContainer) === false) {\n          continue;\n        }\n\n        const index = scrollableAncestors.indexOf(scrollContainer);\n        const scrollContainerRect = scrollableAncestorRects[index];\n\n        if (!scrollContainerRect) {\n          continue;\n        }\n\n        const {direction, speed} = getScrollDirectionAndSpeed(\n          scrollContainer,\n          scrollContainerRect,\n          rect,\n          acceleration,\n          threshold\n        );\n\n        for (const axis of ['x', 'y'] as const) {\n          if (!scrollIntent[axis][direction[axis] as Direction]) {\n            speed[axis] = 0;\n            direction[axis] = 0;\n          }\n        }\n\n        if (speed.x > 0 || speed.y > 0) {\n          clearAutoScrollInterval();\n\n          scrollContainerRef.current = scrollContainer;\n          setAutoScrollInterval(autoScroll, interval);\n\n          scrollSpeed.current = speed;\n          scrollDirection.current = direction;\n\n          return;\n        }\n      }\n\n      scrollSpeed.current = {x: 0, y: 0};\n      scrollDirection.current = {x: 0, y: 0};\n      clearAutoScrollInterval();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      acceleration,\n      autoScroll,\n      canScroll,\n      clearAutoScrollInterval,\n      enabled,\n      interval,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(rect),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(scrollIntent),\n      setAutoScrollInterval,\n      scrollableAncestors,\n      sortedScrollableAncestors,\n      scrollableAncestorRects,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      JSON.stringify(threshold),\n    ]\n  );\n}\n\ninterface ScrollIntent {\n  x: Record<Direction, boolean>;\n  y: Record<Direction, boolean>;\n}\n\nconst defaultScrollIntent: ScrollIntent = {\n  x: {[Direction.Backward]: false, [Direction.Forward]: false},\n  y: {[Direction.Backward]: false, [Direction.Forward]: false},\n};\n\nfunction useScrollIntent({\n  delta,\n  disabled,\n}: {\n  delta: Coordinates;\n  disabled: boolean;\n}): ScrollIntent {\n  const previousDelta = usePrevious(delta);\n\n  return useLazyMemo<ScrollIntent>(\n    (previousIntent) => {\n      if (disabled || !previousDelta || !previousIntent) {\n        // Reset scroll intent tracking when auto-scrolling is disabled\n        return defaultScrollIntent;\n      }\n\n      const direction = {\n        x: Math.sign(delta.x - previousDelta.x),\n        y: Math.sign(delta.y - previousDelta.y),\n      };\n\n      // Keep track of the user intent to scroll in each direction for both axis\n      return {\n        x: {\n          [Direction.Backward]:\n            previousIntent.x[Direction.Backward] || direction.x === -1,\n          [Direction.Forward]:\n            previousIntent.x[Direction.Forward] || direction.x === 1,\n        },\n        y: {\n          [Direction.Backward]:\n            previousIntent.y[Direction.Backward] || direction.y === -1,\n          [Direction.Forward]:\n            previousIntent.y[Direction.Forward] || direction.y === 1,\n        },\n      };\n    },\n    [disabled, delta, previousDelta]\n  );\n}\n", "import {useLazyMemo} from '@dnd-kit/utilities';\n\nimport type {DraggableNode, DraggableNodes} from '../../store';\nimport type {UniqueIdentifier} from '../../types';\n\nexport function useCachedNode(\n  draggableNodes: DraggableNodes,\n  id: UniqueIdentifier | null\n): DraggableNode['node']['current'] {\n  const draggableNode = id != null ? draggableNodes.get(id) : undefined;\n  const node = draggableNode ? draggableNode.node.current : null;\n\n  return useLazyMemo(\n    (cachedNode) => {\n      if (id == null) {\n        return null;\n      }\n\n      // In some cases, the draggable node can unmount while dragging\n      // This is the case for virtualized lists. In those situations,\n      // we fall back to the last known value for that node.\n      return node ?? cachedNode ?? null;\n    },\n    [node, id]\n  );\n}\n", "import {useMemo} from 'react';\n\nimport type {SensorActivatorFunction, SensorDescriptor} from '../../sensors';\nimport type {\n  SyntheticListener,\n  SyntheticListeners,\n} from './useSyntheticListeners';\n\nexport function useCombineActivators(\n  sensors: SensorDescriptor<any>[],\n  getSyntheticHandler: (\n    handler: SensorActivatorFunction<any>,\n    sensor: SensorDescriptor<any>\n  ) => SyntheticListener['handler']\n): SyntheticListeners {\n  return useMemo(\n    () =>\n      sensors.reduce<SyntheticListeners>((accumulator, sensor) => {\n        const {sensor: Sensor} = sensor;\n\n        const sensorActivators = Sensor.activators.map((activator) => ({\n          eventName: activator.eventName,\n          handler: getSyntheticHandler(activator.handler, sensor),\n        }));\n\n        return [...accumulator, ...sensorActivators];\n      }, []),\n    [sensors, getSyntheticHandler]\n  );\n}\n", "import {useCallback, useEffect, useRef, useState} from 'react';\nimport {useLatestValue, useLazyMemo} from '@dnd-kit/utilities';\n\nimport {Rect} from '../../utilities/rect';\nimport type {DroppableContainer, RectMap} from '../../store/types';\nimport type {ClientRect, UniqueIdentifier} from '../../types';\n\ninterface Arguments {\n  dragging: boolean;\n  dependencies: any[];\n  config: DroppableMeasuring;\n}\n\nexport enum MeasuringStrategy {\n  Always,\n  BeforeDragging,\n  WhileDragging,\n}\n\nexport enum MeasuringFrequency {\n  Optimized = 'optimized',\n}\n\ntype MeasuringFunction = (element: HTMLElement) => ClientRect;\n\nexport interface DroppableMeasuring {\n  measure: MeasuringFunction;\n  strategy: MeasuringStrategy;\n  frequency: MeasuringFrequency | number;\n}\n\nconst defaultValue: RectMap = new Map();\n\nexport function useDroppableMeasuring(\n  containers: DroppableContainer[],\n  {dragging, dependencies, config}: Arguments\n) {\n  const [queue, setQueue] = useState<UniqueIdentifier[] | null>(null);\n  const {frequency, measure, strategy} = config;\n  const containersRef = useRef(containers);\n  const disabled = isDisabled();\n  const disabledRef = useLatestValue(disabled);\n  const measureDroppableContainers = useCallback(\n    (ids: UniqueIdentifier[] = []) => {\n      if (disabledRef.current) {\n        return;\n      }\n\n      setQueue((value) => {\n        if (value === null) {\n          return ids;\n        }\n\n        return value.concat(ids.filter((id) => !value.includes(id)));\n      });\n    },\n    [disabledRef]\n  );\n  const timeoutId = useRef<NodeJS.Timeout | null>(null);\n  const droppableRects = useLazyMemo<RectMap>(\n    (previousValue) => {\n      if (disabled && !dragging) {\n        return defaultValue;\n      }\n\n      if (\n        !previousValue ||\n        previousValue === defaultValue ||\n        containersRef.current !== containers ||\n        queue != null\n      ) {\n        const map: RectMap = new Map();\n\n        for (let container of containers) {\n          if (!container) {\n            continue;\n          }\n\n          if (\n            queue &&\n            queue.length > 0 &&\n            !queue.includes(container.id) &&\n            container.rect.current\n          ) {\n            // This container does not need to be re-measured\n            map.set(container.id, container.rect.current);\n            continue;\n          }\n\n          const node = container.node.current;\n          const rect = node ? new Rect(measure(node), node) : null;\n\n          container.rect.current = rect;\n\n          if (rect) {\n            map.set(container.id, rect);\n          }\n        }\n\n        return map;\n      }\n\n      return previousValue;\n    },\n    [containers, queue, dragging, disabled, measure]\n  );\n\n  useEffect(() => {\n    containersRef.current = containers;\n  }, [containers]);\n\n  useEffect(\n    () => {\n      if (disabled) {\n        return;\n      }\n\n      measureDroppableContainers();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dragging, disabled]\n  );\n\n  useEffect(\n    () => {\n      if (queue && queue.length > 0) {\n        setQueue(null);\n      }\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify(queue)]\n  );\n\n  useEffect(\n    () => {\n      if (\n        disabled ||\n        typeof frequency !== 'number' ||\n        timeoutId.current !== null\n      ) {\n        return;\n      }\n\n      timeoutId.current = setTimeout(() => {\n        measureDroppableContainers();\n        timeoutId.current = null;\n      }, frequency);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [frequency, disabled, measureDroppableContainers, ...dependencies]\n  );\n\n  return {\n    droppableRects,\n    measureDroppableContainers,\n    measuringScheduled: queue != null,\n  };\n\n  function isDisabled() {\n    switch (strategy) {\n      case MeasuringStrategy.Always:\n        return false;\n      case MeasuringStrategy.BeforeDragging:\n        return dragging;\n      default:\n        return !dragging;\n    }\n  }\n}\n", "import {useLazyMemo} from '@dnd-kit/utilities';\n\ntype AnyFunction = (...args: any) => any;\n\nexport function useInitialValue<\n  T,\n  U extends AnyFunction | undefined = undefined\n>(\n  value: T | null,\n  computeFn?: U\n): U extends AnyFunction ? ReturnType<U> | null : T | null {\n  return useLazyMemo(\n    (previousValue) => {\n      if (!value) {\n        return null;\n      }\n\n      if (previousValue) {\n        return previousValue;\n      }\n\n      return typeof computeFn === 'function' ? computeFn(value) : value;\n    },\n    [computeFn, value]\n  );\n}\n", "import type {ClientRect} from '../../types';\nimport {useInitialValue} from './useInitialValue';\n\nexport function useInitialRect(\n  node: HTMLElement | null,\n  measure: (node: HTMLElement) => ClientRect\n) {\n  return useInitialValue(node, measure);\n}\n", "import {useEffect, useMemo} from 'react';\nimport {useEvent} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  callback: MutationCallback;\n  disabled?: boolean;\n}\n\n/**\n * Returns a new MutationObserver instance.\n * If `MutationObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useMutationObserver({callback, disabled}: Arguments) {\n  const handleMutations = useEvent(callback);\n  const mutationObserver = useMemo(() => {\n    if (\n      disabled ||\n      typeof window === 'undefined' ||\n      typeof window.MutationObserver === 'undefined'\n    ) {\n      return undefined;\n    }\n\n    const {MutationObserver} = window;\n\n    return new MutationObserver(handleMutations);\n  }, [handleMutations, disabled]);\n\n  useEffect(() => {\n    return () => mutationObserver?.disconnect();\n  }, [mutationObserver]);\n\n  return mutationObserver;\n}\n", "import {useEffect, useMemo} from 'react';\nimport {useEvent} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  callback: ResizeObserverCallback;\n  disabled?: boolean;\n}\n\n/**\n * Returns a new ResizeObserver instance bound to the `onResize` callback.\n * If `ResizeObserver` is undefined in the execution environment, returns `undefined`.\n */\nexport function useResizeObserver({callback, disabled}: Arguments) {\n  const handleResize = useEvent(callback);\n  const resizeObserver = useMemo(\n    () => {\n      if (\n        disabled ||\n        typeof window === 'undefined' ||\n        typeof window.ResizeObserver === 'undefined'\n      ) {\n        return undefined;\n      }\n\n      const {ResizeObserver} = window;\n\n      return new ResizeObserver(handleResize);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [disabled]\n  );\n\n  useEffect(() => {\n    return () => resizeObserver?.disconnect();\n  }, [resizeObserver]);\n\n  return resizeObserver;\n}\n", "import {useState} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {getClientRect, Rect} from '../../utilities';\n\nimport {useMutationObserver} from './useMutationObserver';\nimport {useResizeObserver} from './useResizeObserver';\n\nfunction defaultMeasure(element: HTMLElement) {\n  return new Rect(getClientRect(element), element);\n}\n\nexport function useRect(\n  element: HTMLElement | null,\n  measure: (element: HTMLElement) => ClientRect = defaultMeasure,\n  fallbackRect?: ClientRect | null\n) {\n  const [rect, setRect] = useState<ClientRect | null>(null);\n\n  function measureRect() {\n    setRect((currentRect): ClientRect | null => {\n      if (!element) {\n        return null;\n      }\n  \n      if (element.isConnected === false) {\n        // Fall back to last rect we measured if the element is\n        // no longer connected to the DOM.\n        return currentRect ?? fallbackRect ?? null;\n      }\n  \n      const newRect = measure(element);\n  \n      if (JSON.stringify(currentRect) === JSON.stringify(newRect)) {\n        return currentRect;\n      }\n  \n      return newRect;\n    });\n  }\n  \n  const mutationObserver = useMutationObserver({\n    callback(records) {\n      if (!element) {\n        return;\n      }\n\n      for (const record of records) {\n        const {type, target} = record;\n\n        if (\n          type === 'childList' &&\n          target instanceof HTMLElement &&\n          target.contains(element)\n        ) {\n          measureRect();\n          break;\n        }\n      }\n    },\n  });\n  const resizeObserver = useResizeObserver({callback: measureRect});\n\n  useIsomorphicLayoutEffect(() => {\n    measureRect();\n\n    if (element) {\n      resizeObserver?.observe(element);\n      mutationObserver?.observe(document.body, {\n        childList: true,\n        subtree: true,\n      });\n    } else {\n      resizeObserver?.disconnect();\n      mutationObserver?.disconnect();\n    }\n  }, [element]);\n\n  return rect;\n}\n", "import type {ClientRect} from '../../types';\nimport {getRectDelta} from '../../utilities';\n\nimport {useInitialValue} from './useInitialValue';\n\nexport function useRectDelta(rect: ClientRect | null) {\n  const initialRect = useInitialValue(rect);\n\n  return getRectDelta(rect, initialRect);\n}\n", "import {useEffect, useRef} from 'react';\nimport {useLazyMemo} from '@dnd-kit/utilities';\n\nimport {getScrollableAncestors} from '../../utilities';\n\nconst defaultValue: Element[] = [];\n\nexport function useScrollableAncestors(node: HTMLElement | null) {\n  const previousNode = useRef(node);\n\n  const ancestors = useLazyMemo<Element[]>(\n    (previousValue) => {\n      if (!node) {\n        return defaultValue;\n      }\n\n      if (\n        previousValue &&\n        previousValue !== defaultValue &&\n        node &&\n        previousNode.current &&\n        node.parentNode === previousNode.current.parentNode\n      ) {\n        return previousValue;\n      }\n\n      return getScrollableAncestors(node);\n    },\n    [node]\n  );\n\n  useEffect(() => {\n    previousNode.current = node;\n  }, [node]);\n\n  return ancestors;\n}\n", "import {useState, useCallback, useMemo, useRef, useEffect} from 'react';\nimport {add} from '@dnd-kit/utilities';\n\nimport {\n  defaultCoordinates,\n  getScrollableElement,\n  getScrollCoordinates,\n  getScrollOffsets,\n} from '../../utilities';\nimport type {Coordinates} from '../../types';\n\ntype ScrollCoordinates = Map<HTMLElement | Window, Coordinates>;\n\nexport function useScrollOffsets(elements: Element[]): Coordinates {\n  const [\n    scrollCoordinates,\n    setScrollCoordinates,\n  ] = useState<ScrollCoordinates | null>(null);\n  const prevElements = useRef(elements);\n\n  // To-do: Throttle the handleScroll callback\n  const handleScroll = useCallback((event: Event) => {\n    const scrollingElement = getScrollableElement(event.target);\n\n    if (!scrollingElement) {\n      return;\n    }\n\n    setScrollCoordinates((scrollCoordinates) => {\n      if (!scrollCoordinates) {\n        return null;\n      }\n\n      scrollCoordinates.set(\n        scrollingElement,\n        getScrollCoordinates(scrollingElement)\n      );\n\n      return new Map(scrollCoordinates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const previousElements = prevElements.current;\n\n    if (elements !== previousElements) {\n      cleanup(previousElements);\n\n      const entries = elements\n        .map((element) => {\n          const scrollableElement = getScrollableElement(element);\n\n          if (scrollableElement) {\n            scrollableElement.addEventListener('scroll', handleScroll, {\n              passive: true,\n            });\n\n            return [\n              scrollableElement,\n              getScrollCoordinates(scrollableElement),\n            ] as const;\n          }\n\n          return null;\n        })\n        .filter(\n          (\n            entry\n          ): entry is [\n            HTMLElement | (Window & typeof globalThis),\n            Coordinates\n          ] => entry != null\n        );\n\n      setScrollCoordinates(entries.length ? new Map(entries) : null);\n\n      prevElements.current = elements;\n    }\n\n    return () => {\n      cleanup(elements);\n      cleanup(previousElements);\n    };\n\n    function cleanup(elements: Element[]) {\n      elements.forEach((element) => {\n        const scrollableElement = getScrollableElement(element);\n\n        scrollableElement?.removeEventListener('scroll', handleScroll);\n      });\n    }\n  }, [handleScroll, elements]);\n\n  return useMemo(() => {\n    if (elements.length) {\n      return scrollCoordinates\n        ? Array.from(scrollCoordinates.values()).reduce(\n            (acc, coordinates) => add(acc, coordinates),\n            defaultCoordinates\n          )\n        : getScrollOffsets(elements);\n    }\n\n    return defaultCoordinates;\n  }, [elements, scrollCoordinates]);\n}\n", "import {useEffect, useRef} from 'react';\nimport {Coordinates, subtract} from '@dnd-kit/utilities';\n\nimport {defaultCoordinates} from '../../utilities';\n\nexport function useScrollOffsetsDelta(\n  scrollOffsets: Coordinates,\n  dependencies: any[] = []\n) {\n  const initialScrollOffsets = useRef<Coordinates | null>(null);\n\n  useEffect(\n    () => {\n      initialScrollOffsets.current = null;\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    dependencies\n  );\n\n  useEffect(() => {\n    const hasScrollOffsets = scrollOffsets !== defaultCoordinates;\n\n    if (hasScrollOffsets && !initialScrollOffsets.current) {\n      initialScrollOffsets.current = scrollOffsets;\n    }\n\n    if (!hasScrollOffsets && initialScrollOffsets.current) {\n      initialScrollOffsets.current = null;\n    }\n  }, [scrollOffsets]);\n\n  return initialScrollOffsets.current\n    ? subtract(scrollOffsets, initialScrollOffsets.current)\n    : defaultCoordinates;\n}\n", "import {useEffect} from 'react';\nimport {canUseDOM} from '@dnd-kit/utilities';\n\nimport type {SensorDescriptor} from '../../sensors';\n\nexport function useSensorSetup(sensors: SensorDescriptor<any>[]) {\n  useEffect(\n    () => {\n      if (!canUseDOM) {\n        return;\n      }\n\n      const teardownFns = sensors.map(({sensor}) => sensor.setup?.());\n\n      return () => {\n        for (const teardown of teardownFns) {\n          teardown?.();\n        }\n      };\n    },\n    // TO-DO: Sensors length could theoretically change which would not be a valid dependency\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    sensors.map(({sensor}) => sensor)\n  );\n}\n", "import {useMemo} from 'react';\n\nimport type {SyntheticEventName, UniqueIdentifier} from '../../types';\n\nexport type SyntheticListener = {\n  eventName: SyntheticEventName;\n  handler: (event: React.SyntheticEvent, id: UniqueIdentifier) => void;\n};\n\nexport type SyntheticListeners = SyntheticListener[];\n\nexport type SyntheticListenerMap = Record<string, Function>;\n\nexport function useSyntheticListeners(\n  listeners: SyntheticListeners,\n  id: UniqueIdentifier\n): SyntheticListenerMap {\n  return useMemo(() => {\n    return listeners.reduce<SyntheticListenerMap>(\n      (acc, {eventName, handler}) => {\n        acc[eventName] = (event: React.SyntheticEvent) => {\n          handler(event, id);\n        };\n\n        return acc;\n      },\n      {} as SyntheticListenerMap\n    );\n  }, [listeners, id]);\n}\n", "import {useMemo} from 'react';\n\nimport {getWindowClientRect} from '../../utilities/rect';\n\nexport function useWindowRect(element: typeof window | null) {\n  return useMemo(() => (element ? getWindowClientRect(element) : null), [\n    element,\n  ]);\n}\n", "import {useState} from 'react';\nimport {getWindow, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport type {ClientRect} from '../../types';\nimport {Rect, getClientRect} from '../../utilities/rect';\nimport {isDocumentScrollingElement} from '../../utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {useWindowRect} from './useWindowRect';\n\nconst defaultValue: Rect[] = [];\n\nexport function useRects(\n  elements: Element[],\n  measure: (element: Element) => ClientRect = getClientRect\n): ClientRect[] {\n  const [firstElement] = elements;\n  const windowRect = useWindowRect(\n    firstElement ? getWindow(firstElement) : null\n  );\n  const [rects, setRects] = useState<ClientRect[]>(defaultValue);\n\n  function measureRects() {\n    setRects(() => {\n      if (!elements.length) {\n        return defaultValue;\n      }\n\n      return elements.map((element) =>\n        isDocumentScrollingElement(element)\n          ? (windowRect as ClientRect)\n          : new Rect(measure(element), element)\n      );\n    });\n  }\n\n  const resizeObserver = useResizeObserver({callback: measureRects});\n\n  useIsomorphicLayoutEffect(() => {\n    resizeObserver?.disconnect();\n    measureRects();\n    elements.forEach((element) => resizeObserver?.observe(element));\n  }, [elements]);\n\n  return rects;\n}\n", "import {isHTMLElement} from '@dnd-kit/utilities';\n\nexport function getMeasurableNode(\n  node: HTMLElement | undefined | null\n): HTMLElement | null {\n  if (!node) {\n    return null;\n  }\n\n  if (node.children.length > 1) {\n    return node;\n  }\n  const firstChild = node.children[0];\n\n  return isHTMLElement(firstChild) ? firstChild : node;\n}\n", "import {useMemo, useCallback, useState} from 'react';\nimport {isHTMLElement, useNodeRef} from '@dnd-kit/utilities';\n\nimport {useResizeObserver} from './useResizeObserver';\nimport {getMeasurableNode} from '../../utilities/nodes';\nimport type {PublicContextDescriptor} from '../../store';\nimport type {ClientRect} from '../../types';\n\ninterface Arguments {\n  measure(element: HTMLElement): ClientRect;\n}\n\nexport function useDragOverlayMeasuring({\n  measure,\n}: Arguments): PublicContextDescriptor['dragOverlay'] {\n  const [rect, setRect] = useState<ClientRect | null>(null);\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      for (const {target} of entries) {\n        if (isHTMLElement(target)) {\n          setRect((rect) => {\n            const newRect = measure(target);\n\n            return rect\n              ? {...rect, width: newRect.width, height: newRect.height}\n              : newRect;\n          });\n          break;\n        }\n      }\n    },\n    [measure]\n  );\n  const resizeObserver = useResizeObserver({callback: handleResize});\n  const handleNodeChange = useCallback(\n    (element) => {\n      const node = getMeasurableNode(element);\n\n      resizeObserver?.disconnect();\n\n      if (node) {\n        resizeObserver?.observe(node);\n      }\n\n      setRect(node ? measure(node) : null);\n    },\n    [measure, resizeObserver]\n  );\n  const [nodeRef, setRef] = useNodeRef(handleNodeChange);\n\n  return useMemo(\n    () => ({\n      nodeRef,\n      rect,\n      setRef,\n    }),\n    [rect, nodeRef, setRef]\n  );\n}\n", "import type {DeepRequired} from '@dnd-kit/utilities';\n\nimport type {DataRef} from '../../store/types';\nimport {KeyboardSensor, PointerSensor} from '../../sensors';\nimport {MeasuringStrategy, MeasuringFrequency} from '../../hooks/utilities';\nimport {\n  getClientRect,\n  getTransformAgnosticClientRect,\n} from '../../utilities/rect';\n\nimport type {MeasuringConfiguration} from './types';\n\nexport const defaultSensors = [\n  {sensor: PointerSensor, options: {}},\n  {sensor: KeyboardSensor, options: {}},\n];\n\nexport const defaultData: DataRef = {current: {}};\n\nexport const defaultMeasuringConfiguration: DeepRequired<MeasuringConfiguration> = {\n  draggable: {\n    measure: getTransformAgnosticClientRect,\n  },\n  droppable: {\n    measure: getTransformAgnosticClientRect,\n    strategy: MeasuringStrategy.WhileDragging,\n    frequency: MeasuringFrequency.Optimized,\n  },\n  dragOverlay: {\n    measure: getClientRect,\n  },\n};\n", "import type {UniqueIdentifier} from '../types';\nimport type {DroppableContainer} from './types';\n\ntype Identifier = UniqueIdentifier | null | undefined;\n\nexport class DroppableContainersMap extends Map<\n  UniqueIdentifier,\n  DroppableContainer\n> {\n  get(id: Identifier) {\n    return id != null ? super.get(id) ?? undefined : undefined;\n  }\n\n  toArray(): DroppableContainer[] {\n    return Array.from(this.values());\n  }\n\n  getEnabled(): DroppableContainer[] {\n    return this.toArray().filter(({disabled}) => !disabled);\n  }\n\n  getNodeFor(id: Identifier) {\n    return this.get(id)?.node.current ?? undefined;\n  }\n}\n", "import {createContext} from 'react';\n\nimport {noop} from '../utilities/other';\nimport {defaultMeasuringConfiguration} from '../components/DndContext/defaults';\nimport {DroppableContainersMap} from './constructors';\nimport type {InternalContextDescriptor, PublicContextDescriptor} from './types';\n\nexport const defaultPublicContext: PublicContextDescriptor = {\n  activatorEvent: null,\n  active: null,\n  activeNode: null,\n  activeNodeRect: null,\n  collisions: null,\n  containerNodeRect: null,\n  draggableNodes: new Map(),\n  droppableRects: new Map(),\n  droppableContainers: new DroppableContainersMap(),\n  over: null,\n  dragOverlay: {\n    nodeRef: {\n      current: null,\n    },\n    rect: null,\n    setRef: noop,\n  },\n  scrollableAncestors: [],\n  scrollableAncestorRects: [],\n  measuringConfiguration: defaultMeasuringConfiguration,\n  measureDroppableContainers: noop,\n  windowRect: null,\n  measuringScheduled: false,\n};\n\nexport const defaultInternalContext: InternalContextDescriptor = {\n  activatorEvent: null,\n  activators: [],\n  active: null,\n  activeNodeRect: null,\n  ariaDescribedById: {\n    draggable: '',\n  },\n  dispatch: noop,\n  draggableNodes: new Map(),\n  over: null,\n  measureDroppableContainers: noop,\n};\n\nexport const InternalContext = createContext<InternalContextDescriptor>(\n  defaultInternalContext\n);\n\nexport const PublicContext = createContext<PublicContextDescriptor>(\n  defaultPublicContext\n);\n", "import {Action, Actions} from './actions';\nimport {DroppableContainersMap} from './constructors';\nimport type {State} from './types';\n\nexport function getInitialState(): State {\n  return {\n    draggable: {\n      active: null,\n      initialCoordinates: {x: 0, y: 0},\n      nodes: new Map(),\n      translate: {x: 0, y: 0},\n    },\n    droppable: {\n      containers: new DroppableContainersMap(),\n    },\n  };\n}\n\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case Action.DragStart:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          initialCoordinates: action.initialCoordinates,\n          active: action.active,\n        },\n      };\n    case Action.DragMove:\n      if (state.draggable.active == null) {\n        return state;\n      }\n\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          translate: {\n            x: action.coordinates.x - state.draggable.initialCoordinates.x,\n            y: action.coordinates.y - state.draggable.initialCoordinates.y,\n          },\n        },\n      };\n    case Action.DragEnd:\n    case Action.DragCancel:\n      return {\n        ...state,\n        draggable: {\n          ...state.draggable,\n          active: null,\n          initialCoordinates: {x: 0, y: 0},\n          translate: {x: 0, y: 0},\n        },\n      };\n\n    case Action.RegisterDroppable: {\n      const {element} = action;\n      const {id} = element;\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, element);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.SetDroppableDisabled: {\n      const {id, key, disabled} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.set(id, {\n        ...element,\n        disabled,\n      });\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    case Action.UnregisterDroppable: {\n      const {id, key} = action;\n      const element = state.droppable.containers.get(id);\n\n      if (!element || key !== element.key) {\n        return state;\n      }\n\n      const containers = new DroppableContainersMap(state.droppable.containers);\n      containers.delete(id);\n\n      return {\n        ...state,\n        droppable: {\n          ...state.droppable,\n          containers,\n        },\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n", "import {useContext, useEffect} from 'react';\nimport {\n  findFirstFocusableNode,\n  isKeyboardEvent,\n  usePrevious,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext} from '../../../store';\n\ninterface Props {\n  disabled: boolean;\n}\n\nexport function RestoreFocus({disabled}: Props) {\n  const {active, activatorEvent, draggableNodes} = useContext(InternalContext);\n  const previousActivatorEvent = usePrevious(activatorEvent);\n  const previousActiveId = usePrevious(active?.id);\n\n  // Restore keyboard focus on the activator node\n  useEffect(() => {\n    if (disabled) {\n      return;\n    }\n\n    if (!activatorEvent && previousActivatorEvent && previousActiveId != null) {\n      if (!isKeyboardEvent(previousActivatorEvent)) {\n        return;\n      }\n\n      if (document.activeElement === previousActivatorEvent.target) {\n        // No need to restore focus\n        return;\n      }\n\n      const draggableNode = draggableNodes.get(previousActiveId);\n\n      if (!draggableNode) {\n        return;\n      }\n\n      const {activatorNode, node} = draggableNode;\n\n      if (!activatorNode.current && !node.current) {\n        return;\n      }\n\n      requestAnimationFrame(() => {\n        for (const element of [activatorNode.current, node.current]) {\n          if (!element) {\n            continue;\n          }\n\n          const focusableNode = findFirstFocusableNode(element);\n\n          if (focusableNode) {\n            focusableNode.focus();\n            break;\n          }\n        }\n      });\n    }\n  }, [\n    activatorEvent,\n    disabled,\n    draggableNodes,\n    previousActiveId,\n    previousActivatorEvent,\n  ]);\n\n  return null;\n}\n", "import type {FirstArgument, Transform} from '@dnd-kit/utilities';\n\nimport type {Modifiers, Modifier} from './types';\n\nexport function applyModifiers(\n  modifiers: Modifiers | undefined,\n  {transform, ...args}: FirstArgument<Modifier>\n): Transform {\n  return modifiers?.length\n    ? modifiers.reduce<Transform>((accumulator, modifier) => {\n        return modifier({\n          transform: accumulator,\n          ...args,\n        });\n      }, transform)\n    : transform;\n}\n", "import {useMemo} from 'react';\nimport type {DeepRequired} from '@dnd-kit/utilities';\n\nimport {defaultMeasuringConfiguration} from '../defaults';\nimport type {MeasuringConfiguration} from '../types';\n\nexport function useMeasuringConfiguration(\n  config: MeasuringConfiguration | undefined\n): DeepRequired<MeasuringConfiguration> {\n  return useMemo(\n    () => ({\n      draggable: {\n        ...defaultMeasuringConfiguration.draggable,\n        ...config?.draggable,\n      },\n      droppable: {\n        ...defaultMeasuringConfiguration.droppable,\n        ...config?.droppable,\n      },\n      dragOverlay: {\n        ...defaultMeasuringConfiguration.dragOverlay,\n        ...config?.dragOverlay,\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [config?.draggable, config?.droppable, config?.dragOverlay]\n  );\n}\n", "import {useRef} from 'react';\nimport {useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\nimport {getRectDelta} from '../../../utilities/rect';\nimport {getFirstScrollableAncestor} from '../../../utilities/scroll';\nimport type {ClientRect} from '../../../types';\nimport type {DraggableNode} from '../../../store';\nimport type {MeasuringFunction} from '../types';\n\ninterface Options {\n  activeNode: DraggableNode | null | undefined;\n  config: boolean | {x: boolean; y: boolean} | undefined;\n  initialRect: ClientRect | null;\n  measure: MeasuringFunction;\n}\n\nexport function useLayoutShiftScrollCompensation({\n  activeNode,\n  measure,\n  initialRect,\n  config = true,\n}: Options) {\n  const initialized = useRef(false);\n  const {x, y} = typeof config === 'boolean' ? {x: config, y: config} : config;\n\n  useIsomorphicLayoutEffect(() => {\n    const disabled = !x && !y;\n\n    if (disabled || !activeNode) {\n      initialized.current = false;\n      return;\n    }\n\n    if (initialized.current || !initialRect) {\n      // Return early if layout shift scroll compensation was already attempted\n      // or if there is no initialRect to compare to.\n      return;\n    }\n\n    // Get the most up to date node ref for the active draggable\n    const node = activeNode?.node.current;\n\n    if (!node || node.isConnected === false) {\n      // Return early if there is no attached node ref or if the node is\n      // disconnected from the document.\n      return;\n    }\n\n    const rect = measure(node);\n    const rectDelta = getRectDelta(rect, initialRect);\n\n    if (!x) {\n      rectDelta.x = 0;\n    }\n\n    if (!y) {\n      rectDelta.y = 0;\n    }\n\n    // Only perform layout shift scroll compensation once\n    initialized.current = true;\n\n    if (Math.abs(rectDelta.x) > 0 || Math.abs(rectDelta.y) > 0) {\n      const firstScrollableAncestor = getFirstScrollableAncestor(node);\n\n      if (firstScrollableAncestor) {\n        firstScrollableAncestor.scrollBy({\n          top: rectDelta.y,\n          left: rectDelta.x,\n        });\n      }\n    }\n  }, [activeNode, x, y, initialRect, measure]);\n}\n", "import React, {\n  memo,\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {unstable_batchedUpdates} from 'react-dom';\nimport {\n  add,\n  getEventCoordinates,\n  getWindow,\n  useLatestValue,\n  useIsomorphicLayoutEffect,\n  useUniqueId,\n} from '@dnd-kit/utilities';\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {\n  Action,\n  PublicContext,\n  InternalContext,\n  PublicContextDescriptor,\n  InternalContextDescriptor,\n  getInitialState,\n  reducer,\n} from '../../store';\nimport {DndMonitorContext, useDndMonitorProvider} from '../DndMonitor';\nimport {\n  useAutoScroller,\n  useCachedNode,\n  useCombineActivators,\n  useDragOverlayMeasuring,\n  useDroppableMeasuring,\n  useInitialRect,\n  useRect,\n  useRectDelta,\n  useRects,\n  useScrollableAncestors,\n  useScrollOffsets,\n  useScrollOffsetsDelta,\n  useSensorSetup,\n  useWindowRect,\n} from '../../hooks/utilities';\nimport type {AutoScrollOptions, SyntheticListener} from '../../hooks/utilities';\nimport type {\n  Sensor,\n  SensorContext,\n  SensorDescriptor,\n  SensorActivatorFunction,\n  SensorInstance,\n} from '../../sensors';\nimport {\n  adjustScale,\n  CollisionDetection,\n  defaultCoordinates,\n  getAdjustedRect,\n  getFirstCollision,\n  rectIntersection,\n} from '../../utilities';\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport type {Active, Over} from '../../store/types';\nimport type {\n  DragStartEvent,\n  DragCancelEvent,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  UniqueIdentifier,\n  DragPendingEvent,\n  DragAbortEvent,\n} from '../../types';\nimport {\n  Accessibility,\n  Announcements,\n  RestoreFocus,\n  ScreenReaderInstructions,\n} from '../Accessibility';\n\nimport {defaultData, defaultSensors} from './defaults';\nimport {\n  useLayoutShiftScrollCompensation,\n  useMeasuringConfiguration,\n} from './hooks';\nimport type {MeasuringConfiguration} from './types';\n\nexport interface Props {\n  id?: string;\n  accessibility?: {\n    announcements?: Announcements;\n    container?: Element;\n    restoreFocus?: boolean;\n    screenReaderInstructions?: ScreenReaderInstructions;\n  };\n  autoScroll?: boolean | AutoScrollOptions;\n  cancelDrop?: CancelDrop;\n  children?: React.ReactNode;\n  collisionDetection?: CollisionDetection;\n  measuring?: MeasuringConfiguration;\n  modifiers?: Modifiers;\n  sensors?: SensorDescriptor<any>[];\n  onDragAbort?(event: DragAbortEvent): void;\n  onDragPending?(event: DragPendingEvent): void;\n  onDragStart?(event: DragStartEvent): void;\n  onDragMove?(event: DragMoveEvent): void;\n  onDragOver?(event: DragOverEvent): void;\n  onDragEnd?(event: DragEndEvent): void;\n  onDragCancel?(event: DragCancelEvent): void;\n}\n\nexport interface CancelDropArguments extends DragEndEvent {}\n\nexport type CancelDrop = (\n  args: CancelDropArguments\n) => boolean | Promise<boolean>;\n\ninterface DndEvent extends Event {\n  dndKit?: {\n    capturedBy: Sensor<any>;\n  };\n}\n\nexport const ActiveDraggableContext = createContext<Transform>({\n  ...defaultCoordinates,\n  scaleX: 1,\n  scaleY: 1,\n});\n\nenum Status {\n  Uninitialized,\n  Initializing,\n  Initialized,\n}\n\nexport const DndContext = memo(function DndContext({\n  id,\n  accessibility,\n  autoScroll = true,\n  children,\n  sensors = defaultSensors,\n  collisionDetection = rectIntersection,\n  measuring,\n  modifiers,\n  ...props\n}: Props) {\n  const store = useReducer(reducer, undefined, getInitialState);\n  const [state, dispatch] = store;\n  const [dispatchMonitorEvent, registerMonitorListener] =\n    useDndMonitorProvider();\n  const [status, setStatus] = useState<Status>(Status.Uninitialized);\n  const isInitialized = status === Status.Initialized;\n  const {\n    draggable: {active: activeId, nodes: draggableNodes, translate},\n    droppable: {containers: droppableContainers},\n  } = state;\n  const node = activeId != null ? draggableNodes.get(activeId) : null;\n  const activeRects = useRef<Active['rect']['current']>({\n    initial: null,\n    translated: null,\n  });\n  const active = useMemo<Active | null>(\n    () =>\n      activeId != null\n        ? {\n            id: activeId,\n            // It's possible for the active node to unmount while dragging\n            data: node?.data ?? defaultData,\n            rect: activeRects,\n          }\n        : null,\n    [activeId, node]\n  );\n  const activeRef = useRef<UniqueIdentifier | null>(null);\n  const [activeSensor, setActiveSensor] = useState<SensorInstance | null>(null);\n  const [activatorEvent, setActivatorEvent] = useState<Event | null>(null);\n  const latestProps = useLatestValue(props, Object.values(props));\n  const draggableDescribedById = useUniqueId(`DndDescribedBy`, id);\n  const enabledDroppableContainers = useMemo(\n    () => droppableContainers.getEnabled(),\n    [droppableContainers]\n  );\n  const measuringConfiguration = useMeasuringConfiguration(measuring);\n  const {droppableRects, measureDroppableContainers, measuringScheduled} =\n    useDroppableMeasuring(enabledDroppableContainers, {\n      dragging: isInitialized,\n      dependencies: [translate.x, translate.y],\n      config: measuringConfiguration.droppable,\n    });\n  const activeNode = useCachedNode(draggableNodes, activeId);\n  const activationCoordinates = useMemo(\n    () => (activatorEvent ? getEventCoordinates(activatorEvent) : null),\n    [activatorEvent]\n  );\n  const autoScrollOptions = getAutoScrollerOptions();\n  const initialActiveNodeRect = useInitialRect(\n    activeNode,\n    measuringConfiguration.draggable.measure\n  );\n\n  useLayoutShiftScrollCompensation({\n    activeNode: activeId != null ? draggableNodes.get(activeId) : null,\n    config: autoScrollOptions.layoutShiftCompensation,\n    initialRect: initialActiveNodeRect,\n    measure: measuringConfiguration.draggable.measure,\n  });\n\n  const activeNodeRect = useRect(\n    activeNode,\n    measuringConfiguration.draggable.measure,\n    initialActiveNodeRect\n  );\n  const containerNodeRect = useRect(\n    activeNode ? activeNode.parentElement : null\n  );\n  const sensorContext = useRef<SensorContext>({\n    activatorEvent: null,\n    active: null,\n    activeNode,\n    collisionRect: null,\n    collisions: null,\n    droppableRects,\n    draggableNodes,\n    draggingNode: null,\n    draggingNodeRect: null,\n    droppableContainers,\n    over: null,\n    scrollableAncestors: [],\n    scrollAdjustedTranslate: null,\n  });\n  const overNode = droppableContainers.getNodeFor(\n    sensorContext.current.over?.id\n  );\n  const dragOverlay = useDragOverlayMeasuring({\n    measure: measuringConfiguration.dragOverlay.measure,\n  });\n\n  // Use the rect of the drag overlay if it is mounted\n  const draggingNode = dragOverlay.nodeRef.current ?? activeNode;\n  const draggingNodeRect = isInitialized\n    ? dragOverlay.rect ?? activeNodeRect\n    : null;\n  const usesDragOverlay = Boolean(\n    dragOverlay.nodeRef.current && dragOverlay.rect\n  );\n  // The delta between the previous and new position of the draggable node\n  // is only relevant when there is no drag overlay\n  const nodeRectDelta = useRectDelta(usesDragOverlay ? null : activeNodeRect);\n\n  // Get the window rect of the dragging node\n  const windowRect = useWindowRect(\n    draggingNode ? getWindow(draggingNode) : null\n  );\n\n  // Get scrollable ancestors of the dragging node\n  const scrollableAncestors = useScrollableAncestors(\n    isInitialized ? overNode ?? activeNode : null\n  );\n  const scrollableAncestorRects = useRects(scrollableAncestors);\n\n  // Apply modifiers\n  const modifiedTranslate = applyModifiers(modifiers, {\n    transform: {\n      x: translate.x - nodeRectDelta.x,\n      y: translate.y - nodeRectDelta.y,\n      scaleX: 1,\n      scaleY: 1,\n    },\n    activatorEvent,\n    active,\n    activeNodeRect,\n    containerNodeRect,\n    draggingNodeRect,\n    over: sensorContext.current.over,\n    overlayNodeRect: dragOverlay.rect,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    windowRect,\n  });\n\n  const pointerCoordinates = activationCoordinates\n    ? add(activationCoordinates, translate)\n    : null;\n\n  const scrollOffsets = useScrollOffsets(scrollableAncestors);\n  // Represents the scroll delta since dragging was initiated\n  const scrollAdjustment = useScrollOffsetsDelta(scrollOffsets);\n  // Represents the scroll delta since the last time the active node rect was measured\n  const activeNodeScrollDelta = useScrollOffsetsDelta(scrollOffsets, [\n    activeNodeRect,\n  ]);\n\n  const scrollAdjustedTranslate = add(modifiedTranslate, scrollAdjustment);\n\n  const collisionRect = draggingNodeRect\n    ? getAdjustedRect(draggingNodeRect, modifiedTranslate)\n    : null;\n\n  const collisions =\n    active && collisionRect\n      ? collisionDetection({\n          active,\n          collisionRect,\n          droppableRects,\n          droppableContainers: enabledDroppableContainers,\n          pointerCoordinates,\n        })\n      : null;\n  const overId = getFirstCollision(collisions, 'id');\n  const [over, setOver] = useState<Over | null>(null);\n\n  // When there is no drag overlay used, we need to account for the\n  // window scroll delta\n  const appliedTranslate = usesDragOverlay\n    ? modifiedTranslate\n    : add(modifiedTranslate, activeNodeScrollDelta);\n\n  const transform = adjustScale(\n    appliedTranslate,\n    over?.rect ?? null,\n    activeNodeRect\n  );\n\n  const activeSensorRef = useRef<SensorInstance | null>(null);\n  const instantiateSensor = useCallback(\n    (\n      event: React.SyntheticEvent,\n      {sensor: Sensor, options}: SensorDescriptor<any>\n    ) => {\n      if (activeRef.current == null) {\n        return;\n      }\n\n      const activeNode = draggableNodes.get(activeRef.current);\n\n      if (!activeNode) {\n        return;\n      }\n\n      const activatorEvent = event.nativeEvent;\n\n      const sensorInstance = new Sensor({\n        active: activeRef.current,\n        activeNode,\n        event: activatorEvent,\n        options,\n        // Sensors need to be instantiated with refs for arguments that change over time\n        // otherwise they are frozen in time with the stale arguments\n        context: sensorContext,\n        onAbort(id) {\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragAbort} = latestProps.current;\n          const event: DragAbortEvent = {id};\n          onDragAbort?.(event);\n          dispatchMonitorEvent({type: 'onDragAbort', event});\n        },\n        onPending(id, constraint, initialCoordinates, offset) {\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragPending} = latestProps.current;\n          const event: DragPendingEvent = {\n            id,\n            constraint,\n            initialCoordinates,\n            offset,\n          };\n\n          onDragPending?.(event);\n          dispatchMonitorEvent({type: 'onDragPending', event});\n        },\n        onStart(initialCoordinates) {\n          const id = activeRef.current;\n\n          if (id == null) {\n            return;\n          }\n\n          const draggableNode = draggableNodes.get(id);\n\n          if (!draggableNode) {\n            return;\n          }\n\n          const {onDragStart} = latestProps.current;\n          const event: DragStartEvent = {\n            activatorEvent,\n            active: {id, data: draggableNode.data, rect: activeRects},\n          };\n\n          unstable_batchedUpdates(() => {\n            onDragStart?.(event);\n            setStatus(Status.Initializing);\n            dispatch({\n              type: Action.DragStart,\n              initialCoordinates,\n              active: id,\n            });\n            dispatchMonitorEvent({type: 'onDragStart', event});\n            setActiveSensor(activeSensorRef.current);\n            setActivatorEvent(activatorEvent);\n          });\n        },\n        onMove(coordinates) {\n          dispatch({\n            type: Action.DragMove,\n            coordinates,\n          });\n        },\n        onEnd: createHandler(Action.DragEnd),\n        onCancel: createHandler(Action.DragCancel),\n      });\n\n      activeSensorRef.current = sensorInstance;\n\n      function createHandler(type: Action.DragEnd | Action.DragCancel) {\n        return async function handler() {\n          const {active, collisions, over, scrollAdjustedTranslate} =\n            sensorContext.current;\n          let event: DragEndEvent | null = null;\n\n          if (active && scrollAdjustedTranslate) {\n            const {cancelDrop} = latestProps.current;\n\n            event = {\n              activatorEvent,\n              active: active,\n              collisions,\n              delta: scrollAdjustedTranslate,\n              over,\n            };\n\n            if (type === Action.DragEnd && typeof cancelDrop === 'function') {\n              const shouldCancel = await Promise.resolve(cancelDrop(event));\n\n              if (shouldCancel) {\n                type = Action.DragCancel;\n              }\n            }\n          }\n\n          activeRef.current = null;\n\n          unstable_batchedUpdates(() => {\n            dispatch({type});\n            setStatus(Status.Uninitialized);\n            setOver(null);\n            setActiveSensor(null);\n            setActivatorEvent(null);\n            activeSensorRef.current = null;\n\n            const eventName =\n              type === Action.DragEnd ? 'onDragEnd' : 'onDragCancel';\n\n            if (event) {\n              const handler = latestProps.current[eventName];\n\n              handler?.(event);\n              dispatchMonitorEvent({type: eventName, event});\n            }\n          });\n        };\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes]\n  );\n\n  const bindActivatorToSensorInstantiator = useCallback(\n    (\n      handler: SensorActivatorFunction<any>,\n      sensor: SensorDescriptor<any>\n    ): SyntheticListener['handler'] => {\n      return (event, active) => {\n        const nativeEvent = event.nativeEvent as DndEvent;\n        const activeDraggableNode = draggableNodes.get(active);\n\n        if (\n          // Another sensor is already instantiating\n          activeRef.current !== null ||\n          // No active draggable\n          !activeDraggableNode ||\n          // Event has already been captured\n          nativeEvent.dndKit ||\n          nativeEvent.defaultPrevented\n        ) {\n          return;\n        }\n\n        const activationContext = {\n          active: activeDraggableNode,\n        };\n        const shouldActivate = handler(\n          event,\n          sensor.options,\n          activationContext\n        );\n\n        if (shouldActivate === true) {\n          nativeEvent.dndKit = {\n            capturedBy: sensor.sensor,\n          };\n\n          activeRef.current = active;\n          instantiateSensor(event, sensor);\n        }\n      };\n    },\n    [draggableNodes, instantiateSensor]\n  );\n\n  const activators = useCombineActivators(\n    sensors,\n    bindActivatorToSensorInstantiator\n  );\n\n  useSensorSetup(sensors);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activeNodeRect && status === Status.Initializing) {\n      setStatus(Status.Initialized);\n    }\n  }, [activeNodeRect, status]);\n\n  useEffect(\n    () => {\n      const {onDragMove} = latestProps.current;\n      const {active, activatorEvent, collisions, over} = sensorContext.current;\n\n      if (!active || !activatorEvent) {\n        return;\n      }\n\n      const event: DragMoveEvent = {\n        active,\n        activatorEvent,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        onDragMove?.(event);\n        dispatchMonitorEvent({type: 'onDragMove', event});\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [scrollAdjustedTranslate.x, scrollAdjustedTranslate.y]\n  );\n\n  useEffect(\n    () => {\n      const {\n        active,\n        activatorEvent,\n        collisions,\n        droppableContainers,\n        scrollAdjustedTranslate,\n      } = sensorContext.current;\n\n      if (\n        !active ||\n        activeRef.current == null ||\n        !activatorEvent ||\n        !scrollAdjustedTranslate\n      ) {\n        return;\n      }\n\n      const {onDragOver} = latestProps.current;\n      const overContainer = droppableContainers.get(overId);\n      const over =\n        overContainer && overContainer.rect.current\n          ? {\n              id: overContainer.id,\n              rect: overContainer.rect.current,\n              data: overContainer.data,\n              disabled: overContainer.disabled,\n            }\n          : null;\n      const event: DragOverEvent = {\n        active,\n        activatorEvent,\n        collisions,\n        delta: {\n          x: scrollAdjustedTranslate.x,\n          y: scrollAdjustedTranslate.y,\n        },\n        over,\n      };\n\n      unstable_batchedUpdates(() => {\n        setOver(over);\n        onDragOver?.(event);\n        dispatchMonitorEvent({type: 'onDragOver', event});\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [overId]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    sensorContext.current = {\n      activatorEvent,\n      active,\n      activeNode,\n      collisionRect,\n      collisions,\n      droppableRects,\n      draggableNodes,\n      draggingNode,\n      draggingNodeRect,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n      scrollAdjustedTranslate,\n    };\n\n    activeRects.current = {\n      initial: draggingNodeRect,\n      translated: collisionRect,\n    };\n  }, [\n    active,\n    activeNode,\n    collisions,\n    collisionRect,\n    draggableNodes,\n    draggingNode,\n    draggingNodeRect,\n    droppableRects,\n    droppableContainers,\n    over,\n    scrollableAncestors,\n    scrollAdjustedTranslate,\n  ]);\n\n  useAutoScroller({\n    ...autoScrollOptions,\n    delta: translate,\n    draggingRect: collisionRect,\n    pointerCoordinates,\n    scrollableAncestors,\n    scrollableAncestorRects,\n  });\n\n  const publicContext = useMemo(() => {\n    const context: PublicContextDescriptor = {\n      active,\n      activeNode,\n      activeNodeRect,\n      activatorEvent,\n      collisions,\n      containerNodeRect,\n      dragOverlay,\n      draggableNodes,\n      droppableContainers,\n      droppableRects,\n      over,\n      measureDroppableContainers,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      measuringConfiguration,\n      measuringScheduled,\n      windowRect,\n    };\n\n    return context;\n  }, [\n    active,\n    activeNode,\n    activeNodeRect,\n    activatorEvent,\n    collisions,\n    containerNodeRect,\n    dragOverlay,\n    draggableNodes,\n    droppableContainers,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n    scrollableAncestors,\n    scrollableAncestorRects,\n    measuringConfiguration,\n    measuringScheduled,\n    windowRect,\n  ]);\n\n  const internalContext = useMemo(() => {\n    const context: InternalContextDescriptor = {\n      activatorEvent,\n      activators,\n      active,\n      activeNodeRect,\n      ariaDescribedById: {\n        draggable: draggableDescribedById,\n      },\n      dispatch,\n      draggableNodes,\n      over,\n      measureDroppableContainers,\n    };\n\n    return context;\n  }, [\n    activatorEvent,\n    activators,\n    active,\n    activeNodeRect,\n    dispatch,\n    draggableDescribedById,\n    draggableNodes,\n    over,\n    measureDroppableContainers,\n  ]);\n\n  return (\n    <DndMonitorContext.Provider value={registerMonitorListener}>\n      <InternalContext.Provider value={internalContext}>\n        <PublicContext.Provider value={publicContext}>\n          <ActiveDraggableContext.Provider value={transform}>\n            {children}\n          </ActiveDraggableContext.Provider>\n        </PublicContext.Provider>\n        <RestoreFocus disabled={accessibility?.restoreFocus === false} />\n      </InternalContext.Provider>\n      <Accessibility\n        {...accessibility}\n        hiddenTextDescribedById={draggableDescribedById}\n      />\n    </DndMonitorContext.Provider>\n  );\n\n  function getAutoScrollerOptions() {\n    const activeSensorDisablesAutoscroll =\n      activeSensor?.autoScrollEnabled === false;\n    const autoScrollGloballyDisabled =\n      typeof autoScroll === 'object'\n        ? autoScroll.enabled === false\n        : autoScroll === false;\n    const enabled =\n      isInitialized &&\n      !activeSensorDisablesAutoscroll &&\n      !autoScrollGloballyDisabled;\n\n    if (typeof autoScroll === 'object') {\n      return {\n        ...autoScroll,\n        enabled,\n      };\n    }\n\n    return {enabled};\n  }\n});\n", "import {createContext, useContext, useMemo} from 'react';\nimport {\n  Transform,\n  useNodeRef,\n  useIsomorphicLayoutEffect,\n  useLatestValue,\n  useUniqueId,\n} from '@dnd-kit/utilities';\n\nimport {InternalContext, Data} from '../store';\nimport type {UniqueIdentifier} from '../types';\nimport {ActiveDraggableContext} from '../components/DndContext';\nimport {useSyntheticListeners, SyntheticListenerMap} from './utilities';\n\nexport interface UseDraggableArguments {\n  id: UniqueIdentifier;\n  data?: Data;\n  disabled?: boolean;\n  attributes?: {\n    role?: string;\n    roleDescription?: string;\n    tabIndex?: number;\n  };\n}\n\nexport interface DraggableAttributes {\n  role: string;\n  tabIndex: number;\n  'aria-disabled': boolean;\n  'aria-pressed': boolean | undefined;\n  'aria-roledescription': string;\n  'aria-describedby': string;\n}\n\nexport type DraggableSyntheticListeners = SyntheticListenerMap | undefined;\n\nconst NullContext = createContext<any>(null);\n\nconst defaultRole = 'button';\n\nconst ID_PREFIX = 'Draggable';\n\nexport function useDraggable({\n  id,\n  data,\n  disabled = false,\n  attributes,\n}: UseDraggableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {\n    activators,\n    activatorEvent,\n    active,\n    activeNodeRect,\n    ariaDescribedById,\n    draggableNodes,\n    over,\n  } = useContext(InternalContext);\n  const {\n    role = defaultRole,\n    roleDescription = 'draggable',\n    tabIndex = 0,\n  } = attributes ?? {};\n  const isDragging = active?.id === id;\n  const transform: Transform | null = useContext(\n    isDragging ? ActiveDraggableContext : NullContext\n  );\n  const [node, setNodeRef] = useNodeRef();\n  const [activatorNode, setActivatorNodeRef] = useNodeRef();\n  const listeners = useSyntheticListeners(activators, id);\n  const dataRef = useLatestValue(data);\n\n  useIsomorphicLayoutEffect(\n    () => {\n      draggableNodes.set(id, {id, key, node, activatorNode, data: dataRef});\n\n      return () => {\n        const node = draggableNodes.get(id);\n\n        if (node && node.key === key) {\n          draggableNodes.delete(id);\n        }\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [draggableNodes, id]\n  );\n\n  const memoizedAttributes: DraggableAttributes = useMemo(\n    () => ({\n      role,\n      tabIndex,\n      'aria-disabled': disabled,\n      'aria-pressed': isDragging && role === defaultRole ? true : undefined,\n      'aria-roledescription': roleDescription,\n      'aria-describedby': ariaDescribedById.draggable,\n    }),\n    [\n      disabled,\n      role,\n      tabIndex,\n      isDragging,\n      roleDescription,\n      ariaDescribedById.draggable,\n    ]\n  );\n\n  return {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes: memoizedAttributes,\n    isDragging,\n    listeners: disabled ? undefined : listeners,\n    node,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    transform,\n  };\n}\n", "import {ContextType, useContext} from 'react';\nimport {PublicContext} from '../store';\n\nexport function useDndContext() {\n  return useContext(PublicContext);\n}\n\nexport type UseDndContextReturnValue = ContextType<typeof PublicContext>;\n", "import {useCallback, useContext, useEffect, useRef} from 'react';\nimport {useLatestValue, useNodeRef, useUniqueId} from '@dnd-kit/utilities';\n\nimport {InternalContext, Action, Data} from '../store';\nimport type {ClientRect, UniqueIdentifier} from '../types';\n\nimport {useResizeObserver} from './utilities';\n\ninterface ResizeObserverConfig {\n  /** Whether the ResizeObserver should be disabled entirely */\n  disabled?: boolean;\n  /** Resize events may affect the layout and position of other droppable containers.\n   * Specify an array of `UniqueIdentifier` of droppable containers that should also be re-measured\n   * when this droppable container resizes. Specifying an empty array re-measures all droppable containers.\n   */\n  updateMeasurementsFor?: UniqueIdentifier[];\n  /** Represents the debounce timeout between when resize events are observed and when elements are re-measured */\n  timeout?: number;\n}\n\nexport interface UseDroppableArguments {\n  id: UniqueIdentifier;\n  disabled?: boolean;\n  data?: Data;\n  resizeObserverConfig?: ResizeObserverConfig;\n}\n\nconst ID_PREFIX = 'Droppable';\n\nconst defaultResizeObserverConfig = {\n  timeout: 25,\n};\n\nexport function useDroppable({\n  data,\n  disabled = false,\n  id,\n  resizeObserverConfig,\n}: UseDroppableArguments) {\n  const key = useUniqueId(ID_PREFIX);\n  const {active, dispatch, over, measureDroppableContainers} =\n    useContext(InternalContext);\n  const previous = useRef({disabled});\n  const resizeObserverConnected = useRef(false);\n  const rect = useRef<ClientRect | null>(null);\n  const callbackId = useRef<NodeJS.Timeout | null>(null);\n  const {\n    disabled: resizeObserverDisabled,\n    updateMeasurementsFor,\n    timeout: resizeObserverTimeout,\n  } = {\n    ...defaultResizeObserverConfig,\n    ...resizeObserverConfig,\n  };\n  const ids = useLatestValue(updateMeasurementsFor ?? id);\n  const handleResize = useCallback(\n    () => {\n      if (!resizeObserverConnected.current) {\n        // ResizeObserver invokes the `handleResize` callback as soon as `observe` is called,\n        // assuming the element is rendered and displayed.\n        resizeObserverConnected.current = true;\n        return;\n      }\n\n      if (callbackId.current != null) {\n        clearTimeout(callbackId.current);\n      }\n\n      callbackId.current = setTimeout(() => {\n        measureDroppableContainers(\n          Array.isArray(ids.current) ? ids.current : [ids.current]\n        );\n        callbackId.current = null;\n      }, resizeObserverTimeout);\n    },\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [resizeObserverTimeout]\n  );\n  const resizeObserver = useResizeObserver({\n    callback: handleResize,\n    disabled: resizeObserverDisabled || !active,\n  });\n  const handleNodeChange = useCallback(\n    (newElement: HTMLElement | null, previousElement: HTMLElement | null) => {\n      if (!resizeObserver) {\n        return;\n      }\n\n      if (previousElement) {\n        resizeObserver.unobserve(previousElement);\n        resizeObserverConnected.current = false;\n      }\n\n      if (newElement) {\n        resizeObserver.observe(newElement);\n      }\n    },\n    [resizeObserver]\n  );\n  const [nodeRef, setNodeRef] = useNodeRef(handleNodeChange);\n  const dataRef = useLatestValue(data);\n\n  useEffect(() => {\n    if (!resizeObserver || !nodeRef.current) {\n      return;\n    }\n\n    resizeObserver.disconnect();\n    resizeObserverConnected.current = false;\n    resizeObserver.observe(nodeRef.current);\n  }, [nodeRef, resizeObserver]);\n\n  useEffect(\n    () => {\n      dispatch({\n        type: Action.RegisterDroppable,\n        element: {\n          id,\n          key,\n          disabled,\n          node: nodeRef,\n          rect,\n          data: dataRef,\n        },\n      });\n\n      return () =>\n        dispatch({\n          type: Action.UnregisterDroppable,\n          key,\n          id,\n        });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id]\n  );\n\n  useEffect(() => {\n    if (disabled !== previous.current.disabled) {\n      dispatch({\n        type: Action.SetDroppableDisabled,\n        id,\n        key,\n        disabled,\n      });\n\n      previous.current.disabled = disabled;\n    }\n  }, [id, key, disabled, dispatch]);\n\n  return {\n    active,\n    rect,\n    isOver: over?.id === id,\n    node: nodeRef,\n    over,\n    setNodeRef,\n  };\n}\n", "import React, {cloneElement, useState} from 'react';\nimport {useIsomorphicLayoutEffect, usePrevious} from '@dnd-kit/utilities';\n\nimport type {UniqueIdentifier} from '../../../../types';\n\nexport type Animation = (\n  key: UniqueIdentifier,\n  node: HTMLElement\n) => Promise<void> | void;\n\nexport interface Props {\n  animation: Animation;\n  children: React.ReactElement | null;\n}\n\nexport function AnimationManager({animation, children}: Props) {\n  const [\n    clonedChildren,\n    setClonedChildren,\n  ] = useState<React.ReactElement | null>(null);\n  const [element, setElement] = useState<HTMLElement | null>(null);\n  const previousChildren = usePrevious(children);\n\n  if (!children && !clonedChildren && previousChildren) {\n    setClonedChildren(previousChildren);\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    const key = clonedChildren?.key;\n    const id = clonedChildren?.props.id;\n\n    if (key == null || id == null) {\n      setClonedChildren(null);\n      return;\n    }\n\n    Promise.resolve(animation(id, element)).then(() => {\n      setClonedChildren(null);\n    });\n  }, [animation, clonedChildren, element]);\n\n  return (\n    <>\n      {children}\n      {clonedChildren ? cloneElement(clonedChildren, {ref: setElement}) : null}\n    </>\n  );\n}\n", "import React from 'react';\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {InternalContext, defaultInternalContext} from '../../../../store';\nimport {ActiveDraggableContext} from '../../../DndContext';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst defaultTransform: Transform = {\n  x: 0,\n  y: 0,\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport function NullifiedContextProvider({children}: Props) {\n  return (\n    <InternalContext.Provider value={defaultInternalContext}>\n      <ActiveDraggableContext.Provider value={defaultTransform}>\n        {children}\n      </ActiveDraggableContext.Provider>\n    </InternalContext.Provider>\n  );\n}\n", "import React, {forwardRef} from 'react';\nimport {CSS, isKeyboardEvent} from '@dnd-kit/utilities';\n\nimport type {Transform} from '@dnd-kit/utilities';\n\nimport {getRelativeTransformOrigin} from '../../../../utilities';\nimport type {ClientRect, UniqueIdentifier} from '../../../../types';\n\ntype TransitionGetter = (\n  activatorEvent: Event | null\n) => React.CSSProperties['transition'] | undefined;\n\nexport interface Props {\n  as: keyof JSX.IntrinsicElements;\n  activatorEvent: Event | null;\n  adjustScale?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  id: UniqueIdentifier;\n  rect: ClientRect | null;\n  style?: React.CSSProperties;\n  transition?: string | TransitionGetter;\n  transform: Transform;\n}\n\nconst baseStyles: React.CSSProperties = {\n  position: 'fixed',\n  touchAction: 'none',\n};\n\nconst defaultTransition: TransitionGetter = (activatorEvent) => {\n  const isKeyboardActivator = isKeyboardEvent(activatorEvent);\n\n  return isKeyboardActivator ? 'transform 250ms ease' : undefined;\n};\n\nexport const PositionedOverlay = forwardRef<HTMLElement, Props>(\n  (\n    {\n      as,\n      activatorEvent,\n      adjustScale,\n      children,\n      className,\n      rect,\n      style,\n      transform,\n      transition = defaultTransition,\n    },\n    ref\n  ) => {\n    if (!rect) {\n      return null;\n    }\n\n    const scaleAdjustedTransform = adjustScale\n      ? transform\n      : {\n          ...transform,\n          scaleX: 1,\n          scaleY: 1,\n        };\n    const styles: React.CSSProperties | undefined = {\n      ...baseStyles,\n      width: rect.width,\n      height: rect.height,\n      top: rect.top,\n      left: rect.left,\n      transform: CSS.Transform.toString(scaleAdjustedTransform),\n      transformOrigin:\n        adjustScale && activatorEvent\n          ? getRelativeTransformOrigin(\n              activatorEvent as MouseEvent | KeyboardEvent | TouchEvent,\n              rect\n            )\n          : undefined,\n      transition:\n        typeof transition === 'function'\n          ? transition(activatorEvent)\n          : transition,\n      ...style,\n    };\n\n    return React.createElement(\n      as,\n      {\n        className,\n        style: styles,\n        ref,\n      },\n      children\n    );\n  }\n);\n", "import {CSS, useEvent, getWindow} from '@dnd-kit/utilities';\nimport type {DeepRequired, Transform} from '@dnd-kit/utilities';\n\nimport type {\n  Active,\n  DraggableNode,\n  DraggableNodes,\n  DroppableContainers,\n} from '../../../store';\nimport type {ClientRect, UniqueIdentifier} from '../../../types';\nimport {getMeasurableNode} from '../../../utilities/nodes';\nimport {scrollIntoViewIfNeeded} from '../../../utilities/scroll';\nimport {parseTransform} from '../../../utilities/transform';\nimport type {MeasuringConfiguration} from '../../DndContext';\nimport type {Animation} from '../components';\n\ninterface SharedParameters {\n  active: {\n    id: UniqueIdentifier;\n    data: Active['data'];\n    node: HTMLElement;\n    rect: ClientRect;\n  };\n  dragOverlay: {\n    node: HTMLElement;\n    rect: ClientRect;\n  };\n  draggableNodes: DraggableNodes;\n  droppableContainers: DroppableContainers;\n  measuringConfiguration: DeepRequired<MeasuringConfiguration>;\n}\n\nexport interface KeyframeResolverParameters extends SharedParameters {\n  transform: {\n    initial: Transform;\n    final: Transform;\n  };\n}\n\nexport type KeyframeResolver = (\n  parameters: KeyframeResolverParameters\n) => Keyframe[];\n\nexport interface DropAnimationOptions {\n  keyframes?: KeyframeResolver;\n  duration?: number;\n  easing?: string;\n  sideEffects?: DropAnimationSideEffects | null;\n}\n\nexport type DropAnimation = DropAnimationFunction | DropAnimationOptions;\n\ninterface Arguments {\n  draggableNodes: DraggableNodes;\n  droppableContainers: DroppableContainers;\n  measuringConfiguration: DeepRequired<MeasuringConfiguration>;\n  config?: DropAnimation | null;\n}\n\nexport interface DropAnimationFunctionArguments extends SharedParameters {\n  transform: Transform;\n}\n\nexport type DropAnimationFunction = (\n  args: DropAnimationFunctionArguments\n) => Promise<void> | void;\n\ntype CleanupFunction = () => void;\n\nexport interface DropAnimationSideEffectsParameters extends SharedParameters {}\n\nexport type DropAnimationSideEffects = (\n  parameters: DropAnimationSideEffectsParameters\n) => CleanupFunction | void;\n\ntype ExtractStringProperties<T> = {\n  [K in keyof T]?: T[K] extends string ? string : never;\n};\n\ntype Styles = ExtractStringProperties<CSSStyleDeclaration>;\n\ninterface DefaultDropAnimationSideEffectsOptions {\n  className?: {\n    active?: string;\n    dragOverlay?: string;\n  };\n  styles?: {\n    active?: Styles;\n    dragOverlay?: Styles;\n  };\n}\n\nexport const defaultDropAnimationSideEffects = (\n  options: DefaultDropAnimationSideEffectsOptions\n): DropAnimationSideEffects => ({active, dragOverlay}) => {\n  const originalStyles: Record<string, string> = {};\n  const {styles, className} = options;\n\n  if (styles?.active) {\n    for (const [key, value] of Object.entries(styles.active)) {\n      if (value === undefined) {\n        continue;\n      }\n\n      originalStyles[key] = active.node.style.getPropertyValue(key);\n      active.node.style.setProperty(key, value);\n    }\n  }\n\n  if (styles?.dragOverlay) {\n    for (const [key, value] of Object.entries(styles.dragOverlay)) {\n      if (value === undefined) {\n        continue;\n      }\n\n      dragOverlay.node.style.setProperty(key, value);\n    }\n  }\n\n  if (className?.active) {\n    active.node.classList.add(className.active);\n  }\n\n  if (className?.dragOverlay) {\n    dragOverlay.node.classList.add(className.dragOverlay);\n  }\n\n  return function cleanup() {\n    for (const [key, value] of Object.entries(originalStyles)) {\n      active.node.style.setProperty(key, value);\n    }\n\n    if (className?.active) {\n      active.node.classList.remove(className.active);\n    }\n  };\n};\n\nconst defaultKeyframeResolver: KeyframeResolver = ({\n  transform: {initial, final},\n}) => [\n  {\n    transform: CSS.Transform.toString(initial),\n  },\n  {\n    transform: CSS.Transform.toString(final),\n  },\n];\n\nexport const defaultDropAnimationConfiguration: Required<DropAnimationOptions> = {\n  duration: 250,\n  easing: 'ease',\n  keyframes: defaultKeyframeResolver,\n  sideEffects: defaultDropAnimationSideEffects({\n    styles: {\n      active: {\n        opacity: '0',\n      },\n    },\n  }),\n};\n\nexport function useDropAnimation({\n  config,\n  draggableNodes,\n  droppableContainers,\n  measuringConfiguration,\n}: Arguments) {\n  return useEvent<Animation>((id, node) => {\n    if (config === null) {\n      return;\n    }\n\n    const activeDraggable: DraggableNode | undefined = draggableNodes.get(id);\n\n    if (!activeDraggable) {\n      return;\n    }\n\n    const activeNode = activeDraggable.node.current;\n\n    if (!activeNode) {\n      return;\n    }\n\n    const measurableNode = getMeasurableNode(node);\n\n    if (!measurableNode) {\n      return;\n    }\n    const {transform} = getWindow(node).getComputedStyle(node);\n    const parsedTransform = parseTransform(transform);\n\n    if (!parsedTransform) {\n      return;\n    }\n\n    const animation: DropAnimationFunction =\n      typeof config === 'function'\n        ? config\n        : createDefaultDropAnimation(config);\n\n    scrollIntoViewIfNeeded(\n      activeNode,\n      measuringConfiguration.draggable.measure\n    );\n\n    return animation({\n      active: {\n        id,\n        data: activeDraggable.data,\n        node: activeNode,\n        rect: measuringConfiguration.draggable.measure(activeNode),\n      },\n      draggableNodes,\n      dragOverlay: {\n        node,\n        rect: measuringConfiguration.dragOverlay.measure(measurableNode),\n      },\n      droppableContainers,\n      measuringConfiguration,\n      transform: parsedTransform,\n    });\n  });\n}\n\nfunction createDefaultDropAnimation(\n  options: DropAnimationOptions | undefined\n): DropAnimationFunction {\n  const {duration, easing, sideEffects, keyframes} = {\n    ...defaultDropAnimationConfiguration,\n    ...options,\n  };\n\n  return ({active, dragOverlay, transform, ...rest}) => {\n    if (!duration) {\n      // Do not animate if animation duration is zero.\n      return;\n    }\n\n    const delta = {\n      x: dragOverlay.rect.left - active.rect.left,\n      y: dragOverlay.rect.top - active.rect.top,\n    };\n\n    const scale = {\n      scaleX:\n        transform.scaleX !== 1\n          ? (active.rect.width * transform.scaleX) / dragOverlay.rect.width\n          : 1,\n      scaleY:\n        transform.scaleY !== 1\n          ? (active.rect.height * transform.scaleY) / dragOverlay.rect.height\n          : 1,\n    };\n    const finalTransform = {\n      x: transform.x - delta.x,\n      y: transform.y - delta.y,\n      ...scale,\n    };\n\n    const animationKeyframes = keyframes({\n      ...rest,\n      active,\n      dragOverlay,\n      transform: {initial: transform, final: finalTransform},\n    });\n\n    const [firstKeyframe] = animationKeyframes;\n    const lastKeyframe = animationKeyframes[animationKeyframes.length - 1];\n\n    if (JSON.stringify(firstKeyframe) === JSON.stringify(lastKeyframe)) {\n      // The start and end keyframes are the same, infer that there is no animation needed.\n      return;\n    }\n\n    const cleanup = sideEffects?.({active, dragOverlay, ...rest});\n    const animation = dragOverlay.node.animate(animationKeyframes, {\n      duration,\n      easing,\n      fill: 'forwards',\n    });\n\n    return new Promise((resolve) => {\n      animation.onfinish = () => {\n        cleanup?.();\n        resolve();\n      };\n    });\n  };\n}\n", "import {useMemo} from 'react';\n\nimport type {UniqueIdentifier} from '../../../types';\n\nlet key = 0;\n\nexport function useKey(id: UniqueIdentifier | undefined) {\n  return useMemo(() => {\n    if (id == null) {\n      return;\n    }\n\n    key++;\n    return key;\n  }, [id]);\n}\n", "import React, {useContext} from 'react';\n\nimport {applyModifiers, Modifiers} from '../../modifiers';\nimport {ActiveDraggableContext} from '../DndContext';\nimport {useDndContext} from '../../hooks';\nimport {useInitialValue} from '../../hooks/utilities';\n\nimport {\n  AnimationManager,\n  NullifiedContextProvider,\n  PositionedOverlay,\n} from './components';\nimport type {PositionedOverlayProps} from './components';\n\nimport {useDropAnimation, useKey} from './hooks';\nimport type {DropAnimation} from './hooks';\n\nexport interface Props\n  extends Pick<\n    PositionedOverlayProps,\n    'adjustScale' | 'children' | 'className' | 'style' | 'transition'\n  > {\n  dropAnimation?: DropAnimation | null | undefined;\n  modifiers?: Modifiers;\n  wrapperElement?: keyof JSX.IntrinsicElements;\n  zIndex?: number;\n}\n\nexport const DragOverlay = React.memo(\n  ({\n    adjustScale = false,\n    children,\n    dropAnimation: dropAnimationConfig,\n    style,\n    transition,\n    modifiers,\n    wrapperElement = 'div',\n    className,\n    zIndex = 999,\n  }: Props) => {\n    const {\n      activatorEvent,\n      active,\n      activeNodeRect,\n      containerNodeRect,\n      draggableNodes,\n      droppableContainers,\n      dragOverlay,\n      over,\n      measuringConfiguration,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      windowRect,\n    } = useDndContext();\n    const transform = useContext(ActiveDraggableContext);\n    const key = useKey(active?.id);\n    const modifiedTransform = applyModifiers(modifiers, {\n      activatorEvent,\n      active,\n      activeNodeRect,\n      containerNodeRect,\n      draggingNodeRect: dragOverlay.rect,\n      over,\n      overlayNodeRect: dragOverlay.rect,\n      scrollableAncestors,\n      scrollableAncestorRects,\n      transform,\n      windowRect,\n    });\n    const initialRect = useInitialValue(activeNodeRect);\n    const dropAnimation = useDropAnimation({\n      config: dropAnimationConfig,\n      draggableNodes,\n      droppableContainers,\n      measuringConfiguration,\n    });\n    // We need to wait for the active node to be measured before connecting the drag overlay ref\n    // otherwise collisions can be computed against a mispositioned drag overlay\n    const ref = initialRect ? dragOverlay.setRef : undefined;\n\n    return (\n      <NullifiedContextProvider>\n        <AnimationManager animation={dropAnimation}>\n          {active && key ? (\n            <PositionedOverlay\n              key={key}\n              id={active.id}\n              ref={ref}\n              as={wrapperElement}\n              activatorEvent={activatorEvent}\n              adjustScale={adjustScale}\n              className={className}\n              transition={transition}\n              rect={initialRect}\n              style={{\n                zIndex,\n                ...style,\n              }}\n              transform={modifiedTransform}\n            >\n              {children}\n            </PositionedOverlay>\n          ) : null}\n        </AnimationManager>\n      </NullifiedContextProvider>\n    );\n  }\n);\n", "/**\n * Move an array item to a different position. Returns a new array with the item moved to the new position.\n */\nexport function arrayMove<T>(array: T[], from: number, to: number): T[] {\n  const newArray = array.slice();\n  newArray.splice(\n    to < 0 ? newArray.length + to : to,\n    0,\n    newArray.splice(from, 1)[0]\n  );\n\n  return newArray;\n}\n", "/**\n * Swap an array item to a different position. Returns a new array with the item swapped to the new position.\n */\nexport function arraySwap<T>(array: T[], from: number, to: number): T[] {\n  const newArray = array.slice();\n\n  newArray[from] = array[to];\n  newArray[to] = array[from];\n\n  return newArray;\n}\n", "import type {\n  ClientRect,\n  UniqueIdentifier,\n  UseDndContextReturnValue,\n} from '@dnd-kit/core';\n\nexport function getSortedRects(\n  items: UniqueIdentifier[],\n  rects: UseDndContextReturnValue['droppableRects']\n) {\n  return items.reduce<ClientRect[]>((accumulator, id, index) => {\n    const rect = rects.get(id);\n\n    if (rect) {\n      accumulator[index] = rect;\n    }\n\n    return accumulator;\n  }, Array(items.length));\n}\n", "export function isValidIndex(index: number | null): index is number {\n  return index !== null && index >= 0;\n}\n", "import type {UniqueIdentifier} from '@dnd-kit/core';\n\nexport function itemsEqual(a: UniqueIdentifier[], b: UniqueIdentifier[]) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import type {Disabled} from '../types';\n\nexport function normalizeDisabled(disabled: boolean | Disabled): Disabled {\n  if (typeof disabled === 'boolean') {\n    return {\n      draggable: disabled,\n      droppable: disabled,\n    };\n  }\n\n  return disabled;\n}\n", "import type {ClientRect} from '@dnd-kit/core';\nimport type {SortingStrategy} from '../types';\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport const horizontalListSortingStrategy: SortingStrategy = ({\n  rects,\n  activeNodeRect: fallbackActiveRect,\n  activeIndex,\n  overIndex,\n  index,\n}) => {\n  const activeNodeRect = rects[activeIndex] ?? fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index === activeIndex) {\n    const newIndexRect = rects[overIndex];\n\n    if (!newIndexRect) {\n      return null;\n    }\n\n    return {\n      x:\n        activeIndex < overIndex\n          ? newIndexRect.left +\n            newIndexRect.width -\n            (activeNodeRect.left + activeNodeRect.width)\n          : newIndexRect.left - activeNodeRect.left,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: -activeNodeRect.width - itemGap,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: activeNodeRect.width + itemGap,\n      y: 0,\n      ...defaultScale,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale,\n  };\n};\n\nfunction getItemGap(rects: ClientRect[], index: number, activeIndex: number) {\n  const currentRect: ClientRect | undefined = rects[index];\n  const previousRect: ClientRect | undefined = rects[index - 1];\n  const nextRect: ClientRect | undefined = rects[index + 1];\n\n  if (!currentRect || (!previousRect && !nextRect)) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect\n      ? currentRect.left - (previousRect.left + previousRect.width)\n      : nextRect.left - (currentRect.left + currentRect.width);\n  }\n\n  return nextRect\n    ? nextRect.left - (currentRect.left + currentRect.width)\n    : currentRect.left - (previousRect.left + previousRect.width);\n}\n", "import {arrayMove} from '../utilities';\nimport type {SortingStrategy} from '../types';\n\nexport const rectSortingStrategy: SortingStrategy = ({\n  rects,\n  activeIndex,\n  overIndex,\n  index,\n}) => {\n  const newRects = arrayMove(rects, overIndex, activeIndex);\n\n  const oldRect = rects[index];\n  const newRect = newRects[index];\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height,\n  };\n};\n", "import type {SortingStrategy} from '../types';\n\nexport const rectSwappingStrategy: SortingStrategy = ({\n  activeIndex,\n  index,\n  rects,\n  overIndex,\n}) => {\n  let oldRect;\n  let newRect;\n\n  if (index === activeIndex) {\n    oldRect = rects[index];\n    newRect = rects[overIndex];\n  }\n\n  if (index === overIndex) {\n    oldRect = rects[index];\n    newRect = rects[activeIndex];\n  }\n\n  if (!newRect || !oldRect) {\n    return null;\n  }\n\n  return {\n    x: newRect.left - oldRect.left,\n    y: newRect.top - oldRect.top,\n    scaleX: newRect.width / oldRect.width,\n    scaleY: newRect.height / oldRect.height,\n  };\n};\n", "import type {ClientRect} from '@dnd-kit/core';\nimport type {SortingStrategy} from '../types';\n\n// To-do: We should be calculating scale transformation\nconst defaultScale = {\n  scaleX: 1,\n  scaleY: 1,\n};\n\nexport const verticalListSortingStrategy: SortingStrategy = ({\n  activeIndex,\n  activeNodeRect: fallbackActiveRect,\n  index,\n  rects,\n  overIndex,\n}) => {\n  const activeNodeRect = rects[activeIndex] ?? fallbackActiveRect;\n\n  if (!activeNodeRect) {\n    return null;\n  }\n\n  if (index === activeIndex) {\n    const overIndexRect = rects[overIndex];\n\n    if (!overIndexRect) {\n      return null;\n    }\n\n    return {\n      x: 0,\n      y:\n        activeIndex < overIndex\n          ? overIndexRect.top +\n            overIndexRect.height -\n            (activeNodeRect.top + activeNodeRect.height)\n          : overIndexRect.top - activeNodeRect.top,\n      ...defaultScale,\n    };\n  }\n\n  const itemGap = getItemGap(rects, index, activeIndex);\n\n  if (index > activeIndex && index <= overIndex) {\n    return {\n      x: 0,\n      y: -activeNodeRect.height - itemGap,\n      ...defaultScale,\n    };\n  }\n\n  if (index < activeIndex && index >= overIndex) {\n    return {\n      x: 0,\n      y: activeNodeRect.height + itemGap,\n      ...defaultScale,\n    };\n  }\n\n  return {\n    x: 0,\n    y: 0,\n    ...defaultScale,\n  };\n};\n\nfunction getItemGap(\n  clientRects: ClientRect[],\n  index: number,\n  activeIndex: number\n) {\n  const currentRect: ClientRect | undefined = clientRects[index];\n  const previousRect: ClientRect | undefined = clientRects[index - 1];\n  const nextRect: ClientRect | undefined = clientRects[index + 1];\n\n  if (!currentRect) {\n    return 0;\n  }\n\n  if (activeIndex < index) {\n    return previousRect\n      ? currentRect.top - (previousRect.top + previousRect.height)\n      : nextRect\n      ? nextRect.top - (currentRect.top + currentRect.height)\n      : 0;\n  }\n\n  return nextRect\n    ? nextRect.top - (currentRect.top + currentRect.height)\n    : previousRect\n    ? currentRect.top - (previousRect.top + previousRect.height)\n    : 0;\n}\n", "import React, {useEffect, useMemo, useRef} from 'react';\nimport {useDndContext, ClientRect, UniqueIdentifier} from '@dnd-kit/core';\nimport {useIsomorphicLayoutEffect, useUniqueId} from '@dnd-kit/utilities';\n\nimport type {Disabled, SortingStrategy} from '../types';\nimport {getSortedRects, itemsEqual, normalizeDisabled} from '../utilities';\nimport {rectSortingStrategy} from '../strategies';\n\nexport interface Props {\n  children: React.ReactNode;\n  items: (UniqueIdentifier | {id: UniqueIdentifier})[];\n  strategy?: SortingStrategy;\n  id?: string;\n  disabled?: boolean | Disabled;\n}\n\nconst ID_PREFIX = 'Sortable';\n\ninterface ContextDescriptor {\n  activeIndex: number;\n  containerId: string;\n  disabled: Disabled;\n  disableTransforms: boolean;\n  items: UniqueIdentifier[];\n  overIndex: number;\n  useDragOverlay: boolean;\n  sortedRects: ClientRect[];\n  strategy: SortingStrategy;\n}\n\nexport const Context = React.createContext<ContextDescriptor>({\n  activeIndex: -1,\n  containerId: ID_PREFIX,\n  disableTransforms: false,\n  items: [],\n  overIndex: -1,\n  useDragOverlay: false,\n  sortedRects: [],\n  strategy: rectSortingStrategy,\n  disabled: {\n    draggable: false,\n    droppable: false,\n  },\n});\n\nexport function SortableContext({\n  children,\n  id,\n  items: userDefinedItems,\n  strategy = rectSortingStrategy,\n  disabled: disabledProp = false,\n}: Props) {\n  const {\n    active,\n    dragOverlay,\n    droppableRects,\n    over,\n    measureDroppableContainers,\n  } = useDndContext();\n  const containerId = useUniqueId(ID_PREFIX, id);\n  const useDragOverlay = Boolean(dragOverlay.rect !== null);\n  const items = useMemo<UniqueIdentifier[]>(\n    () =>\n      userDefinedItems.map((item) =>\n        typeof item === 'object' && 'id' in item ? item.id : item\n      ),\n    [userDefinedItems]\n  );\n  const isDragging = active != null;\n  const activeIndex = active ? items.indexOf(active.id) : -1;\n  const overIndex = over ? items.indexOf(over.id) : -1;\n  const previousItemsRef = useRef(items);\n  const itemsHaveChanged = !itemsEqual(items, previousItemsRef.current);\n  const disableTransforms =\n    (overIndex !== -1 && activeIndex === -1) || itemsHaveChanged;\n  const disabled = normalizeDisabled(disabledProp);\n\n  useIsomorphicLayoutEffect(() => {\n    if (itemsHaveChanged && isDragging) {\n      measureDroppableContainers(items);\n    }\n  }, [itemsHaveChanged, items, isDragging, measureDroppableContainers]);\n\n  useEffect(() => {\n    previousItemsRef.current = items;\n  }, [items]);\n\n  const contextValue = useMemo(\n    (): ContextDescriptor => ({\n      activeIndex,\n      containerId,\n      disabled,\n      disableTransforms,\n      items,\n      overIndex,\n      useDragOverlay,\n      sortedRects: getSortedRects(items, droppableRects),\n      strategy,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      activeIndex,\n      containerId,\n      disabled.draggable,\n      disabled.droppable,\n      disableTransforms,\n      items,\n      overIndex,\n      droppableRects,\n      useDragOverlay,\n      strategy,\n    ]\n  );\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n", "import {CSS} from '@dnd-kit/utilities';\n\nimport {arrayMove} from '../utilities';\n\nimport type {\n  AnimateLayoutChanges,\n  NewIndexGetter,\n  SortableTransition,\n} from './types';\n\nexport const defaultNewIndexGetter: NewIndexGetter = ({\n  id,\n  items,\n  activeIndex,\n  overIndex,\n}) => arrayMove(items, activeIndex, overIndex).indexOf(id);\n\nexport const defaultAnimateLayoutChanges: AnimateLayoutChanges = ({\n  containerId,\n  isSorting,\n  wasDragging,\n  index,\n  items,\n  newIndex,\n  previousItems,\n  previousContainerId,\n  transition,\n}) => {\n  if (!transition || !wasDragging) {\n    return false;\n  }\n\n  if (previousItems !== items && index === newIndex) {\n    return false;\n  }\n\n  if (isSorting) {\n    return true;\n  }\n\n  return newIndex !== index && containerId === previousContainerId;\n};\n\nexport const defaultTransition: SortableTransition = {\n  duration: 200,\n  easing: 'ease',\n};\n\nexport const transitionProperty = 'transform';\n\nexport const disabledTransition = CSS.Transition.toString({\n  property: transitionProperty,\n  duration: 0,\n  easing: 'linear',\n});\n\nexport const defaultAttributes = {\n  roleDescription: 'sortable',\n};\n", "import {useEffect, useRef, useState} from 'react';\nimport {getClientRect, ClientRect} from '@dnd-kit/core';\nimport {Transform, useIsomorphicLayoutEffect} from '@dnd-kit/utilities';\n\ninterface Arguments {\n  rect: React.MutableRefObject<ClientRect | null>;\n  disabled: boolean;\n  index: number;\n  node: React.MutableRefObject<HTMLElement | null>;\n}\n\n/*\n * When the index of an item changes while sorting,\n * we need to temporarily disable the transforms\n */\nexport function useDerivedTransform({disabled, index, node, rect}: Arguments) {\n  const [derivedTransform, setDerivedtransform] = useState<Transform | null>(\n    null\n  );\n  const previousIndex = useRef(index);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!disabled && index !== previousIndex.current && node.current) {\n      const initial = rect.current;\n\n      if (initial) {\n        const current = getClientRect(node.current, {\n          ignoreTransform: true,\n        });\n\n        const delta = {\n          x: initial.left - current.left,\n          y: initial.top - current.top,\n          scaleX: initial.width / current.width,\n          scaleY: initial.height / current.height,\n        };\n\n        if (delta.x || delta.y) {\n          setDerivedtransform(delta);\n        }\n      }\n    }\n\n    if (index !== previousIndex.current) {\n      previousIndex.current = index;\n    }\n  }, [disabled, index, node, rect]);\n\n  useEffect(() => {\n    if (derivedTransform) {\n      setDerivedtransform(null);\n    }\n  }, [derivedTransform]);\n\n  return derivedTransform;\n}\n", "import {useContext, useEffect, useMemo, useRef} from 'react';\nimport {\n  useDraggable,\n  useDroppable,\n  UseDraggableArguments,\n  UseDroppableArguments,\n} from '@dnd-kit/core';\nimport type {Data} from '@dnd-kit/core';\nimport {CSS, isKeyboardEvent, useCombinedRefs} from '@dnd-kit/utilities';\n\nimport {Context} from '../components';\nimport type {Disabled, SortableData, SortingStrategy} from '../types';\nimport {isValidIndex} from '../utilities';\nimport {\n  defaultAnimateLayoutChanges,\n  defaultAttributes,\n  defaultNewIndexGetter,\n  defaultTransition,\n  disabledTransition,\n  transitionProperty,\n} from './defaults';\nimport type {\n  AnimateLayoutChanges,\n  NewIndexGetter,\n  SortableTransition,\n} from './types';\nimport {useDerivedTransform} from './utilities';\n\nexport interface Arguments\n  extends Omit<UseDraggableArguments, 'disabled'>,\n    Pick<UseDroppableArguments, 'resizeObserverConfig'> {\n  animateLayoutChanges?: AnimateLayoutChanges;\n  disabled?: boolean | Disabled;\n  getNewIndex?: NewIndexGetter;\n  strategy?: SortingStrategy;\n  transition?: SortableTransition | null;\n}\n\nexport function useSortable({\n  animateLayoutChanges = defaultAnimateLayoutChanges,\n  attributes: userDefinedAttributes,\n  disabled: localDisabled,\n  data: customData,\n  getNewIndex = defaultNewIndexGetter,\n  id,\n  strategy: localStrategy,\n  resizeObserverConfig,\n  transition = defaultTransition,\n}: Arguments) {\n  const {\n    items,\n    containerId,\n    activeIndex,\n    disabled: globalDisabled,\n    disableTransforms,\n    sortedRects,\n    overIndex,\n    useDragOverlay,\n    strategy: globalStrategy,\n  } = useContext(Context);\n  const disabled: Disabled = normalizeLocalDisabled(\n    localDisabled,\n    globalDisabled\n  );\n  const index = items.indexOf(id);\n  const data = useMemo<SortableData & Data>(\n    () => ({sortable: {containerId, index, items}, ...customData}),\n    [containerId, customData, index, items]\n  );\n  const itemsAfterCurrentSortable = useMemo(\n    () => items.slice(items.indexOf(id)),\n    [items, id]\n  );\n  const {\n    rect,\n    node,\n    isOver,\n    setNodeRef: setDroppableNodeRef,\n  } = useDroppable({\n    id,\n    data,\n    disabled: disabled.droppable,\n    resizeObserverConfig: {\n      updateMeasurementsFor: itemsAfterCurrentSortable,\n      ...resizeObserverConfig,\n    },\n  });\n  const {\n    active,\n    activatorEvent,\n    activeNodeRect,\n    attributes,\n    setNodeRef: setDraggableNodeRef,\n    listeners,\n    isDragging,\n    over,\n    setActivatorNodeRef,\n    transform,\n  } = useDraggable({\n    id,\n    data,\n    attributes: {\n      ...defaultAttributes,\n      ...userDefinedAttributes,\n    },\n    disabled: disabled.draggable,\n  });\n  const setNodeRef = useCombinedRefs(setDroppableNodeRef, setDraggableNodeRef);\n  const isSorting = Boolean(active);\n  const displaceItem =\n    isSorting &&\n    !disableTransforms &&\n    isValidIndex(activeIndex) &&\n    isValidIndex(overIndex);\n  const shouldDisplaceDragSource = !useDragOverlay && isDragging;\n  const dragSourceDisplacement =\n    shouldDisplaceDragSource && displaceItem ? transform : null;\n  const strategy = localStrategy ?? globalStrategy;\n  const finalTransform = displaceItem\n    ? dragSourceDisplacement ??\n      strategy({\n        rects: sortedRects,\n        activeNodeRect,\n        activeIndex,\n        overIndex,\n        index,\n      })\n    : null;\n  const newIndex =\n    isValidIndex(activeIndex) && isValidIndex(overIndex)\n      ? getNewIndex({id, items, activeIndex, overIndex})\n      : index;\n  const activeId = active?.id;\n  const previous = useRef({\n    activeId,\n    items,\n    newIndex,\n    containerId,\n  });\n  const itemsHaveChanged = items !== previous.current.items;\n  const shouldAnimateLayoutChanges = animateLayoutChanges({\n    active,\n    containerId,\n    isDragging,\n    isSorting,\n    id,\n    index,\n    items,\n    newIndex: previous.current.newIndex,\n    previousItems: previous.current.items,\n    previousContainerId: previous.current.containerId,\n    transition,\n    wasDragging: previous.current.activeId != null,\n  });\n\n  const derivedTransform = useDerivedTransform({\n    disabled: !shouldAnimateLayoutChanges,\n    index,\n    node,\n    rect,\n  });\n\n  useEffect(() => {\n    if (isSorting && previous.current.newIndex !== newIndex) {\n      previous.current.newIndex = newIndex;\n    }\n\n    if (containerId !== previous.current.containerId) {\n      previous.current.containerId = containerId;\n    }\n\n    if (items !== previous.current.items) {\n      previous.current.items = items;\n    }\n  }, [isSorting, newIndex, containerId, items]);\n\n  useEffect(() => {\n    if (activeId === previous.current.activeId) {\n      return;\n    }\n\n    if (activeId != null && previous.current.activeId == null) {\n      previous.current.activeId = activeId;\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      previous.current.activeId = activeId;\n    }, 50);\n\n    return () => clearTimeout(timeoutId);\n  }, [activeId]);\n\n  return {\n    active,\n    activeIndex,\n    attributes,\n    data,\n    rect,\n    index,\n    newIndex,\n    items,\n    isOver,\n    isSorting,\n    isDragging,\n    listeners,\n    node,\n    overIndex,\n    over,\n    setNodeRef,\n    setActivatorNodeRef,\n    setDroppableNodeRef,\n    setDraggableNodeRef,\n    transform: derivedTransform ?? finalTransform,\n    transition: getTransition(),\n  };\n\n  function getTransition() {\n    if (\n      // Temporarily disable transitions for a single frame to set up derived transforms\n      derivedTransform ||\n      // Or to prevent items jumping to back to their \"new\" position when items change\n      (itemsHaveChanged && previous.current.newIndex === index)\n    ) {\n      return disabledTransition;\n    }\n\n    if (\n      (shouldDisplaceDragSource && !isKeyboardEvent(activatorEvent)) ||\n      !transition\n    ) {\n      return undefined;\n    }\n\n    if (isSorting || shouldAnimateLayoutChanges) {\n      return CSS.Transition.toString({\n        ...transition,\n        property: transitionProperty,\n      });\n    }\n\n    return undefined;\n  }\n}\n\nfunction normalizeLocalDisabled(\n  localDisabled: Arguments['disabled'],\n  globalDisabled: Disabled\n) {\n  if (typeof localDisabled === 'boolean') {\n    return {\n      draggable: localDisabled,\n      // Backwards compatibility\n      droppable: false,\n    };\n  }\n\n  return {\n    draggable: localDisabled?.draggable ?? globalDisabled.draggable,\n    droppable: localDisabled?.droppable ?? globalDisabled.droppable,\n  };\n}\n", "import type {\n  Active,\n  Data,\n  DroppableContainer,\n  DraggableNode,\n  Over,\n} from '@dnd-kit/core';\n\nimport type {SortableData} from './data';\n\nexport function hasSortableData<\n  T extends Active | Over | DraggableNode | DroppableContainer\n>(\n  entry: T | null | undefined\n): entry is T & {data: {current: Data<SortableData>}} {\n  if (!entry) {\n    return false;\n  }\n\n  const data = entry.data.current;\n\n  if (\n    data &&\n    'sortable' in data &&\n    typeof data.sortable === 'object' &&\n    'containerId' in data.sortable &&\n    'items' in data.sortable &&\n    'index' in data.sortable\n  ) {\n    return true;\n  }\n\n  return false;\n}\n", "import {\n  closestCorners,\n  getScrollableAncestors,\n  getFirstCollision,\n  KeyboardCode,\n  DroppableContainer,\n  KeyboardCoordinateGetter,\n} from '@dnd-kit/core';\nimport {subtract} from '@dnd-kit/utilities';\n\nimport {hasSortableData} from '../../types';\n\nconst directions: string[] = [\n  KeyboardCode.Down,\n  KeyboardCode.Right,\n  KeyboardCode.Up,\n  KeyboardCode.Left,\n];\n\nexport const sortableKeyboardCoordinates: KeyboardCoordinateGetter = (\n  event,\n  {\n    context: {\n      active,\n      collisionRect,\n      droppableRects,\n      droppableContainers,\n      over,\n      scrollableAncestors,\n    },\n  }\n) => {\n  if (directions.includes(event.code)) {\n    event.preventDefault();\n\n    if (!active || !collisionRect) {\n      return;\n    }\n\n    const filteredContainers: DroppableContainer[] = [];\n\n    droppableContainers.getEnabled().forEach((entry) => {\n      if (!entry || entry?.disabled) {\n        return;\n      }\n\n      const rect = droppableRects.get(entry.id);\n\n      if (!rect) {\n        return;\n      }\n\n      switch (event.code) {\n        case KeyboardCode.Down:\n          if (collisionRect.top < rect.top) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Up:\n          if (collisionRect.top > rect.top) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Left:\n          if (collisionRect.left > rect.left) {\n            filteredContainers.push(entry);\n          }\n          break;\n        case KeyboardCode.Right:\n          if (collisionRect.left < rect.left) {\n            filteredContainers.push(entry);\n          }\n          break;\n      }\n    });\n\n    const collisions = closestCorners({\n      active,\n      collisionRect: collisionRect,\n      droppableRects,\n      droppableContainers: filteredContainers,\n      pointerCoordinates: null,\n    });\n    let closestId = getFirstCollision(collisions, 'id');\n\n    if (closestId === over?.id && collisions.length > 1) {\n      closestId = collisions[1].id;\n    }\n\n    if (closestId != null) {\n      const activeDroppable = droppableContainers.get(active.id);\n      const newDroppable = droppableContainers.get(closestId);\n      const newRect = newDroppable ? droppableRects.get(newDroppable.id) : null;\n      const newNode = newDroppable?.node.current;\n\n      if (newNode && newRect && activeDroppable && newDroppable) {\n        const newScrollAncestors = getScrollableAncestors(newNode);\n        const hasDifferentScrollAncestors = newScrollAncestors.some(\n          (element, index) => scrollableAncestors[index] !== element\n        );\n        const hasSameContainer = isSameContainer(activeDroppable, newDroppable);\n        const isAfterActive = isAfter(activeDroppable, newDroppable);\n        const offset =\n          hasDifferentScrollAncestors || !hasSameContainer\n            ? {\n                x: 0,\n                y: 0,\n              }\n            : {\n                x: isAfterActive ? collisionRect.width - newRect.width : 0,\n                y: isAfterActive ? collisionRect.height - newRect.height : 0,\n              };\n        const rectCoordinates = {\n          x: newRect.left,\n          y: newRect.top,\n        };\n\n        const newCoordinates =\n          offset.x && offset.y\n            ? rectCoordinates\n            : subtract(rectCoordinates, offset);\n\n        return newCoordinates;\n      }\n    }\n  }\n\n  return undefined;\n};\n\nfunction isSameContainer(a: DroppableContainer, b: DroppableContainer) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  return (\n    a.data.current.sortable.containerId === b.data.current.sortable.containerId\n  );\n}\n\nfunction isAfter(a: DroppableContainer, b: DroppableContainer) {\n  if (!hasSortableData(a) || !hasSortableData(b)) {\n    return false;\n  }\n\n  if (!isSameContainer(a, b)) {\n    return false;\n  }\n\n  return a.data.current.sortable.index < b.data.current.sortable.index;\n}\n", "\nimport React from 'react'\nimport { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { Card, CardContent } from '../ui/card'\nimport { Badge } from '../ui/badge'\nimport { Avatar, AvatarFallback, AvatarImage } from '../ui/avatar'\nimport { Button } from '../ui/button'\nimport { \n  Calendar, \n  MessageCircle, \n  Paperclip, \n  CheckSquare, \n  Clock,\n  AlertCircle,\n  User,\n  MoreHorizontal\n} from 'lucide-react'\nimport { Task } from '../../types'\nimport { cn } from '../../lib/utils'\nimport { formatDate } from '../../lib/utils'\n\ninterface TaskCardProps {\n  task: Task\n  isDragOverlay?: boolean\n  className?: string\n  onClick?: () => void\n  bulkMode?: boolean\n  isSelected?: boolean\n  onSelect?: () => void\n}\n\nexport default function TaskCard({ \n  task, \n  isDragOverlay = false, \n  className, \n  onClick,\n  bulkMode = false,\n  isSelected = false,\n  onSelect \n}: TaskCardProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({\n    id: task.id,\n    data: {\n      type: 'task',\n      task,\n    },\n    disabled: isDragOverlay,\n  })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  }\n\n  const getPriorityColor = () => {\n    switch (task.priority) {\n      case 'critical': return 'border-l-krushr-priority-critical bg-red-50/30'\n      case 'high': return 'border-l-krushr-priority-high bg-red-50/30'\n      case 'medium': return 'border-l-krushr-priority-medium bg-orange-50/30'\n      case 'low': return 'border-l-krushr-priority-low bg-green-50/30'\n      default: return 'border-l-gray-300 bg-white'\n    }\n  }\n\n  const getPriorityBadgeColor = () => {\n    switch (task.priority) {\n      case 'critical': return 'bg-krushr-priority-critical/10 text-krushr-priority-critical border-krushr-priority-critical/20 font-medium'\n      case 'high': return 'bg-krushr-priority-high/10 text-krushr-priority-high border-krushr-priority-high/20 font-medium'\n      case 'medium': return 'bg-krushr-priority-medium/10 text-krushr-priority-medium border-krushr-priority-medium/20 font-medium'\n      case 'low': return 'bg-krushr-priority-low/10 text-krushr-priority-low border-krushr-priority-low/20 font-medium'\n      default: return 'bg-gray-100 text-gray-700 border-gray-200'\n    }\n  }\n\n  const isOverdue = task.dueDate && new Date(task.dueDate) < new Date()\n  const isDueSoon = task.dueDate && \n    new Date(task.dueDate) > new Date() && \n    new Date(task.dueDate) < new Date(Date.now() + 24 * 60 * 60 * 1000) // Due within 24 hours\n\n  return (\n    <Card\n      ref={setNodeRef}\n      style={style}\n      onClick={onClick}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault()\n          onClick?.()\n        }\n      }}\n      className={cn(\n        'cursor-grab active:cursor-grabbing transition-all duration-200 hover:shadow-md border-l-4 group',\n        'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\n        'min-h-[44px] touch-manipulation',\n        getPriorityColor(),\n        isDragging && 'opacity-50 rotate-2 shadow-lg',\n        isDragOverlay && 'rotate-2 shadow-xl',\n        isSelected && 'ring-2 ring-krushr-primary bg-krushr-primary-50',\n        bulkMode && 'cursor-pointer',\n        className\n      )}\n      role=\"button\"\n      tabIndex={0}\n      aria-label={`Task: ${task.title}${task.description ? ` - ${task.description.substring(0, 50)}...` : ''}`}\n      {...attributes}\n      {...listeners}\n    >\n      <CardContent className=\"p-4\">\n        {/* Task Header */}\n        <div className=\"flex items-start justify-between mb-3\">\n          {bulkMode && (\n            <div className=\"mr-2\">\n              <input\n                type=\"checkbox\"\n                checked={isSelected}\n                onChange={(e) => {\n                  e.stopPropagation()\n                  onSelect?.()\n                }}\n                className=\"w-5 h-5 min-w-[20px] min-h-[20px] text-krushr-primary border-krushr-gray-300 rounded focus:ring-krushr-primary focus:ring-2\"\n                aria-label={`Select task: ${task.title}`}\n                tabIndex={0}\n              />\n            </div>\n          )}\n          <h4 className=\"font-medium text-gray-900 line-clamp-2 flex-1 font-brand\">\n            {task.title}\n          </h4>\n          <button \n            className=\"w-8 h-8 bg-krushr-gray-light text-krushr-gray-dark rounded-md flex items-center justify-center hover:bg-krushr-gray transition-colors opacity-0 group-hover:opacity-100 ml-2\"\n            aria-label={`More options for ${task.title}`}\n            tabIndex={0}\n          >\n            <MoreHorizontal className=\"w-4 h-4\" />\n          </button>\n        </div>\n\n        {/* Task Description */}\n        {task.description && (\n          <p className=\"text-sm text-gray-600 mb-3 line-clamp-2 font-manrope\">\n            {task.description}\n          </p>\n        )}\n\n\n        {/* Attachment Thumbnails */}\n        {task.attachments && task.attachments.length > 0 && (() => {\n          const imageAttachments = task.attachments.filter(att => \n            att.mimeType?.startsWith('image/') && att.thumbnailUrl\n          )\n          \n          if (imageAttachments.length > 0) {\n            return (\n              <div className=\"mb-3\">\n                <div className=\"flex flex-wrap gap-1\">\n                  {imageAttachments.slice(0, 3).map((attachment) => (\n                    <img\n                      key={attachment.id}\n                      src={attachment.thumbnailUrl}\n                      alt={attachment.filename}\n                      className=\"w-12 h-12 rounded object-cover border border-gray-200\"\n                    />\n                  ))}\n                  {imageAttachments.length > 3 && (\n                    <div className=\"w-12 h-12 rounded border border-gray-200 bg-gray-100 flex items-center justify-center\">\n                      <span className=\"text-xs text-gray-600 font-medium font-manrope\">\n                        +{imageAttachments.length - 3}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )\n          }\n          return null\n        })()}\n\n        {/* Task Metadata - Compact Single Line */}\n        <div className=\"flex items-center justify-between text-xs text-gray-500 font-manrope\">\n          <div className=\"flex items-center space-x-2\">\n            {/* Priority Badge - Smaller */}\n            <Badge \n              variant=\"outline\" \n              className={cn('capitalize font-manrope px-2 py-1 text-xs font-medium', getPriorityBadgeColor())}\n              role=\"status\"\n              aria-label={`Priority: ${task.priority}`}\n            >\n              {task.priority}\n            </Badge>\n\n            {/* Due Date - Inline */}\n            {task.dueDate && (\n              <>\n                <span className=\"text-gray-300\">\u2022</span>\n                <div className={cn(\n                  'flex items-center space-x-1',\n                  isOverdue && 'text-krushr-secondary',\n                  isDueSoon && 'text-amber-600'\n                )}>\n                  {isOverdue ? (\n                    <AlertCircle className=\"w-3 h-3\" />\n                  ) : (\n                    <Calendar className=\"w-3 h-3\" />\n                  )}\n                  <span className=\"font-medium\">\n                    {formatDate(task.dueDate)}\n                  </span>\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Task Stats - Compact */}\n          <div className=\"flex items-center space-x-1.5\">\n            {/* Comments Count */}\n            {(task._count?.comments || 0) > 0 && (\n              <div className=\"flex items-center space-x-1 text-gray-500\">\n                <MessageCircle className=\"w-3 h-3\" />\n                <span>{task._count.comments}</span>\n              </div>\n            )}\n\n            {/* Attachments Count */}\n            {(task._count?.attachments || 0) > 0 && (\n              <div className=\"flex items-center space-x-1 text-gray-500\">\n                <Paperclip className=\"w-3 h-3\" />\n                <span>{task._count.attachments}</span>\n              </div>\n            )}\n\n            {/* Checklist Progress */}\n            {task.checklists && task.checklists.length > 0 && (() => {\n              const totalItems = task.checklists.reduce((acc, checklist) => acc + (checklist.items?.length || 0), 0)\n              const completedItems = task.checklists.reduce((acc, checklist) => \n                acc + (checklist.items?.filter(item => item.completed).length || 0), 0)\n              \n              return totalItems > 0 ? (\n                <div className={cn(\n                  \"flex items-center space-x-1\",\n                  completedItems === totalItems ? \"text-emerald-600\" : \"text-gray-500\"\n                )}>\n                  <CheckSquare className=\"w-3 h-3\" />\n                  <span>{completedItems}/{totalItems}</span>\n                </div>\n              ) : null\n            })()}\n          </div>\n        </div>\n\n        {/* Assignee - Compact Single Line */}\n        {task.assignee && (\n          <div className=\"flex items-center justify-between mt-2 pt-2 border-t border-gray-100\">\n            <div className=\"flex items-center space-x-2 min-w-0 flex-1\">\n              <Avatar className=\"w-5 h-5 border border-white\">\n                <AvatarImage src={task.assignee.avatar || undefined} />\n                <AvatarFallback className=\"text-[10px] bg-gradient-to-br from-krushr-secondary to-krushr-secondary/80 text-white font-medium\">\n                  {task.assignee.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                </AvatarFallback>\n              </Avatar>\n              <span className=\"text-xs text-gray-600 truncate\">{task.assignee.name}</span>\n              <span className=\"text-gray-300 text-xs\">\u2022</span>\n              <div className=\"flex items-center space-x-1 text-gray-400\">\n                <Clock className=\"w-3 h-3\" />\n                <span className=\"text-xs\">{task.estimatedHours || 0}h</span>\n              </div>\n              \n              {/* Tags - Inline with assignee */}\n              {task.tags && task.tags.length > 0 && (\n                <>\n                  <span className=\"text-gray-300 text-xs\">\u2022</span>\n                  <div className=\"flex items-center space-x-1\">\n                    {task.tags.slice(0, 2).map((tag) => (\n                      <Badge \n                        key={typeof tag === 'string' ? tag : tag.id}\n                        variant=\"secondary\" \n                        className=\"px-1.5 py-0.5 text-xs font-medium\"\n                      >\n                        {typeof tag === 'string' ? tag : tag.name}\n                      </Badge>\n                    ))}\n                    {task.tags.length > 2 && (\n                      <Badge variant=\"secondary\" className=\"px-1.5 py-0.5 text-xs font-medium\">\n                        +{task.tags.length - 2}\n                      </Badge>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Empty State for Unassigned - Compact */}\n        {!task.assignee && (\n          <div className=\"flex items-center mt-2 pt-2 border-t border-gray-100\">\n            <div className=\"flex items-center space-x-2 text-gray-400\">\n              <User className=\"w-3 h-3\" />\n              <span className=\"text-xs\">Unassigned</span>\n              <span className=\"text-gray-300 text-xs\">\u2022</span>\n              <div className=\"flex items-center space-x-1\">\n                <Clock className=\"w-3 h-3\" />\n                <span className=\"text-xs\">{task.estimatedHours || 0}h</span>\n              </div>\n              \n              {/* Tags - Inline with unassigned */}\n              {task.tags && task.tags.length > 0 && (\n                <>\n                  <span className=\"text-gray-300 text-xs\">\u2022</span>\n                  <div className=\"flex items-center space-x-1\">\n                    {task.tags.slice(0, 2).map((tag) => (\n                      <Badge \n                        key={typeof tag === 'string' ? tag : tag.id}\n                        variant=\"secondary\" \n                        className=\"px-1.5 py-0.5 text-xs font-medium\"\n                      >\n                        {typeof tag === 'string' ? tag : tag.name}\n                      </Badge>\n                    ))}\n                    {task.tags.length > 2 && (\n                      <Badge variant=\"secondary\" className=\"px-1.5 py-0.5 text-xs font-medium\">\n                        +{task.tags.length - 2}\n                      </Badge>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}", "\nimport React from 'react'\nimport { useSortable } from '@dnd-kit/sortable'\nimport { useDroppable } from '@dnd-kit/core'\nimport { CSS } from '@dnd-kit/utilities'\nimport { Card, CardContent, CardHeader } from '../ui/card'\nimport { Button } from '../ui/button'\nimport { Badge } from '../ui/badge'\nimport { Plus, MoreVertical, Edit, Trash2, Settings } from 'lucide-react'\nimport { KanbanColumn, Task } from '../../types'\nimport TaskCard from './TaskCard'\nimport { cn } from '../../lib/utils'\n\ninterface KanbanColumnProps {\n  column: KanbanColumn\n  tasks: Task[]\n  taskCount: number\n  className?: string\n  onTaskClick?: (taskId: string) => void\n  onAddTask?: () => void\n  bulkMode?: boolean\n  selectedTasks?: Set<string>\n  onTaskSelect?: (taskId: string) => void\n  onEditColumn?: () => void\n  onDeleteColumn?: () => void\n}\n\nexport default function KanbanColumnComponent({ \n  column, \n  tasks, \n  taskCount,\n  className,\n  onTaskClick,\n  onAddTask,\n  bulkMode = false,\n  selectedTasks = new Set(),\n  onTaskSelect,\n  onEditColumn,\n  onDeleteColumn\n}: KanbanColumnProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef: setSortableRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({\n    id: column.id,\n    data: {\n      type: 'column',\n      column,\n    },\n  })\n\n  const { setNodeRef: setDroppableRef, isOver } = useDroppable({\n    id: column.id,\n    data: {\n      type: 'column',\n      accepts: ['task'],\n    },\n  })\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  }\n\n  const getColumnColor = () => {\n    if (column.color) {\n      return ''\n    }\n    \n    if (column.isCompletedColumn) {\n      return 'bg-emerald-500'\n    }\n    \n    const colors = [\n      'bg-gray-500',           // To Do\n      'bg-krushr-secondary',   // In Progress  \n      'bg-amber-500',          // Review\n      'bg-emerald-500',        // Done\n    ]\n    \n    return colors[column.position % colors.length] || 'bg-krushr-blue'\n  }\n\n  return (\n    <div\n      ref={(node) => {\n        setSortableRef(node)\n        setDroppableRef(node)\n      }}\n      style={style}\n      className={cn(\n        'flex flex-col w-80 h-full transition-all duration-200',\n        isDragging && 'opacity-50 scale-105',\n        isOver && 'ring-2 ring-krushr-secondary ring-opacity-50',\n        className\n      )}\n      {...attributes}\n    >\n      <Card className={cn(\n        \"flex flex-col h-full bg-white transition-all duration-200\",\n        isOver && \"bg-krushr-secondary/5 border-krushr-secondary/20\"\n      )}>\n        {/* Column Header - Single line layout */}\n        <CardHeader \n          className=\"flex-shrink-0 py-2 cursor-grab active:cursor-grabbing\"\n          {...listeners}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-2 min-w-0 flex-1\">\n              <div \n                className={cn('w-3 h-3 rounded-full border flex-shrink-0', !column.color && getColumnColor())}\n                style={column.color ? { backgroundColor: column.color } : {}}\n                role=\"presentation\"\n                aria-hidden=\"true\"\n              />\n              <h3 className=\"font-semibold text-gray-900 text-sm truncate font-brand\" role=\"heading\" aria-level=\"3\">{column.title}</h3>\n              <Badge \n                variant=\"secondary\" \n                className={cn(\n                  \"text-xs min-h-[18px] px-1.5 flex-shrink-0 bg-krushr-coral-red text-white\",\n                  column.wipLimit && taskCount > column.wipLimit && \"bg-red-100 text-red-700 border-red-200\"\n                )}\n                role=\"status\"\n                aria-label={`${taskCount} tasks${column.wipLimit ? ` out of ${column.wipLimit} limit` : ''}`}\n              >\n                {taskCount}{column.wipLimit ? `/${column.wipLimit}` : ''}\n              </Badge>\n              {column.wipLimit && taskCount > column.wipLimit && (\n                <Badge variant=\"outline\" className=\"text-xs text-red-700 border-red-200 px-1.5 py-0 flex-shrink-0 font-manrope\">\n                  WIP!\n                </Badge>\n              )}\n              {column.isCompletedColumn && (\n                <Badge variant=\"outline\" className=\"text-xs text-green-700 border-green-200 px-1.5 py-0 flex-shrink-0 font-manrope\">\n                  \u2713\n                </Badge>\n              )}\n            </div>\n            <div className=\"flex items-center space-x-2 flex-shrink-0\">\n              <Settings \n                className=\"w-4 h-4 text-krushr-gray-500 hover:text-krushr-primary cursor-pointer transition-colors\"\n                onClick={onEditColumn}\n                title=\"Column settings\"\n              />\n              <Plus \n                className=\"w-4 h-4 text-krushr-gray-500 hover:text-krushr-primary cursor-pointer transition-colors\"\n                onClick={onAddTask}\n                title=\"Add task\"\n              />\n            </div>\n          </div>\n        </CardHeader>\n\n        {/* Tasks Container */}\n        <CardContent className=\"flex-1 p-3 pt-0 overflow-y-auto\">\n          <div className=\"space-y-3\">\n            {tasks.map((task) => (\n              <TaskCard\n                key={task.id}\n                task={task}\n                onClick={() => onTaskClick?.(task.id)}\n                bulkMode={bulkMode}\n                isSelected={selectedTasks.has(task.id)}\n                onSelect={() => onTaskSelect?.(task.id)}\n              />\n            ))}\n            \n            {/* Add Task Button */}\n            <Button\n              variant=\"ghost\"\n              className={cn(\n                \"w-full h-12 min-h-[44px] border-2 border-dashed transition-all duration-200\",\n                \"border-gray-200 hover:border-krushr-secondary/30 hover:bg-krushr-secondary/5\",\n                \"focus:border-krushr-secondary/50 focus:bg-krushr-secondary/10 focus:ring-2 focus:ring-krushr-secondary\",\n                \"text-gray-500 hover:text-krushr-secondary focus:text-krushr-secondary\",\n                \"touch-manipulation\",\n                isOver && \"border-krushr-secondary/50 bg-krushr-secondary/10 text-krushr-secondary\"\n              )}\n              onClick={onAddTask}\n              aria-label={`Add new task to ${column.title} column`}\n              tabIndex={0}\n            >\n              <Plus className=\"w-5 h-5 mr-2\" />\n              Add a task\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n", "export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n", "import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return +toDate(dateLeft) - +toDate(dateRight);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n", "import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n", "import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n", "import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n", "import { compareAsc } from \"./compareAsc.mjs\";\nimport { minutesInDay, minutesInMonth } from \"./constants.mjs\";\nimport { differenceInMonths } from \"./differenceInMonths.mjs\";\nimport { differenceInSeconds } from \"./differenceInSeconds.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport function formatDistance(date, baseDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(date, baseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  let dateLeft;\n  let dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(baseDate);\n    dateRight = toDate(date);\n  } else {\n    dateLeft = toDate(date);\n    dateRight = toDate(baseDate);\n  }\n\n  const seconds = differenceInSeconds(dateRight, dateLeft);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(dateRight) -\n      getTimezoneOffsetInMilliseconds(dateLeft)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n", "import { constructNow } from \"./constructNow.mjs\";\nimport { formatDistance } from \"./formatDistance.mjs\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n", "import React, { useState } from 'react'\nimport { Sheet, SheetContent, SheetHeader, SheetTitle } from '../ui/sheet'\nimport { Button } from '../ui/button'\nimport { FloatingInput } from '../ui/floating-input'\nimport { Textarea } from '../ui/textarea'\nimport { Badge } from '../ui/badge'\nimport { Avatar, AvatarFallback, AvatarImage } from '../ui/avatar'\nimport { Card, CardContent, CardHeader } from '../ui/card'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select'\nimport { RichTextEditor } from '../ui/rich-text-editor'\nimport {\n  Calendar,\n  Clock,\n  Flag,\n  MessageSquare,\n  Paperclip,\n  Send,\n  Trash2,\n  Download,\n  FileText,\n  Image,\n  MoreVertical,\n  CheckCircle2,\n  Circle,\n  AlertCircle,\n  User,\n  ChevronDown,\n  Plus,\n  Check,\n  X,\n  Upload\n} from 'lucide-react'\nimport { format, formatDistanceToNow } from 'date-fns'\nimport { cn } from '../../lib/utils'\nimport { trpc } from '../../lib/trpc'\nimport { Priority, TaskStatus } from '../../types/enums'\nimport CompactTaskModal from '../kanban/CompactTaskModal'\nimport AttachmentUploadSimple from '../common/AttachmentUpload-simple'\nimport AttachmentListSimple from '../common/AttachmentList-simple'\n\ninterface TaskDetailProps {\n  taskId: string\n  open: boolean\n  onClose: () => void\n  onUpdate?: () => void\n}\n\nexport default function TaskDetail({ taskId, open, onClose, onUpdate }: TaskDetailProps) {\n  const [comment, setComment] = useState('')\n  const [editingTitle, setEditingTitle] = useState(false)\n  const [editingDescription, setEditingDescription] = useState(false)\n  const [tempTitle, setTempTitle] = useState('')\n  const [tempDescription, setTempDescription] = useState('')\n  const [newChecklistItem, setNewChecklistItem] = useState('')\n  const [showEditModal, setShowEditModal] = useState(false)\n\n  const { data: task, refetch } = trpc.task.get.useQuery(\n    { id: taskId },\n    { \n      enabled: !!taskId,\n      onSuccess: (data) => {\n        if (data) {\n          setTempTitle(data.title || '')\n          setTempDescription(data.description || '')\n        }\n      }\n    }\n  )\n  const { data: comments = [], refetch: refetchComments } = trpc.comment.list.useQuery(\n    { taskId },\n    { enabled: !!taskId }\n  )\n  const { data: attachments = [] } = trpc.upload.getTaskAttachments.useQuery(\n    { taskId },\n    { enabled: !!taskId }\n  )\n  const { data: activities = [] } = trpc.activity.list.useQuery(\n    { taskId },\n    { enabled: !!taskId }\n  )\n  const { data: checklists = [], refetch: refetchChecklists } = trpc.task.get.useQuery(\n    { id: taskId },\n    { \n      enabled: !!taskId,\n      select: (data) => data?.checklists || []\n    }\n  )\n\n  const addCommentMutation = trpc.comment.create.useMutation({\n    onSuccess: () => {\n      setComment('')\n      refetchComments() // Instantly refetch comments for immediate display\n      refetch() // Also refetch task data for any count updates\n    },\n    onError: (error) => {\n      console.error('Failed to add comment:', error)\n    }\n  })\n  \n  const updateTaskMutation = trpc.task.update.useMutation({\n    onSuccess: () => {\n      refetch()\n      onUpdate?.()\n      setEditingTitle(false)\n      setEditingDescription(false)\n    }\n  })\n  \n  const deleteTaskMutation = trpc.task.delete.useMutation({\n    onSuccess: () => {\n      onClose()\n      onUpdate?.()\n    }\n  })\n  \n  const addChecklistItemMutation = trpc.checklist.addItem.useMutation({\n    onSuccess: () => {\n      refetch()\n      setNewChecklistItem('')\n    }\n  })\n  \n  const updateChecklistItemMutation = trpc.checklist.updateItem.useMutation({\n    onSuccess: () => {\n      refetch()\n    }\n  })\n  \n  const deleteChecklistItemMutation = trpc.checklist.deleteItem.useMutation({\n    onSuccess: () => {\n      refetch()\n    }\n  })\n  \n  const { refetch: refetchAttachments } = trpc.upload.getTaskAttachments.useQuery(\n    { taskId },\n    { enabled: !!taskId }\n  )\n\n  if (!task) return null\n\n  const handleAddComment = () => {\n    if (comment.trim()) {\n      addCommentMutation.mutate({\n        taskId,\n        content: comment,\n      })\n    }\n  }\n\n  const handleStatusChange = (status: TaskStatus) => {\n    updateTaskMutation.mutate({\n      id: taskId,\n      status,\n    })\n  }\n\n  const handlePriorityChange = (priority: Priority) => {\n    updateTaskMutation.mutate({\n      id: taskId,\n      priority,\n    })\n  }\n\n  const handleTitleSave = () => {\n    if (tempTitle.trim() && tempTitle !== task?.title) {\n      updateTaskMutation.mutate({\n        id: taskId,\n        title: tempTitle.trim(),\n      })\n    } else {\n      setEditingTitle(false)\n      setTempTitle(task?.title || '')\n    }\n  }\n\n  const handleDescriptionSave = () => {\n    if (tempDescription !== task?.description) {\n      updateTaskMutation.mutate({\n        id: taskId,\n        description: tempDescription,\n      })\n    } else {\n      setEditingDescription(false)\n      setTempDescription(task?.description || '')\n    }\n  }\n\n  const getPriorityColor = (priority: Priority) => {\n    const colors = {\n      [Priority.LOW]: 'text-green-500 bg-green-50 border-green-200',\n      [Priority.MEDIUM]: 'text-orange-500 bg-orange-50 border-orange-200',\n      [Priority.HIGH]: 'text-red-500 bg-red-50 border-red-200',\n    }\n    return colors[priority]\n  }\n\n  const getStatusIcon = (status: TaskStatus) => {\n    switch (status) {\n      case TaskStatus.DONE:\n        return <CheckCircle2 className=\"w-4 h-4 text-green-500\" />\n      case TaskStatus.IN_PROGRESS:\n        return <AlertCircle className=\"w-4 h-4 text-blue-500\" />\n      default:\n        return <Circle className=\"w-4 h-4 text-gray-400\" />\n    }\n  }\n\n  const getFileIcon = (mimeType: string) => {\n    if (mimeType.startsWith('image/')) return <Image className=\"w-4 h-4\" />\n    return <FileText className=\"w-4 h-4\" />\n  }\n\n  return (\n    <>\n      <Sheet open={open} onOpenChange={onClose}>\n        <SheetContent className=\"w-full sm:max-w-2xl overflow-y-auto shadow-krushr-modal\" hideOverlay={true}>\n          <SheetHeader className=\"space-y-0 pb-6 border-b border-krushr-panel-border\">\n            <div className=\"flex items-center justify-between\">\n              {editingTitle ? (\n                <FloatingInput\n                  label=\"Task title\"\n                  value={tempTitle}\n                  onChange={(e) => setTempTitle(e.target.value)}\n                  onBlur={handleTitleSave}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      e.preventDefault()\n                      handleTitleSave()\n                    }\n                    if (e.key === 'Escape') {\n                      setEditingTitle(false)\n                      setTempTitle(task?.title || '')\n                    }\n                  }}\n                  className=\"text-xl font-semibold border-none shadow-none px-0 focus-visible:ring-0\"\n                  autoFocus\n                />\n              ) : (\n                <SheetTitle \n                  className=\"text-xl font-semibold text-krushr-gray-dark cursor-pointer hover:bg-krushr-gray-50 px-2 py-1 rounded-md transition-colors font-brand\"\n                  onClick={() => {\n                    setTempTitle(task?.title || '') // Preserve existing text\n                    setEditingTitle(true)\n                  }}\n                >\n                  {task.title}\n                </SheetTitle>\n              )}\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setShowEditModal(true)}\n                  className=\"text-krushr-primary border-krushr-primary hover:bg-krushr-primary hover:text-white\"\n                >\n                  Edit Task\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => {\n                    if (confirm('Are you sure you want to delete this task?')) {\n                      deleteTaskMutation.mutate({ id: taskId })\n                    }\n                  }}\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          </SheetHeader>\n\n          <div className=\"mt-6 space-y-6 font-brand\">\n            {/* Status + Priority Row */}\n            <div className=\"flex items-center justify-between bg-krushr-gray-50 p-4 rounded-lg border border-krushr-panel-border\">\n              {/* Status Tags */}\n              <div className=\"flex gap-1\">\n                {[TaskStatus.TODO, TaskStatus.IN_PROGRESS, TaskStatus.REVIEW, TaskStatus.DONE].map((status) => {\n                  const labels = {\n                    [TaskStatus.TODO]: 'To Do',\n                    [TaskStatus.IN_PROGRESS]: 'In Progress', \n                    [TaskStatus.REVIEW]: 'Review',\n                    [TaskStatus.DONE]: 'Done'\n                  }\n                  const colors = {\n                    [TaskStatus.TODO]: task.status === status ? 'bg-krushr-task-todo/10 text-krushr-task-todo border-krushr-task-todo/30' : 'bg-white text-krushr-gray border-krushr-panel-border hover:bg-krushr-gray-50',\n                    [TaskStatus.IN_PROGRESS]: task.status === status ? 'bg-krushr-task-progress/10 text-krushr-task-progress border-krushr-task-progress/30' : 'bg-white text-krushr-gray border-krushr-panel-border hover:bg-krushr-gray-50',\n                    [TaskStatus.REVIEW]: task.status === status ? 'bg-krushr-task-review/10 text-krushr-task-review border-krushr-task-review/30' : 'bg-white text-krushr-gray border-krushr-panel-border hover:bg-krushr-gray-50',\n                    [TaskStatus.DONE]: task.status === status ? 'bg-krushr-task-done/10 text-krushr-task-done border-krushr-task-done/30' : 'bg-white text-krushr-gray border-krushr-panel-border hover:bg-krushr-gray-50'\n                  }\n                  return (\n                    <button\n                      key={status}\n                      onClick={() => handleStatusChange(status)}\n                      className={cn(\n                        \"px-3 py-1.5 text-xs font-medium rounded-md border transition-all duration-200 shadow-sm\",\n                        colors[status]\n                      )}\n                    >\n                      {labels[status]}\n                    </button>\n                  )\n                })}\n              </div>\n              \n              {/* Priority Dots */}\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-xs font-medium text-krushr-gray-dark mr-1\">Priority:</span>\n                <div className=\"flex gap-0.5\">\n                  {[1, 2, 3].map((level) => {\n                    const isActive = (\n                      (task.priority === Priority.LOW && level <= 1) ||\n                      (task.priority === Priority.MEDIUM && level <= 2) ||\n                      (task.priority === Priority.HIGH && level <= 3)\n                    )\n                    const targetPriority = level === 1 ? Priority.LOW : level === 2 ? Priority.MEDIUM : Priority.HIGH\n                    \n                    return (\n                      <button\n                        key={level}\n                        onClick={() => handlePriorityChange(targetPriority)}\n                        className={cn(\n                          \"w-2.5 h-2.5 rounded-full transition-all duration-200 shadow-sm\",\n                          isActive ? \"bg-krushr-priority-high\" : \"bg-krushr-gray-300 hover:bg-krushr-priority-high/50\"\n                        )}\n                        title={`${level === 1 ? 'Low' : level === 2 ? 'Medium' : 'High'} Priority`}\n                      />\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n\n            {/* Description - Main Content Area */}\n            <div className=\"flex-1 bg-white rounded-lg border border-krushr-panel-border p-4\">\n              <label className=\"text-sm font-medium text-krushr-gray-dark block mb-3\">Description & Notes</label>\n              {editingDescription ? (\n                <RichTextEditor\n                  content={tempDescription}\n                  onChange={setTempDescription}\n                  onBlur={handleDescriptionSave}\n                  placeholder=\"Add a description with rich formatting...\"\n                  className=\"min-h-[120px]\"\n                />\n              ) : (\n                <div\n                  onClick={() => {\n                    setTempDescription(task?.description || '') // Preserve existing text\n                    setEditingDescription(true)\n                  }}\n                  className=\"min-h-[120px] p-3 text-sm border border-krushr-panel-border rounded-md cursor-pointer hover:bg-krushr-gray-50 prose prose-sm max-w-none transition-colors\"\n                  dangerouslySetInnerHTML={{\n                    __html: task.description || '<span class=\"text-gray-400 italic\">Click to add description...</span>'\n                  }}\n                />\n              )}\n            </div>\n\n            {/* Metadata - Compact Row */}\n            <div className=\"flex items-center gap-6 text-sm text-krushr-gray bg-krushr-gray-50 p-4 rounded-lg border border-krushr-panel-border\">\n              {/* Assignee */}\n              <div className=\"flex items-center gap-2\">\n                <User className=\"w-4 h-4\" />\n                <Select\n                  value={task.assigneeId || 'unassigned'}\n                  onValueChange={(value) => {\n                    updateTaskMutation.mutate({\n                      id: taskId,\n                      assigneeId: value === 'unassigned' ? null : value,\n                    })\n                  }}\n                >\n                  <SelectTrigger className=\"w-auto border-none shadow-none p-0 h-auto text-sm hover:text-krushr-gray-dark focus:ring-0 transition-colors\">\n                    <SelectValue placeholder=\"Unassigned\">\n                      {task.assignee ? (\n                        <div className=\"flex items-center gap-2\">\n                          <Avatar className=\"w-5 h-5\">\n                            <AvatarImage src={task.assignee.avatar} />\n                            <AvatarFallback className=\"text-xs\">\n                              {task.assignee.name?.charAt(0)}\n                            </AvatarFallback>\n                          </Avatar>\n                          <span className=\"truncate\">{task.assignee.name}</span>\n                        </div>\n                      ) : (\n                        <span className=\"text-krushr-gray-light\">Unassigned</span>\n                      )}\n                    </SelectValue>\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"unassigned\">\n                      <div className=\"flex items-center gap-2\">\n                        <User className=\"w-4 h-4 text-gray-500\" />\n                        <span>Unassigned</span>\n                      </div>\n                    </SelectItem>\n                    <SelectItem value=\"user1\">\n                      <div className=\"flex items-center gap-2\">\n                        <Avatar className=\"w-4 h-4\">\n                          <AvatarFallback className=\"text-xs\">JD</AvatarFallback>\n                        </Avatar>\n                        <span>John Doe</span>\n                      </div>\n                    </SelectItem>\n                    <SelectItem value=\"user2\">\n                      <div className=\"flex items-center gap-2\">\n                        <Avatar className=\"w-4 h-4\">\n                          <AvatarFallback className=\"text-xs\">JS</AvatarFallback>\n                        </Avatar>\n                        <span>Jane Smith</span>\n                      </div>\n                    </SelectItem>\n                    <SelectItem value=\"user3\">\n                      <div className=\"flex items-center gap-2\">\n                        <Avatar className=\"w-4 h-4\">\n                          <AvatarFallback className=\"text-xs\">MJ</AvatarFallback>\n                        </Avatar>\n                        <span>Mike Johnson</span>\n                      </div>\n                    </SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              {/* Due Date */}\n              <div className=\"flex items-center gap-1\">\n                <Calendar className=\"w-4 h-4\" />\n                <input\n                  type=\"date\"\n                  value={task.dueDate ? format(new Date(task.dueDate), 'yyyy-MM-dd') : ''}\n                  onChange={(e) => {\n                    updateTaskMutation.mutate({\n                      id: taskId,\n                      dueDate: e.target.value ? new Date(e.target.value).toISOString() : null,\n                    })\n                  }}\n                  className=\"bg-transparent border-none text-sm cursor-pointer hover:text-krushr-gray-dark w-20 transition-colors\"\n                  placeholder=\"No date\"\n                />\n              </div>\n              \n              {/* Created */}\n              <div className=\"flex items-center gap-1 text-krushr-gray-light\">\n                <Clock className=\"w-4 h-4\" />\n                <span>{formatDistanceToNow(new Date(task.createdAt))} ago</span>\n              </div>\n            </div>\n\n            {/* Tags */}\n            {task.tags && task.tags.length > 0 && (\n              <div className=\"flex flex-wrap gap-2\">\n                {task.tags.map((tag: any) => (\n                  <Badge key={tag.id || tag} variant=\"secondary\">\n                    {typeof tag === 'string' ? tag : tag.name}\n                  </Badge>\n                ))}\n              </div>\n            )}\n\n            {/* Checklist Section */}\n            <div className=\"space-y-4 bg-white rounded-lg border border-krushr-panel-border p-4\">\n              <h3 className=\"text-sm font-medium text-krushr-gray-dark\">Checklist</h3>\n              <div className=\"space-y-2\">\n                {task.checklists?.[0]?.items?.map((item: any) => (\n                  <div key={item.id} className=\"flex items-center gap-2 group\">\n                    <button\n                      onClick={() => {\n                        updateChecklistItemMutation.mutate({\n                          id: item.id,\n                          completed: !item.completed\n                        })\n                      }}\n                      className={cn(\n                        \"w-4 h-4 rounded border-2 flex items-center justify-center transition-all duration-200\",\n                        item.completed \n                          ? \"bg-krushr-success border-krushr-success text-white\" \n                          : \"border-krushr-panel-border hover:border-krushr-success/50\"\n                      )}\n                    >\n                      {item.completed && <Check className=\"w-2.5 h-2.5\" />}\n                    </button>\n                    <span className={cn(\n                      \"text-sm flex-1\",\n                      item.completed ? \"line-through text-krushr-gray-light\" : \"text-krushr-gray-dark\"\n                    )}>\n                      {item.text}\n                    </span>\n                    <button\n                      onClick={() => {\n                        deleteChecklistItemMutation.mutate({ id: item.id })\n                      }}\n                      className=\"opacity-0 group-hover:opacity-100 text-krushr-secondary hover:text-krushr-secondary/80 transition-all duration-200\"\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </button>\n                  </div>\n                )) || []}\n                \n                {/* Add new checklist item */}\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-4 h-4 border-2 border-krushr-panel-border rounded\" />\n                  <FloatingInput\n                    label=\"Add checklist item\"\n                    value={newChecklistItem}\n                    onChange={(e) => setNewChecklistItem(e.target.value)}\n                    className=\"text-sm border-none shadow-none px-0 focus-visible:ring-0\"\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter' && newChecklistItem.trim()) {\n                        const checklistId = task.checklists?.[0]?.id\n                        if (checklistId) {\n                          addChecklistItemMutation.mutate({\n                            checklistId,\n                            text: newChecklistItem.trim()\n                          })\n                        } else {\n                          console.log('Need to create checklist first')\n                        }\n                      }\n                    }}\n                  />\n                  {newChecklistItem.trim() && (\n                    <button\n                      onClick={() => {\n                        const checklistId = task.checklists?.[0]?.id\n                        if (checklistId) {\n                          addChecklistItemMutation.mutate({\n                            checklistId,\n                            text: newChecklistItem.trim()\n                          })\n                        }\n                      }}\n                      className=\"text-krushr-success hover:text-krushr-success/80 transition-colors\"\n                    >\n                      <Plus className=\"w-3 h-3\" />\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n            {/* Unified Comments, Files, and Activity View */}\n            <div className=\"space-y-6 max-h-[60vh] overflow-y-auto pr-2\">\n              \n              {/* Comments Section - Brandkit Inline Comments Style */}\n              <div className=\"space-y-4 bg-white rounded-lg border border-krushr-panel-border p-4\">\n                <div className=\"flex items-center gap-2\">\n                  <MessageSquare className=\"w-4 h-4 text-blue-600\" />\n                  <h3 className=\"text-sm font-medium text-krushr-gray-dark\">Comments ({comments.length})</h3>\n                </div>\n                \n                {/* Comment Input */}\n                <div className=\"space-y-2\">\n                  <RichTextEditor\n                    content={comment}\n                    onChange={setComment}\n                    placeholder={addCommentMutation.isLoading ? \"Posting comment...\" : \"Add a comment...\"}\n                    className=\"min-h-[80px]\"\n                    minimal={true}\n                    editable={!addCommentMutation.isLoading}\n                  />\n                  <div className=\"flex justify-end\">\n                    <Button\n                      size=\"sm\"\n                      onClick={handleAddComment}\n                      disabled={!comment.trim() || addCommentMutation.isLoading}\n                    >\n                      <Send className=\"w-4 h-4 mr-2\" />\n                      {addCommentMutation.isLoading ? 'Posting...' : 'Post Comment'}\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Comments List - Exact Brandkit Inline Comments Pattern */}\n                <div className=\"space-y-3 max-h-40 overflow-y-auto\">\n                  {comments.map((comment: any) => (\n                    <div key={comment.id} className=\"border border-krushr-panel-border rounded-lg p-3 bg-krushr-gray-50/50\">\n                      <div className=\"flex items-start space-x-3\">\n                        <div className=\"w-8 h-8 bg-krushr-primary rounded-full flex items-center justify-center text-white text-xs\">\n                          {comment.user?.name?.charAt(0)?.toUpperCase() || 'U'}\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <span className=\"text-sm font-medium text-krushr-gray-dark\">\n                              {comment.user?.name || 'Unknown User'}\n                            </span>\n                            <span className=\"text-xs text-krushr-gray\">\n                              {formatDistanceToNow(new Date(comment.createdAt))} ago\n                            </span>\n                          </div>\n                          <div \n                            className=\"text-sm text-krushr-gray prose prose-sm max-w-none\"\n                            dangerouslySetInnerHTML={{ __html: comment.content }}\n                          />\n                          <div className=\"flex items-center space-x-4 mt-2\">\n                            <button className=\"text-xs text-krushr-gray-light hover:text-krushr-primary transition-colors\">Reply</button>\n                            <button className=\"text-xs text-krushr-gray-light hover:text-krushr-primary transition-colors\">Like</button>\n                            <button className=\"text-xs text-krushr-gray-light hover:text-krushr-primary transition-colors\">...</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  \n                  {comments.length === 0 && (\n                    <div className=\"text-center py-4 text-krushr-gray-light text-sm\">\n                      No comments yet. Be the first to add one!\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Files Section */}\n              <div className=\"border border-krushr-panel-border rounded-lg bg-white shadow-sm\">\n                <div className=\"p-4 border-b border-krushr-panel-border bg-krushr-gray-50\">\n                  <div className=\"flex items-center gap-2\">\n                    <Paperclip className=\"w-4 h-4 text-krushr-secondary\" />\n                    <h3 className=\"font-medium text-krushr-gray-dark\">Files ({attachments.length})</h3>\n                  </div>\n                </div>\n                <div className=\"p-4 space-y-3\">\n                \n                {/* Themed Upload */}\n                <div className=\"border-2 border-dashed border-krushr-panel-border rounded-lg p-4 text-center text-sm text-krushr-gray hover:border-krushr-secondary/50 transition-colors bg-krushr-gray-50\">\n                  <Upload className=\"w-5 h-5 mx-auto mb-2 text-krushr-gray-light\" />\n                  <span className=\"font-medium\">Drop files here or click to upload</span>\n                </div>\n\n                {/* Existing Attachments */}\n                {attachments.length > 0 && (\n                  <div className=\"pt-2 border-t border-krushr-panel-border\">\n                    <AttachmentListSimple\n                      attachments={attachments}\n                      canDelete={true}\n                      onRefresh={() => {\n                        refetchAttachments()\n                      }}\n                    />\n                  </div>\n                )}\n                </div>\n              </div>\n            </div>\n\n            {/* Activity Section */}\n            <div className=\"border border-krushr-panel-border rounded-lg bg-white shadow-sm\">\n              <div className=\"p-4 border-b border-krushr-panel-border bg-krushr-gray-50\">\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"w-4 h-4 text-amber-500\" />\n                  <h3 className=\"font-medium text-krushr-gray-dark\">Activity</h3>\n                </div>\n              </div>\n              <div className=\"p-4 space-y-2\">\n              {activities.map((activity: any) => (\n                <div key={activity.id} className=\"flex items-start gap-3\">\n                  <div className=\"w-2 h-2 bg-krushr-gray-300 rounded-full mt-2\" />\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm\">\n                      <span className=\"font-medium\">{activity.user?.name}</span>{' '}\n                      {activity.action}\n                    </p>\n                    <p className=\"text-xs text-krushr-gray\">\n                      {formatDistanceToNow(new Date(activity.createdAt))} ago\n                    </p>\n                  </div>\n                </div>\n              ))}\n              </div>\n            </div>\n        </SheetContent>\n      </Sheet>\n      \n      {/* Compact Task Edit Modal */}\n      <CompactTaskModal\n        open={showEditModal}\n        onClose={() => setShowEditModal(false)}\n        task={task}\n        workspaceId={task?.workspaceId || ''}\n        onSuccess={() => {\n          setShowEditModal(false)\n          refetch()\n          onUpdate?.()\n        }}\n      />\n    </>\n  )\n}\n", "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {\n  hideOverlay?: boolean\n}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, hideOverlay = false, ...props }, ref) => (\n  <SheetPortal>\n    {!hideOverlay && <SheetOverlay />}\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { createSlot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentRef: React.RefObject<DialogContentElement | null>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: DIALOG_NAME,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst Slot = createSlot('DialogOverlay.RemoveScroll');\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ComponentRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ComponentRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ComponentRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ComponentRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement | null>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n", "import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n", "import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.outline = 'none';\n  element.style.opacity = '0';\n  element.style.position = 'fixed';\n  element.style.pointerEvents = 'none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScroll } from './UI';\nimport SideCar from './sidecar';\nvar ReactRemoveScroll = React.forwardRef(function (props, ref) { return (React.createElement(RemoveScroll, __assign({}, props, { ref: ref, sideCar: SideCar }))); });\nReactRemoveScroll.classNames = RemoveScroll.classNames;\nexport default ReactRemoveScroll;\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { fullWidthClassName, zeroRightClassName } from 'react-remove-scroll-bar/constants';\nimport { useMergeRefs } from 'use-callback-ref';\nimport { effectCar } from './medium';\nvar nothing = function () {\n    return;\n};\n/**\n * Removes scrollbar from the page and contain the scroll within the Lock\n */\nvar RemoveScroll = React.forwardRef(function (props, parentRef) {\n    var ref = React.useRef(null);\n    var _a = React.useState({\n        onScrollCapture: nothing,\n        onWheelCapture: nothing,\n        onTouchMoveCapture: nothing,\n    }), callbacks = _a[0], setCallbacks = _a[1];\n    var forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noRelative = props.noRelative, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? 'div' : _b, gapMode = props.gapMode, rest = __rest(props, [\"forwardProps\", \"children\", \"className\", \"removeScrollBar\", \"enabled\", \"shards\", \"sideCar\", \"noRelative\", \"noIsolation\", \"inert\", \"allowPinchZoom\", \"as\", \"gapMode\"]);\n    var SideCar = sideCar;\n    var containerRef = useMergeRefs([ref, parentRef]);\n    var containerProps = __assign(__assign({}, rest), callbacks);\n    return (React.createElement(React.Fragment, null,\n        enabled && (React.createElement(SideCar, { sideCar: effectCar, removeScrollBar: removeScrollBar, shards: shards, noRelative: noRelative, noIsolation: noIsolation, inert: inert, setCallbacks: setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref, gapMode: gapMode })),\n        forwardProps ? (React.cloneElement(React.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef }))) : (React.createElement(Container, __assign({}, containerProps, { className: className, ref: containerRef }), children))));\n});\nRemoveScroll.defaultProps = {\n    enabled: true,\n    removeScrollBar: true,\n    inert: false,\n};\nRemoveScroll.classNames = {\n    fullWidth: fullWidthClassName,\n    zeroRight: zeroRightClassName,\n};\nexport { RemoveScroll };\n", "export var zeroRightClassName = 'right-scroll-bar-position';\nexport var fullWidthClassName = 'width-before-scroll-bar';\nexport var noScrollbarsClassName = 'with-scroll-bars-hidden';\n/**\n * Name of a CSS variable containing the amount of \"hidden\" scrollbar\n * ! might be undefined ! use will fallback!\n */\nexport var removedBarSizeVariable = '--removed-body-scroll-bar-size';\n", "/**\n * Assigns a value for a given ref, no matter of the ref format\n * @param {RefObject} ref - a callback function or ref object\n * @param value - a new value\n *\n * @see https://github.com/theKashey/use-callback-ref#assignref\n * @example\n * const refObject = useRef();\n * const refFn = (ref) => {....}\n *\n * assignRef(refObject, \"refValue\");\n * assignRef(refFn, \"refValue\");\n */\nexport function assignRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    }\n    else if (ref) {\n        ref.current = value;\n    }\n    return ref;\n}\n", "import { useState } from 'react';\n/**\n * creates a MutableRef with ref change callback\n * @param initialValue - initial ref value\n * @param {Function} callback - a callback to run when value changes\n *\n * @example\n * const ref = useCallbackRef(0, (newValue, oldValue) => console.log(oldValue, '->', newValue);\n * ref.current = 1;\n * // prints 0 -> 1\n *\n * @see https://reactjs.org/docs/hooks-reference.html#useref\n * @see https://github.com/theKashey/use-callback-ref#usecallbackref---to-replace-reactuseref\n * @returns {MutableRefObject}\n */\nexport function useCallbackRef(initialValue, callback) {\n    var ref = useState(function () { return ({\n        // value\n        value: initialValue,\n        // last callback\n        callback: callback,\n        // \"memoized\" public interface\n        facade: {\n            get current() {\n                return ref.value;\n            },\n            set current(value) {\n                var last = ref.value;\n                if (last !== value) {\n                    ref.value = value;\n                    ref.callback(value, last);\n                }\n            },\n        },\n    }); })[0];\n    // update callback\n    ref.callback = callback;\n    return ref.facade;\n}\n", "import * as React from 'react';\nimport { assignRef } from './assignRef';\nimport { useCallbackRef } from './useRef';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar currentValues = new WeakMap();\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // \uD83D\uDC48 merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function useMergeRefs(refs, defaultValue) {\n    var callbackRef = useCallbackRef(defaultValue || null, function (newValue) {\n        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n        var oldValue = currentValues.get(callbackRef);\n        if (oldValue) {\n            var prevRefs_1 = new Set(oldValue);\n            var nextRefs_1 = new Set(refs);\n            var current_1 = callbackRef.current;\n            prevRefs_1.forEach(function (ref) {\n                if (!nextRefs_1.has(ref)) {\n                    assignRef(ref, null);\n                }\n            });\n            nextRefs_1.forEach(function (ref) {\n                if (!prevRefs_1.has(ref)) {\n                    assignRef(ref, current_1);\n                }\n            });\n        }\n        currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n}\n", "import { __assign } from \"tslib\";\nfunction ItoI(a) {\n    return a;\n}\nfunction innerCreateMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    var buffer = [];\n    var assigned = false;\n    var medium = {\n        read: function () {\n            if (assigned) {\n                throw new Error('Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.');\n            }\n            if (buffer.length) {\n                return buffer[buffer.length - 1];\n            }\n            return defaults;\n        },\n        useMedium: function (data) {\n            var item = middleware(data, assigned);\n            buffer.push(item);\n            return function () {\n                buffer = buffer.filter(function (x) { return x !== item; });\n            };\n        },\n        assignSyncMedium: function (cb) {\n            assigned = true;\n            while (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n            }\n            buffer = {\n                push: function (x) { return cb(x); },\n                filter: function () { return buffer; },\n            };\n        },\n        assignMedium: function (cb) {\n            assigned = true;\n            var pendingQueue = [];\n            if (buffer.length) {\n                var cbs = buffer;\n                buffer = [];\n                cbs.forEach(cb);\n                pendingQueue = buffer;\n            }\n            var executeQueue = function () {\n                var cbs = pendingQueue;\n                pendingQueue = [];\n                cbs.forEach(cb);\n            };\n            var cycle = function () { return Promise.resolve().then(executeQueue); };\n            cycle();\n            buffer = {\n                push: function (x) {\n                    pendingQueue.push(x);\n                    cycle();\n                },\n                filter: function (filter) {\n                    pendingQueue = pendingQueue.filter(filter);\n                    return buffer;\n                },\n            };\n        },\n    };\n    return medium;\n}\nexport function createMedium(defaults, middleware) {\n    if (middleware === void 0) { middleware = ItoI; }\n    return innerCreateMedium(defaults, middleware);\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function createSidecarMedium(options) {\n    if (options === void 0) { options = {}; }\n    var medium = innerCreateMedium(null);\n    medium.options = __assign({ async: true, ssr: false }, options);\n    return medium;\n}\n", "import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nvar SideCar = function (_a) {\n    var sideCar = _a.sideCar, rest = __rest(_a, [\"sideCar\"]);\n    if (!sideCar) {\n        throw new Error('Sidecar: please provide `sideCar` property to import the right car');\n    }\n    var Target = sideCar.read();\n    if (!Target) {\n        throw new Error('Sidecar medium not found');\n    }\n    return React.createElement(Target, __assign({}, rest));\n};\nSideCar.isSideCarExport = true;\nexport function exportSidecar(medium, exported) {\n    medium.useMedium(exported);\n    return SideCar;\n}\n", "import { createSidecarMedium } from 'use-sidecar';\nexport var effectCar = createSidecarMedium();\n", "import { __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { RemoveScrollBar } from 'react-remove-scroll-bar';\nimport { styleSingleton } from 'react-style-singleton';\nimport { nonPassive } from './aggresiveCapture';\nimport { handleScroll, locationCouldBeScrolled } from './handleScroll';\nexport var getTouchXY = function (event) {\n    return 'changedTouches' in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];\n};\nexport var getDeltaXY = function (event) { return [event.deltaX, event.deltaY]; };\nvar extractRef = function (ref) {\n    return ref && 'current' in ref ? ref.current : ref;\n};\nvar deltaCompare = function (x, y) { return x[0] === y[0] && x[1] === y[1]; };\nvar generateStyle = function (id) { return \"\\n  .block-interactivity-\".concat(id, \" {pointer-events: none;}\\n  .allow-interactivity-\").concat(id, \" {pointer-events: all;}\\n\"); };\nvar idCounter = 0;\nvar lockStack = [];\nexport function RemoveScrollSideCar(props) {\n    var shouldPreventQueue = React.useRef([]);\n    var touchStartRef = React.useRef([0, 0]);\n    var activeAxis = React.useRef();\n    var id = React.useState(idCounter++)[0];\n    var Style = React.useState(styleSingleton)[0];\n    var lastProps = React.useRef(props);\n    React.useEffect(function () {\n        lastProps.current = props;\n    }, [props]);\n    React.useEffect(function () {\n        if (props.inert) {\n            document.body.classList.add(\"block-interactivity-\".concat(id));\n            var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), true).filter(Boolean);\n            allow_1.forEach(function (el) { return el.classList.add(\"allow-interactivity-\".concat(id)); });\n            return function () {\n                document.body.classList.remove(\"block-interactivity-\".concat(id));\n                allow_1.forEach(function (el) { return el.classList.remove(\"allow-interactivity-\".concat(id)); });\n            };\n        }\n        return;\n    }, [props.inert, props.lockRef.current, props.shards]);\n    var shouldCancelEvent = React.useCallback(function (event, parent) {\n        if (('touches' in event && event.touches.length === 2) || (event.type === 'wheel' && event.ctrlKey)) {\n            return !lastProps.current.allowPinchZoom;\n        }\n        var touch = getTouchXY(event);\n        var touchStart = touchStartRef.current;\n        var deltaX = 'deltaX' in event ? event.deltaX : touchStart[0] - touch[0];\n        var deltaY = 'deltaY' in event ? event.deltaY : touchStart[1] - touch[1];\n        var currentAxis;\n        var target = event.target;\n        var moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? 'h' : 'v';\n        // allow horizontal touch move on Range inputs. They will not cause any scroll\n        if ('touches' in event && moveDirection === 'h' && target.type === 'range') {\n            return false;\n        }\n        var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n        if (!canBeScrolledInMainDirection) {\n            return true;\n        }\n        if (canBeScrolledInMainDirection) {\n            currentAxis = moveDirection;\n        }\n        else {\n            currentAxis = moveDirection === 'v' ? 'h' : 'v';\n            canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);\n            // other axis might be not scrollable\n        }\n        if (!canBeScrolledInMainDirection) {\n            return false;\n        }\n        if (!activeAxis.current && 'changedTouches' in event && (deltaX || deltaY)) {\n            activeAxis.current = currentAxis;\n        }\n        if (!currentAxis) {\n            return true;\n        }\n        var cancelingAxis = activeAxis.current || currentAxis;\n        return handleScroll(cancelingAxis, parent, event, cancelingAxis === 'h' ? deltaX : deltaY, true);\n    }, []);\n    var shouldPrevent = React.useCallback(function (_event) {\n        var event = _event;\n        if (!lockStack.length || lockStack[lockStack.length - 1] !== Style) {\n            // not the last active\n            return;\n        }\n        var delta = 'deltaY' in event ? getDeltaXY(event) : getTouchXY(event);\n        var sourceEvent = shouldPreventQueue.current.filter(function (e) { return e.name === event.type && (e.target === event.target || event.target === e.shadowParent) && deltaCompare(e.delta, delta); })[0];\n        // self event, and should be canceled\n        if (sourceEvent && sourceEvent.should) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            return;\n        }\n        // outside or shard event\n        if (!sourceEvent) {\n            var shardNodes = (lastProps.current.shards || [])\n                .map(extractRef)\n                .filter(Boolean)\n                .filter(function (node) { return node.contains(event.target); });\n            var shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;\n            if (shouldStop) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n            }\n        }\n    }, []);\n    var shouldCancel = React.useCallback(function (name, delta, target, should) {\n        var event = { name: name, delta: delta, target: target, should: should, shadowParent: getOutermostShadowParent(target) };\n        shouldPreventQueue.current.push(event);\n        setTimeout(function () {\n            shouldPreventQueue.current = shouldPreventQueue.current.filter(function (e) { return e !== event; });\n        }, 1);\n    }, []);\n    var scrollTouchStart = React.useCallback(function (event) {\n        touchStartRef.current = getTouchXY(event);\n        activeAxis.current = undefined;\n    }, []);\n    var scrollWheel = React.useCallback(function (event) {\n        shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    var scrollTouchMove = React.useCallback(function (event) {\n        shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));\n    }, []);\n    React.useEffect(function () {\n        lockStack.push(Style);\n        props.setCallbacks({\n            onScrollCapture: scrollWheel,\n            onWheelCapture: scrollWheel,\n            onTouchMoveCapture: scrollTouchMove,\n        });\n        document.addEventListener('wheel', shouldPrevent, nonPassive);\n        document.addEventListener('touchmove', shouldPrevent, nonPassive);\n        document.addEventListener('touchstart', scrollTouchStart, nonPassive);\n        return function () {\n            lockStack = lockStack.filter(function (inst) { return inst !== Style; });\n            document.removeEventListener('wheel', shouldPrevent, nonPassive);\n            document.removeEventListener('touchmove', shouldPrevent, nonPassive);\n            document.removeEventListener('touchstart', scrollTouchStart, nonPassive);\n        };\n    }, []);\n    var removeScrollBar = props.removeScrollBar, inert = props.inert;\n    return (React.createElement(React.Fragment, null,\n        inert ? React.createElement(Style, { styles: generateStyle(id) }) : null,\n        removeScrollBar ? React.createElement(RemoveScrollBar, { noRelative: props.noRelative, gapMode: props.gapMode }) : null));\n}\nfunction getOutermostShadowParent(node) {\n    var shadowParent = null;\n    while (node !== null) {\n        if (node instanceof ShadowRoot) {\n            shadowParent = node.host;\n            node = node.host;\n        }\n        node = node.parentNode;\n    }\n    return shadowParent;\n}\n", "import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n", "import * as React from 'react';\nimport { stylesheetSingleton } from './singleton';\n/**\n * creates a hook to control style singleton\n * @see {@link styleSingleton} for a safer component version\n * @example\n * ```tsx\n * const useStyle = styleHookSingleton();\n * ///\n * useStyle('body { overflow: hidden}');\n */\nexport var styleHookSingleton = function () {\n    var sheet = stylesheetSingleton();\n    return function (styles, isDynamic) {\n        React.useEffect(function () {\n            sheet.add(styles);\n            return function () {\n                sheet.remove();\n            };\n        }, [styles && isDynamic]);\n    };\n};\n", "var currentNonce;\nexport var setNonce = function (nonce) {\n    currentNonce = nonce;\n};\nexport var getNonce = function () {\n    if (currentNonce) {\n        return currentNonce;\n    }\n    if (typeof __webpack_nonce__ !== 'undefined') {\n        return __webpack_nonce__;\n    }\n    return undefined;\n};\n", "import { getNonce } from 'get-nonce';\nfunction makeStyleTag() {\n    if (!document)\n        return null;\n    var tag = document.createElement('style');\n    tag.type = 'text/css';\n    var nonce = getNonce();\n    if (nonce) {\n        tag.setAttribute('nonce', nonce);\n    }\n    return tag;\n}\nfunction injectStyles(tag, css) {\n    // @ts-ignore\n    if (tag.styleSheet) {\n        // @ts-ignore\n        tag.styleSheet.cssText = css;\n    }\n    else {\n        tag.appendChild(document.createTextNode(css));\n    }\n}\nfunction insertStyleTag(tag) {\n    var head = document.head || document.getElementsByTagName('head')[0];\n    head.appendChild(tag);\n}\nexport var stylesheetSingleton = function () {\n    var counter = 0;\n    var stylesheet = null;\n    return {\n        add: function (style) {\n            if (counter == 0) {\n                if ((stylesheet = makeStyleTag())) {\n                    injectStyles(stylesheet, style);\n                    insertStyleTag(stylesheet);\n                }\n            }\n            counter++;\n        },\n        remove: function () {\n            counter--;\n            if (!counter && stylesheet) {\n                stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet);\n                stylesheet = null;\n            }\n        },\n    };\n};\n", "import { styleHookSingleton } from './hook';\n/**\n * create a Component to add styles on demand\n * - styles are added when first instance is mounted\n * - styles are removed when the last instance is unmounted\n * - changing styles in runtime does nothing unless dynamic is set. But with multiple components that can lead to the undefined behavior\n */\nexport var styleSingleton = function () {\n    var useStyle = styleHookSingleton();\n    var Sheet = function (_a) {\n        var styles = _a.styles, dynamic = _a.dynamic;\n        useStyle(styles, dynamic);\n        return null;\n    };\n    return Sheet;\n};\n", "export var zeroGap = {\n    left: 0,\n    top: 0,\n    right: 0,\n    gap: 0,\n};\nvar parse = function (x) { return parseInt(x || '', 10) || 0; };\nvar getOffset = function (gapMode) {\n    var cs = window.getComputedStyle(document.body);\n    var left = cs[gapMode === 'padding' ? 'paddingLeft' : 'marginLeft'];\n    var top = cs[gapMode === 'padding' ? 'paddingTop' : 'marginTop'];\n    var right = cs[gapMode === 'padding' ? 'paddingRight' : 'marginRight'];\n    return [parse(left), parse(top), parse(right)];\n};\nexport var getGapWidth = function (gapMode) {\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    if (typeof window === 'undefined') {\n        return zeroGap;\n    }\n    var offsets = getOffset(gapMode);\n    var documentWidth = document.documentElement.clientWidth;\n    var windowWidth = window.innerWidth;\n    return {\n        left: offsets[0],\n        top: offsets[1],\n        right: offsets[2],\n        gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0]),\n    };\n};\n", "var passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n                return true;\n            },\n        });\n        // @ts-ignore\n        window.addEventListener('test', options, options);\n        // @ts-ignore\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\nexport var nonPassive = passiveSupported ? { passive: false } : false;\n", "var alwaysContainsScroll = function (node) {\n    // textarea will always _contain_ scroll inside self. It only can be hidden\n    return node.tagName === 'TEXTAREA';\n};\nvar elementCanBeScrolled = function (node, overflow) {\n    if (!(node instanceof Element)) {\n        return false;\n    }\n    var styles = window.getComputedStyle(node);\n    return (\n    // not-not-scrollable\n    styles[overflow] !== 'hidden' &&\n        // contains scroll inside self\n        !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === 'visible'));\n};\nvar elementCouldBeVScrolled = function (node) { return elementCanBeScrolled(node, 'overflowY'); };\nvar elementCouldBeHScrolled = function (node) { return elementCanBeScrolled(node, 'overflowX'); };\nexport var locationCouldBeScrolled = function (axis, node) {\n    var ownerDocument = node.ownerDocument;\n    var current = node;\n    do {\n        // Skip over shadow root\n        if (typeof ShadowRoot !== 'undefined' && current instanceof ShadowRoot) {\n            current = current.host;\n        }\n        var isScrollable = elementCouldBeScrolled(axis, current);\n        if (isScrollable) {\n            var _a = getScrollVariables(axis, current), scrollHeight = _a[1], clientHeight = _a[2];\n            if (scrollHeight > clientHeight) {\n                return true;\n            }\n        }\n        current = current.parentNode;\n    } while (current && current !== ownerDocument.body);\n    return false;\n};\nvar getVScrollVariables = function (_a) {\n    var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;\n    return [\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n    ];\n};\nvar getHScrollVariables = function (_a) {\n    var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n    return [\n        scrollLeft,\n        scrollWidth,\n        clientWidth,\n    ];\n};\nvar elementCouldBeScrolled = function (axis, node) {\n    return axis === 'v' ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);\n};\nvar getScrollVariables = function (axis, node) {\n    return axis === 'v' ? getVScrollVariables(node) : getHScrollVariables(node);\n};\nvar getDirectionFactor = function (axis, direction) {\n    /**\n     * If the element's direction is rtl (right-to-left), then scrollLeft is 0 when the scrollbar is at its rightmost position,\n     * and then increasingly negative as you scroll towards the end of the content.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n     */\n    return axis === 'h' && direction === 'rtl' ? -1 : 1;\n};\nexport var handleScroll = function (axis, endTarget, event, sourceDelta, noOverscroll) {\n    var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction);\n    var delta = directionFactor * sourceDelta;\n    // find scrollable target\n    var target = event.target;\n    var targetInLock = endTarget.contains(target);\n    var shouldCancelScroll = false;\n    var isDeltaPositive = delta > 0;\n    var availableScroll = 0;\n    var availableScrollTop = 0;\n    do {\n        if (!target) {\n            break;\n        }\n        var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2];\n        var elementScroll = scroll_1 - capacity - directionFactor * position;\n        if (position || elementScroll) {\n            if (elementCouldBeScrolled(axis, target)) {\n                availableScroll += elementScroll;\n                availableScrollTop += position;\n            }\n        }\n        var parent_1 = target.parentNode;\n        // we will \"bubble\" from ShadowDom in case we are, or just to the parent in normal case\n        // this is the same logic used in focus-lock\n        target = (parent_1 && parent_1.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? parent_1.host : parent_1);\n    } while (\n    // portaled content\n    (!targetInLock && target !== document.body) ||\n        // self content\n        (targetInLock && (endTarget.contains(target) || endTarget === target)));\n    // handle epsilon around 0 (non standard zoom levels)\n    if (isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScroll) < 1) || (!noOverscroll && delta > availableScroll))) {\n        shouldCancelScroll = true;\n    }\n    else if (!isDeltaPositive &&\n        ((noOverscroll && Math.abs(availableScrollTop) < 1) || (!noOverscroll && -delta > availableScrollTop))) {\n        shouldCancelScroll = true;\n    }\n    return shouldCancelScroll;\n};\n", "import { exportSidecar } from 'use-sidecar';\nimport { RemoveScrollSideCar } from './SideEffect';\nimport { effectCar } from './medium';\nexport default exportSidecar(effectCar, RemoveScrollSideCar);\n", "var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n};\nvar correctTargets = function (parent, targets) {\n    return targets\n        .map(function (target) {\n        if (parent.contains(target)) {\n            return target;\n        }\n        var correctedTarget = unwrapHost(target);\n        if (correctedTarget && parent.contains(correctedTarget)) {\n            return correctedTarget;\n        }\n        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n        return null;\n    })\n        .filter(function (x) { return Boolean(x); });\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                try {\n                    var attr = node.getAttribute(controlAttribute);\n                    var alreadyHidden = attr !== null && attr !== 'false';\n                    var counterValue = (counterMap.get(node) || 0) + 1;\n                    var markerValue = (markerCounter.get(node) || 0) + 1;\n                    counterMap.set(node, counterValue);\n                    markerCounter.set(node, markerValue);\n                    hiddenNodes.push(node);\n                    if (counterValue === 1 && alreadyHidden) {\n                        uncontrolledNodes.set(node, true);\n                    }\n                    if (markerValue === 1) {\n                        node.setAttribute(markerName, 'true');\n                    }\n                    if (!alreadyHidden) {\n                        node.setAttribute(controlAttribute, 'true');\n                    }\n                }\n                catch (e) {\n                    console.error('aria-hidden: cannot operate on ', node, e);\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide aria-live elements - https://github.com/theKashey/aria-hidden/issues/10\n    // and script elements, as they have no impact on accessibility.\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live], script')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n", "import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VISUALLY_HIDDEN_STYLES } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value: string | undefined;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface ControlledClearableSelectProps {\n  value: string | undefined;\n  defaultValue?: never;\n  onValueChange: (value: string | undefined) => void;\n}\n\ninterface ControlledUnclearableSelectProps {\n  value: string;\n  defaultValue?: never;\n  onValueChange: (value: string) => void;\n}\n\ninterface UncontrolledSelectProps {\n  value?: never;\n  defaultValue?: string;\n  onValueChange?: {\n    (value: string): void;\n    (value: string | undefined): void;\n  };\n}\n\ntype SelectControlProps =\n  | ControlledClearableSelectProps\n  | ControlledUnclearableSelectProps\n  | UncontrolledSelectProps;\n\ninterface SelectSharedProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n  form?: string;\n}\n\n// TODO: Should improve typing somewhat, but this would be a breaking change.\n// Consider using in the next major version (along with some testing to be sure\n// it works as expected and doesn't cause problems)\ntype _FutureSelectProps = SelectSharedProps & SelectControlProps;\n\ntype SelectProps = SelectSharedProps & {\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n};\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: SELECT_NAME,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange as any,\n    caller: SELECT_NAME,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? form || !!trigger.closest('form') : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <SelectBubbleInput\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n            form={form}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </SelectBubbleInput>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = (pointerEvent?: React.MouseEvent | React.PointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY),\n        };\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={shouldShowPlaceholder(context.value) ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n\n            // Open on click when using a touch or pen device\n            if (pointerTypeRef.current !== 'mouse') {\n              handleOpen(event);\n            }\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            pointerTypeRef.current = event.pointerType;\n\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click); also not for touch\n            // devices because that would open the menu on scroll. (pen devices behave as touch on iOS).\n            if (event.button === 0 && event.ctrlKey === false && event.pointerType === 'mouse') {\n              handleOpen(event);\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ComponentRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder = '', ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {shouldShowPlaceholder(context.value) ? <>{placeholder}</> : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '\u25BC'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst Slot = createSlot('SelectContent.RemoveScroll');\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth),\n        ]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem =\n          items.length > 0 && selectedItem === items[items.length - 1]!.ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0]!.ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              // Viewport should only be scrollable in the vertical direction.\n              // This won't work in vertical writing modes, so we'll need to\n              // revisit this if/when that is supported\n              // https://developer.chrome.com/blog/vertical-form-controls\n              overflow: 'hidden auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef<React.PointerEvent['pointerType']>('touch');\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    if (value === '') {\n      throw new Error(\n        'A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.'\n      );\n    }\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onClick={composeEventHandlers(itemProps.onClick, () => {\n              // Open on click when using a touch or pen device\n              if (pointerTypeRef.current !== 'mouse') handleSelect();\n            })}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, () => {\n              // Using a mouse you should be able to do pointer down, move through\n              // the list, and release the pointer over the item to select it.\n              if (pointerTypeRef.current === 'mouse') handleSelect();\n            })}\n            onPointerDown={composeEventHandlers(itemProps.onPointerDown, (event) => {\n              pointerTypeRef.current = event.pointerType;\n            })}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              // Remember pointer type when sliding over to this item from another one\n              pointerTypeRef.current = event.pointerType;\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else if (pointerTypeRef.current === 'mouse') {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ComponentRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ComponentRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectBubbleInput\n * -----------------------------------------------------------------------------------------------*/\n\nconst BUBBLE_INPUT_NAME = 'SelectBubbleInput';\n\ntype InputProps = React.ComponentPropsWithoutRef<typeof Primitive.select>;\ninterface SwitchBubbleInputProps extends InputProps {}\n\nconst SelectBubbleInput = React.forwardRef<HTMLSelectElement, SwitchBubbleInputProps>(\n  ({ __scopeSelect, value, ...props }: ScopedProps<SwitchBubbleInputProps>, forwardedRef) => {\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current;\n      if (!select) return;\n\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much as\n     * possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programmatically and bubble to any parent form `onChange`\n     * event. Adding the `value` will cause React to consider the programmatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use visually hidden styles rather than `display: \"none\"` because\n     * Safari autofill won't work otherwise.\n     */\n    return (\n      <Primitive.select\n        {...props}\n        style={{ ...VISUALLY_HIDDEN_STYLES, ...props.style }}\n        ref={composedRefs}\n        defaultValue={value}\n      />\n    );\n  }\n);\n\nSelectBubbleInput.displayName = BUBBLE_INPUT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction shouldShowPlaceholder(value?: string) {\n  return value === '' || value === undefined;\n}\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0]! : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map<T>((_, index) => array[(startIndex + index) % array.length]!);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createSlot, type Slot } from '@radix-ui/react-slot';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>\u2026</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement | null>;\n    itemMap: Map<\n      React.RefObject<ItemElement | null>,\n      { ref: React.RefObject<ItemElement | null> } & ItemData\n    >;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <CollectionSlotImpl ref={composedRefs}>{children}</CollectionSlotImpl>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <CollectionItemSlotImpl {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </CollectionItemSlotImpl>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createSlot, type Slot } from '@radix-ui/react-slot';\nimport type { EntryOf } from './ordered-dictionary';\nimport { OrderedDict } from './ordered-dictionary';\n\ntype SlotProps = React.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\ninterface BaseItemData {\n  id?: string;\n}\n\ntype ItemDataWithElement<\n  ItemData extends BaseItemData,\n  ItemElement extends HTMLElement,\n> = ItemData & {\n  element: ItemElement;\n};\n\ntype ItemMap<ItemElement extends HTMLElement, ItemData extends BaseItemData> = OrderedDict<\n  ItemElement,\n  ItemDataWithElement<ItemData, ItemElement>\n>;\n\nfunction createCollection<\n  ItemElement extends HTMLElement,\n  ItemData extends BaseItemData = BaseItemData,\n>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionElement: CollectionElement | null;\n    collectionRef: React.Ref<CollectionElement | null>;\n    collectionRefObject: React.RefObject<CollectionElement | null>;\n    itemMap: ItemMap<ItemElement, ItemData>;\n    setItemMap: React.Dispatch<React.SetStateAction<ItemMap<ItemElement, ItemData>>>;\n  };\n\n  const [CollectionContextProvider, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    {\n      collectionElement: null,\n      collectionRef: { current: null },\n      collectionRefObject: { current: null },\n      itemMap: new OrderedDict(),\n      setItemMap: () => void 0,\n    }\n  );\n\n  type CollectionState = [\n    ItemMap: ItemMap<ItemElement, ItemData>,\n    SetItemMap: React.Dispatch<React.SetStateAction<ItemMap<ItemElement, ItemData>>>,\n  ];\n\n  const CollectionProvider: React.FC<{\n    children?: React.ReactNode;\n    scope: any;\n    state?: CollectionState;\n  }> = ({ state, ...props }) => {\n    return state ? (\n      <CollectionProviderImpl {...props} state={state} />\n    ) : (\n      <CollectionInit {...props} />\n    );\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  const CollectionInit: React.FC<{\n    children?: React.ReactNode;\n    scope: any;\n  }> = (props) => {\n    const state = useInitCollection();\n    return <CollectionProviderImpl {...props} state={state} />;\n  };\n  CollectionInit.displayName = PROVIDER_NAME + 'Init';\n\n  const CollectionProviderImpl: React.FC<{\n    children?: React.ReactNode;\n    scope: any;\n    state: CollectionState;\n  }> = (props) => {\n    const { scope, children, state } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const [collectionElement, setCollectionElement] = React.useState<CollectionElement | null>(\n      null\n    );\n    const composeRefs = useComposedRefs(ref, setCollectionElement);\n    const [itemMap, setItemMap] = state;\n\n    React.useEffect(() => {\n      if (!collectionElement) return;\n\n      const observer = getChildListObserver(() => {\n        // setItemMap((map) => {\n        //   const copy = new OrderedDict(map).toSorted(([, a], [, b]) =>\n        //     !a.element || !b.element ? 0 : isElementPreceding(a.element, b.element) ? -1 : 1\n        //   );\n        //   // check if the order has changed\n        //   let index = -1;\n        //   for (const entry of copy) {\n        //     index++;\n        //     const key = map.keyAt(index)!;\n        //     const [copyKey] = entry;\n        //     if (key !== copyKey) {\n        //       // order has changed!\n        //       return copy;\n        //     }\n        //   }\n        //   return map;\n        // });\n      });\n      observer.observe(collectionElement, {\n        childList: true,\n        subtree: true,\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }, [collectionElement]);\n\n    return (\n      <CollectionContextProvider\n        scope={scope}\n        itemMap={itemMap}\n        setItemMap={setItemMap}\n        collectionRef={composeRefs}\n        collectionRefObject={ref}\n        collectionElement={collectionElement}\n      >\n        {children}\n      </CollectionContextProvider>\n    );\n  };\n\n  CollectionProviderImpl.displayName = PROVIDER_NAME + 'Impl';\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <CollectionSlotImpl ref={composedRefs}>{children}</CollectionSlotImpl>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const [element, setElement] = React.useState<ItemElement | null>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref, setElement);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      const { setItemMap } = context;\n\n      const itemDataRef = React.useRef(itemData);\n      if (!shallowEqual(itemDataRef.current, itemData)) {\n        itemDataRef.current = itemData;\n      }\n      const memoizedItemData = itemDataRef.current;\n\n      React.useEffect(() => {\n        const itemData = memoizedItemData;\n        setItemMap((map) => {\n          if (!element) {\n            return map;\n          }\n\n          if (!map.has(element)) {\n            map.set(element, { ...(itemData as unknown as ItemData), element });\n            return map.toSorted(sortByDocumentPosition);\n          }\n\n          return map\n            .set(element, { ...(itemData as unknown as ItemData), element })\n            .toSorted(sortByDocumentPosition);\n        });\n\n        return () => {\n          setItemMap((map) => {\n            if (!element || !map.has(element)) {\n              return map;\n            }\n            map.delete(element);\n            return new OrderedDict(map);\n          });\n        };\n      }, [element, memoizedItemData, setItemMap]);\n\n      return (\n        <CollectionItemSlotImpl {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs as any}>\n          {children}\n        </CollectionItemSlotImpl>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useInitCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useInitCollection() {\n    return React.useState<ItemMap<ItemElement, ItemData>>(new OrderedDict());\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const { itemMap } = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    return itemMap;\n  }\n\n  const functions = {\n    createCollectionScope,\n    useCollection,\n    useInitCollection,\n  };\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    functions,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n\nfunction shallowEqual(a: any, b: any) {\n  if (a === b) return true;\n  if (typeof a !== 'object' || typeof b !== 'object') return false;\n  if (a == null || b == null) return false;\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(b, key)) return false;\n    if (a[key] !== b[key]) return false;\n  }\n  return true;\n}\n\nfunction isElementPreceding(a: Element, b: Element) {\n  return !!(b.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_PRECEDING);\n}\n\nfunction sortByDocumentPosition<E extends HTMLElement, T extends BaseItemData>(\n  a: EntryOf<ItemMap<E, T>>,\n  b: EntryOf<ItemMap<E, T>>\n) {\n  return !a[1].element || !b[1].element\n    ? 0\n    : isElementPreceding(a[1].element, b[1].element)\n      ? -1\n      : 1;\n}\n\nfunction getChildListObserver(callback: () => void) {\n  const observer = new MutationObserver((mutationsList) => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === 'childList') {\n        callback();\n        return;\n      }\n    }\n  });\n\n  return observer;\n}\n", "// Not a real member because it shouldn't be accessible, but the super class\n// calls `set` which needs to read the instanciation state, so it can't be a\n// private member.\nconst __instanciated = new WeakMap<OrderedDict<any, any>, boolean>();\nexport class OrderedDict<K, V> extends Map<K, V> {\n  #keys: K[];\n\n  constructor(iterable?: Iterable<readonly [K, V]> | null | undefined);\n  constructor(entries?: readonly (readonly [K, V])[] | null) {\n    super(entries);\n    this.#keys = [...super.keys()];\n    __instanciated.set(this, true);\n  }\n\n  set(key: K, value: V) {\n    if (__instanciated.get(this)) {\n      if (this.has(key)) {\n        this.#keys[this.#keys.indexOf(key)] = key;\n      } else {\n        this.#keys.push(key);\n      }\n    }\n    super.set(key, value);\n    return this;\n  }\n\n  insert(index: number, key: K, value: V) {\n    const has = this.has(key);\n    const length = this.#keys.length;\n    const relativeIndex = toSafeInteger(index);\n    let actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    const safeIndex = actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n\n    if (safeIndex === this.size || (has && safeIndex === this.size - 1) || safeIndex === -1) {\n      this.set(key, value);\n      return this;\n    }\n\n    const size = this.size + (has ? 0 : 1);\n\n    // If you insert at, say, -2, without this bit you'd replace the\n    // second-to-last item and push the rest up one, which means the new item is\n    // 3rd to last. This isn't very intuitive; inserting at -2 is more like\n    // saying \"make this item the second to last\".\n    if (relativeIndex < 0) {\n      actualIndex++;\n    }\n\n    const keys = [...this.#keys];\n    let nextValue: V | undefined;\n    let shouldSkip = false;\n    for (let i = actualIndex; i < size; i++) {\n      if (actualIndex === i) {\n        let nextKey = keys[i]!;\n        if (keys[i] === key) {\n          nextKey = keys[i + 1]!;\n        }\n        if (has) {\n          // delete first to ensure that the item is moved to the end\n          this.delete(key);\n        }\n        nextValue = this.get(nextKey);\n        this.set(key, value);\n      } else {\n        if (!shouldSkip && keys[i - 1] === key) {\n          shouldSkip = true;\n        }\n        const currentKey = keys[shouldSkip ? i : i - 1]!;\n        const currentValue = nextValue!;\n        nextValue = this.get(currentKey);\n        this.delete(currentKey);\n        this.set(currentKey, currentValue);\n      }\n    }\n    return this;\n  }\n\n  with(index: number, key: K, value: V) {\n    const copy = new OrderedDict(this);\n    copy.insert(index, key, value);\n    return copy;\n  }\n\n  before(key: K) {\n    const index = this.#keys.indexOf(key) - 1;\n    if (index < 0) {\n      return undefined;\n    }\n    return this.entryAt(index);\n  }\n\n  /**\n   * Sets a new key-value pair at the position before the given key.\n   */\n  setBefore(key: K, newKey: K, value: V) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index, newKey, value);\n  }\n\n  after(key: K) {\n    let index = this.#keys.indexOf(key);\n    index = index === -1 || index === this.size - 1 ? -1 : index + 1;\n    if (index === -1) {\n      return undefined;\n    }\n    return this.entryAt(index);\n  }\n\n  /**\n   * Sets a new key-value pair at the position after the given key.\n   */\n  setAfter(key: K, newKey: K, value: V) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index + 1, newKey, value);\n  }\n\n  first() {\n    return this.entryAt(0);\n  }\n\n  last() {\n    return this.entryAt(-1);\n  }\n\n  clear() {\n    this.#keys = [];\n    return super.clear();\n  }\n\n  delete(key: K) {\n    const deleted = super.delete(key);\n    if (deleted) {\n      this.#keys.splice(this.#keys.indexOf(key), 1);\n    }\n    return deleted;\n  }\n\n  deleteAt(index: number) {\n    const key = this.keyAt(index);\n    if (key !== undefined) {\n      return this.delete(key);\n    }\n    return false;\n  }\n\n  at(index: number) {\n    const key = at(this.#keys, index);\n    if (key !== undefined) {\n      return this.get(key);\n    }\n  }\n\n  entryAt(index: number): [K, V] | undefined {\n    const key = at(this.#keys, index);\n    if (key !== undefined) {\n      return [key, this.get(key)!];\n    }\n  }\n\n  indexOf(key: K) {\n    return this.#keys.indexOf(key);\n  }\n\n  keyAt(index: number) {\n    return at(this.#keys, index);\n  }\n\n  from(key: K, offset: number) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return undefined;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.at(dest);\n  }\n\n  keyFrom(key: K, offset: number) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return undefined;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.keyAt(dest);\n  }\n\n  find(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => boolean,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return entry;\n      }\n      index++;\n    }\n    return undefined;\n  }\n\n  findIndex(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => boolean,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }\n\n  filter<KK extends K, VV extends V>(\n    predicate: (entry: [K, V], index: number, dict: OrderedDict<K, V>) => entry is [KK, VV],\n    thisArg?: any\n  ): OrderedDict<KK, VV>;\n\n  filter(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ): OrderedDict<K, V>;\n\n  filter(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ) {\n    const entries: Array<[K, V]> = [];\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        entries.push(entry);\n      }\n      index++;\n    }\n    return new OrderedDict(entries);\n  }\n\n  map<U>(\n    callbackfn: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => U,\n    thisArg?: any\n  ): OrderedDict<K, U> {\n    const entries: [K, U][] = [];\n    let index = 0;\n    for (const entry of this) {\n      entries.push([entry[0], Reflect.apply(callbackfn, thisArg, [entry, index, this])]);\n      index++;\n    }\n    return new OrderedDict(entries);\n  }\n\n  reduce(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V]\n  ): [K, V];\n  reduce(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V],\n    initialValue: [K, V]\n  ): [K, V];\n  reduce<U>(\n    callbackfn: (\n      previousValue: U,\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => U,\n    initialValue: U\n  ): U;\n\n  reduce<U>(\n    ...args: [\n      (\n        previousValue: U,\n        currentEntry: [K, V],\n        currentIndex: number,\n        dictionary: OrderedDict<K, V>\n      ) => U,\n      U?,\n    ]\n  ) {\n    const [callbackfn, initialValue] = args;\n    let index = 0;\n    let accumulator = initialValue ?? this.at(0)!;\n    for (const entry of this) {\n      if (index === 0 && args.length === 1) {\n        accumulator = entry as any;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n      index++;\n    }\n    return accumulator;\n  }\n\n  reduceRight(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V]\n  ): [K, V];\n  reduceRight(\n    callbackfn: (\n      previousValue: [K, V],\n      currentEntry: [K, V],\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => [K, V],\n    initialValue: [K, V]\n  ): [K, V];\n  reduceRight<U>(\n    callbackfn: (\n      previousValue: [K, V],\n      currentValue: U,\n      currentIndex: number,\n      dictionary: OrderedDict<K, V>\n    ) => U,\n    initialValue: U\n  ): U;\n\n  reduceRight<U>(\n    ...args: [\n      (\n        previousValue: U,\n        currentEntry: [K, V],\n        currentIndex: number,\n        dictionary: OrderedDict<K, V>\n      ) => U,\n      U?,\n    ]\n  ) {\n    const [callbackfn, initialValue] = args;\n    let accumulator = initialValue ?? this.at(-1)!;\n    for (let index = this.size - 1; index >= 0; index--) {\n      const entry = this.at(index)!;\n      if (index === this.size - 1 && args.length === 1) {\n        accumulator = entry as any;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n    }\n    return accumulator;\n  }\n\n  toSorted(compareFn?: (a: [K, V], b: [K, V]) => number): OrderedDict<K, V> {\n    const entries = [...this.entries()].sort(compareFn);\n    return new OrderedDict(entries);\n  }\n\n  toReversed(): OrderedDict<K, V> {\n    const reversed = new OrderedDict<K, V>();\n    for (let index = this.size - 1; index >= 0; index--) {\n      const key = this.keyAt(index)!;\n      const element = this.get(key)!;\n      reversed.set(key, element);\n    }\n    return reversed;\n  }\n\n  toSpliced(start: number, deleteCount?: number): OrderedDict<K, V>;\n  toSpliced(start: number, deleteCount: number, ...items: [K, V][]): OrderedDict<K, V>;\n\n  toSpliced(...args: [start: number, deleteCount: number, ...items: [K, V][]]) {\n    const entries = [...this.entries()];\n    entries.splice(...args);\n    return new OrderedDict(entries);\n  }\n\n  slice(start?: number, end?: number) {\n    const result = new OrderedDict<K, V>();\n    let stop = this.size - 1;\n\n    if (start === undefined) {\n      return result;\n    }\n\n    if (start < 0) {\n      start = start + this.size;\n    }\n\n    if (end !== undefined && end > 0) {\n      stop = end - 1;\n    }\n\n    for (let index = start; index <= stop; index++) {\n      const key = this.keyAt(index)!;\n      const element = this.get(key)!;\n      result.set(key, element);\n    }\n    return result;\n  }\n\n  every(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (!Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return false;\n      }\n      index++;\n    }\n    return true;\n  }\n\n  some(\n    predicate: (entry: [K, V], index: number, dictionary: OrderedDict<K, V>) => unknown,\n    thisArg?: any\n  ) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return true;\n      }\n      index++;\n    }\n    return false;\n  }\n}\n\nexport type KeyOf<D extends OrderedDict<any, any>> =\n  D extends OrderedDict<infer K, any> ? K : never;\nexport type ValueOf<D extends OrderedDict<any, any>> =\n  D extends OrderedDict<any, infer V> ? V : never;\nexport type EntryOf<D extends OrderedDict<any, any>> = [KeyOf<D>, ValueOf<D>];\nexport type KeyFrom<E extends EntryOf<any>> = E[0];\nexport type ValueFrom<E extends EntryOf<any>> = E[1];\n\nfunction at<T>(array: ArrayLike<T>, index: number): T | undefined {\n  if ('at' in Array.prototype) {\n    return Array.prototype.at.call(array, index);\n  }\n  const actualIndex = toSafeIndex(array, index);\n  return actualIndex === -1 ? undefined : array[actualIndex];\n}\n\nfunction toSafeIndex(array: ArrayLike<any>, index: number) {\n  const length = array.length;\n  const relativeIndex = toSafeInteger(index);\n  const actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n  return actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n}\n\nfunction toSafeInteger(number: number) {\n  // eslint-disable-next-line no-self-compare\n  return number !== number || number === 0 ? 0 : Math.trunc(number);\n}\n", "import * as React from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = React.useRef({ value, previous: value });\n\n  // We compare values before making an update to ensure that\n  // a change has been made. This ensures the previous value is\n  // persisted correctly between renders.\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\n\nexport { usePrevious };\n", "\nimport React, { useState } from 'react'\nimport { \n  File, \n  FileText, \n  FileImage, \n  FileVideo, \n  FileArchive,\n  Download,\n  Trash2,\n  Eye,\n  AlertTriangle\n} from 'lucide-react'\nimport { Button } from '../ui/button'\nimport { Card } from '../ui/card'\nimport { Badge } from '../ui/badge'\nimport { cn } from '../../lib/utils'\nimport { trpc } from '../../lib/trpc'\nimport { toast } from 'sonner'\n\ninterface Attachment {\n  id: string\n  filename: string\n  size: number\n  mimeType: string\n  uploadedAt: string | Date\n  compressed?: boolean\n  downloadUrl: string\n  thumbnailUrl?: string | null\n}\n\ninterface AttachmentListProps {\n  attachments: Attachment[]\n  canDelete?: boolean\n  onRefresh?: () => void\n  className?: string\n  compact?: boolean\n}\n\nconst getFileIcon = (mimeType: string | null | undefined) => {\n  if (!mimeType || typeof mimeType !== 'string') return File\n  if (mimeType.startsWith('image/')) return FileImage\n  if (mimeType.startsWith('video/')) return FileVideo\n  if (mimeType.includes('pdf') || mimeType.includes('document') || mimeType.includes('text')) return FileText\n  if (mimeType.includes('zip') || mimeType.includes('rar') || mimeType.includes('7z')) return FileArchive\n  return File\n}\n\nconst getFileTypeColor = (mimeType: string | null | undefined) => {\n  if (!mimeType || typeof mimeType !== 'string') return 'bg-gray-100 text-gray-700'\n  if (mimeType.startsWith('image/')) return 'bg-green-100 text-green-700'\n  if (mimeType.startsWith('video/')) return 'bg-purple-100 text-purple-700'\n  if (mimeType.startsWith('audio/')) return 'bg-pink-100 text-pink-700'\n  if (mimeType.includes('pdf')) return 'bg-red-100 text-red-700'\n  if (mimeType.includes('document') || mimeType.includes('text')) return 'bg-blue-100 text-blue-700'\n  if (mimeType.includes('zip') || mimeType.includes('rar')) return 'bg-orange-100 text-orange-700'\n  return 'bg-gray-100 text-gray-700'\n}\n\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i]\n}\n\nconst formatDate = (date: string | Date): string => {\n  const d = new Date(date)\n  const now = new Date()\n  const diffTime = Math.abs(now.getTime() - d.getTime())\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n  \n  if (diffDays === 1) return 'Today'\n  if (diffDays === 2) return 'Yesterday'\n  if (diffDays <= 7) return `${diffDays} days ago`\n  \n  return d.toLocaleDateString()\n}\n\nconst ThumbnailDisplay: React.FC<{\n  attachment: Attachment\n  className?: string\n}> = ({ attachment, className }) => {\n  const [imageError, setImageError] = useState(false)\n\n  if (!attachment.thumbnailUrl || imageError) {\n    const FileIcon = getFileIcon(attachment.mimeType)\n    const typeColor = getFileTypeColor(attachment.mimeType)\n    return (\n      <div className={cn('flex items-center justify-center rounded-lg p-2', typeColor, className)}>\n        <FileIcon className=\"h-8 w-8\" />\n      </div>\n    )\n  }\n\n  return (\n    <img\n      src={attachment.thumbnailUrl}\n      alt={attachment.filename}\n      className={cn('rounded-lg object-cover', className)}\n      onError={() => setImageError(true)}\n      onLoad={() => console.log(`\u2705 Thumbnail loaded: ${attachment.thumbnailUrl}`)}\n    />\n  )\n}\n\nexport const AttachmentListSimple: React.FC<AttachmentListProps> = ({\n  attachments,\n  canDelete = false,\n  onRefresh,\n  className,\n  compact = false\n}) => {\n  const [deleting, setDeleting] = useState<string | null>(null)\n\n  const deleteAttachmentMutation = trpc.upload.deleteAttachment.useMutation({\n    onSuccess: () => {\n      toast.success('Attachment deleted successfully')\n      setDeleting(null)\n      onRefresh?.()\n    },\n    onError: (error) => {\n      toast.error(`Failed to delete: ${error.message}`)\n      setDeleting(null)\n    }\n  })\n\n  if (attachments.length === 0) {\n    return null\n  }\n\n  const handleDownload = (attachment: Attachment) => {\n    try {\n      const link = document.createElement('a')\n      link.href = attachment.downloadUrl\n      link.download = attachment.filename\n      link.target = '_blank'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      toast.success('Download started')\n    } catch (error) {\n      toast.error('Download failed')\n    }\n  }\n\n  const handlePreview = (attachment: Attachment) => {\n    if (attachment.mimeType.startsWith('image/')) {\n      window.open(attachment.downloadUrl, '_blank', 'noopener,noreferrer')\n    } else if (attachment.mimeType === 'application/pdf') {\n      window.open(attachment.downloadUrl, '_blank', 'noopener,noreferrer')\n    } else {\n      toast.info('Preview not available for this file type')\n    }\n  }\n\n  const handleDelete = (attachment: Attachment) => {\n    if (deleting) return\n    setDeleting(attachment.id)\n    deleteAttachmentMutation.mutate({ attachmentId: attachment.id })\n  }\n\n  if (compact) {\n    return (\n      <div className={cn('flex flex-wrap gap-2', className)}>\n        {attachments.map((attachment) => {\n          const isDeleting = deleting === attachment.id\n          \n          return (\n            <div\n              key={attachment.id}\n              className={cn(\n                'flex items-center gap-2 px-3 py-2 bg-gray-50 rounded-lg text-sm',\n                isDeleting && 'opacity-50'\n              )}\n            >\n              <ThumbnailDisplay\n                attachment={attachment}\n                className=\"h-8 w-8\"\n              />\n              \n              <span className=\"font-medium truncate max-w-[150px]\">\n                {attachment.filename}\n              </span>\n              \n              <span className=\"text-gray-500\">\n                {formatFileSize(attachment.size)}\n              </span>\n              \n              {attachment.compressed && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  Compressed\n                </Badge>\n              )}\n              \n              <div className=\"flex items-center gap-1\">\n                {/* Preview button for images and PDFs */}\n                {(attachment.mimeType.startsWith('image/') || attachment.mimeType === 'application/pdf') && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-6 w-6 p-0\"\n                    onClick={() => handlePreview(attachment)}\n                    title=\"Preview\"\n                    disabled={isDeleting}\n                  >\n                    <Eye className=\"h-3 w-3\" />\n                  </Button>\n                )}\n                \n                {/* Download button */}\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"h-6 w-6 p-0\"\n                  onClick={() => handleDownload(attachment)}\n                  title=\"Download\"\n                  disabled={isDeleting}\n                >\n                  <Download className=\"h-3 w-3\" />\n                </Button>\n                \n                {/* Delete button */}\n                {canDelete && (\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-6 w-6 p-0 text-red-500 hover:text-red-700 hover:bg-red-50\"\n                    onClick={() => handleDelete(attachment)}\n                    title=\"Delete\"\n                    disabled={isDeleting}\n                  >\n                    <Trash2 className=\"h-3 w-3\" />\n                  </Button>\n                )}\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return (\n    <div className={cn('space-y-3', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-sm font-medium text-gray-900\">\n          Attachments ({attachments.length})\n        </h4>\n      </div>\n      \n      <div className=\"space-y-2\">\n        {attachments.map((attachment) => {\n          const isDeleting = deleting === attachment.id\n          \n          return (\n            <Card key={attachment.id} className={cn('p-4', isDeleting && 'opacity-50')}>\n              <div className=\"flex items-start gap-3\">\n                <ThumbnailDisplay\n                  attachment={attachment}\n                  className=\"w-16 h-16 flex-shrink-0\"\n                />\n                \n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"min-w-0 flex-1\">\n                      <p className=\"text-sm font-medium text-gray-900 truncate\">\n                        {attachment.filename}\n                        <span className=\"text-xs text-gray-500 font-normal ml-2\">\n                          \u2022 {formatFileSize(attachment.size)} \u2022 {formatDate(attachment.uploadedAt)}\n                          {attachment.compressed && (\n                            <>\n                              {' '}\u2022 <Badge variant=\"secondary\" className=\"text-xs inline\">Compressed</Badge>\n                            </>\n                          )}\n                        </span>\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-1 ml-2\">\n                      {/* Preview button for images and PDFs */}\n                      {(attachment.mimeType.startsWith('image/') || attachment.mimeType === 'application/pdf') && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-8 w-8 p-0\"\n                          onClick={() => handlePreview(attachment)}\n                          title=\"Preview\"\n                          disabled={isDeleting}\n                        >\n                          <Eye className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                      \n                      {/* Download button */}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"h-8 w-8 p-0\"\n                        onClick={() => handleDownload(attachment)}\n                        title=\"Download\"\n                        disabled={isDeleting}\n                      >\n                        <Download className=\"h-4 w-4\" />\n                      </Button>\n                      \n                      {/* Delete button */}\n                      {canDelete && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-8 w-8 p-0 text-red-500 hover:text-red-700 hover:bg-red-50\"\n                          onClick={() => handleDelete(attachment)}\n                          title=\"Delete\"\n                          disabled={isDeleting}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default AttachmentListSimple"],
  "mappings": "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",
  "names": ["import_react", "useCombinedRefs", "refs", "useMemo", "node", "forEach", "ref", "canUseDOM", "window", "document", "createElement", "isWindow", "element", "elementString", "Object", "prototype", "toString", "call", "isNode", "getWindow", "target", "ownerDocument", "defaultView", "isDocument", "Document", "isHTMLElement", "HTMLElement", "isSVGElement", "SVGElement", "getOwnerDocument", "useIsomorphicLayoutEffect", "useLayoutEffect", "useEffect", "useEvent", "handler", "handlerRef", "useRef", "current", "useCallback", "args", "useInterval", "intervalRef", "set", "listener", "duration", "setInterval", "clear", "clearInterval", "useLatestValue", "value", "dependencies", "valueRef", "useLazyMemo", "callback", "newValue", "useNodeRef", "onChange", "onChangeHandler", "setNodeRef", "usePrevious", "ids", "useUniqueId", "prefix", "id", "createAdjustmentFn", "modifier", "object", "adjustments", "reduce", "accumulator", "adjustment", "entries", "key", "valueAdjustment", "add", "subtract", "hasViewportRelativeCoordinates", "event", "isKeyboardEvent", "KeyboardEvent", "isTouchEvent", "TouchEvent", "getEventCoordinates", "touches", "length", "clientX", "x", "clientY", "y", "changedTouches", "CSS", "freeze", "Translate", "transform", "Math", "round", "Scale", "scaleX", "scaleY", "Transform", "join", "Transition", "property", "easing", "SELECTOR", "findFirstFocusableNode", "matches", "querySelector", "hiddenStyles", "display", "HiddenText", "id", "value", "React", "style", "LiveRegion", "announcement", "ariaLiveType", "visuallyHidden", "position", "top", "left", "width", "height", "margin", "border", "padding", "overflow", "clip", "clipPath", "whiteSpace", "role", "useAnnouncement", "setAnnouncement", "useState", "announce", "useCallback", "DndMonitorContext", "createContext", "useDndMonitor", "listener", "registerListener", "useContext", "useEffect", "Error", "unsubscribe", "useDndMonitorProvider", "listeners", "useState", "Set", "useCallback", "add", "delete", "dispatch", "type", "event", "forEach", "defaultScreenReaderInstructions", "draggable", "defaultAnnouncements", "onDragStart", "active", "id", "onDragOver", "over", "onDragEnd", "onDragCancel", "Accessibility", "announcements", "container", "hiddenTextDescribedById", "screenReaderInstructions", "announce", "announcement", "useAnnouncement", "liveRegionId", "useUniqueId", "mounted", "setMounted", "useMemo", "onDragMove", "markup", "React", "HiddenText", "value", "LiveRegion", "createPortal", "Action", "noop", "useSensor", "sensor", "options", "useSensors", "sensors", "filter", "defaultCoordinates", "Object", "freeze", "x", "y", "distanceBetween", "p1", "p2", "Math", "sqrt", "pow", "getRelativeTransformOrigin", "rect", "eventCoordinates", "getEventCoordinates", "transformOrigin", "left", "width", "top", "height", "sortCollisionsAsc", "data", "a", "b", "sortCollisionsDesc", "cornersOfRectangle", "getFirstCollision", "collisions", "property", "length", "firstCollision", "closestCorners", "collisionRect", "droppableRects", "droppableContainers", "corners", "cornersOfRectangle", "collisions", "droppableContainer", "id", "rect", "get", "rectCorners", "distances", "reduce", "accumulator", "corner", "index", "distanceBetween", "effectiveDistance", "Number", "toFixed", "push", "data", "value", "sort", "sortCollisionsAsc", "getIntersectionRatio", "entry", "target", "top", "Math", "max", "left", "right", "min", "width", "bottom", "height", "targetArea", "entryArea", "intersectionArea", "intersectionRatio", "rectIntersection", "sortCollisionsDesc", "adjustScale", "transform", "rect1", "rect2", "scaleX", "width", "scaleY", "height", "getRectDelta", "x", "left", "y", "top", "defaultCoordinates", "createRectAdjustmentFn", "modifier", "adjustClientRect", "rect", "adjustments", "reduce", "acc", "adjustment", "bottom", "right", "getAdjustedRect", "parseTransform", "startsWith", "transformArray", "slice", "split", "inverseTransform", "transformOrigin", "parsedTransform", "translateX", "translateY", "parseFloat", "indexOf", "w", "h", "defaultOptions", "ignoreTransform", "getClientRect", "element", "options", "getBoundingClientRect", "getWindow", "getComputedStyle", "getTransformAgnosticClientRect", "getWindowClientRect", "innerWidth", "innerHeight", "isFixed", "node", "computedStyle", "position", "isScrollable", "overflowRegex", "properties", "some", "property", "value", "test", "getScrollableAncestors", "limit", "scrollParents", "findScrollableAncestors", "length", "isDocument", "scrollingElement", "includes", "push", "isHTMLElement", "isSVGElement", "parentNode", "getFirstScrollableAncestor", "firstScrollableAncestor", "getScrollableElement", "canUseDOM", "isWindow", "isNode", "getOwnerDocument", "window", "getScrollXCoordinate", "scrollX", "scrollLeft", "getScrollYCoordinate", "scrollY", "scrollTop", "getScrollCoordinates", "Direction", "isDocumentScrollingElement", "document", "getScrollPosition", "scrollingContainer", "minScroll", "dimensions", "clientHeight", "clientWidth", "maxScroll", "scrollWidth", "scrollHeight", "isTop", "isLeft", "isBottom", "isRight", "defaultThreshold", "getScrollDirectionAndSpeed", "scrollContainer", "scrollContainerRect", "acceleration", "thresholdPercentage", "direction", "speed", "threshold", "Backward", "Math", "abs", "Forward", "getScrollElementRect", "getScrollOffsets", "scrollableAncestors", "add", "getScrollXOffset", "getScrollYOffset", "scrollIntoViewIfNeeded", "measure", "scrollIntoView", "block", "inline", "Rect", "constructor", "scrollOffsets", "axis", "keys", "getScrollOffset", "key", "Object", "defineProperty", "get", "currentOffsets", "scrollOffsetsDeltla", "enumerable", "Listeners", "target", "listeners", "removeAll", "forEach", "listener", "removeEventListener", "eventName", "handler", "addEventListener", "getEventListenerTarget", "EventTarget", "hasExceededDistance", "delta", "measurement", "dx", "dy", "sqrt", "EventName", "preventDefault", "event", "stopPropagation", "KeyboardCode", "defaultKeyboardCodes", "start", "Space", "Enter", "cancel", "Esc", "end", "Tab", "defaultKeyboardCoordinateGetter", "currentCoordinates", "code", "Right", "Left", "Down", "Up", "undefined", "KeyboardSensor", "props", "autoScrollEnabled", "referenceCoordinates", "windowListeners", "handleKeyDown", "bind", "handleCancel", "attach", "handleStart", "Resize", "VisibilityChange", "setTimeout", "Keydown", "activeNode", "onStart", "current", "isKeyboardEvent", "active", "context", "keyboardCodes", "coordinateGetter", "scrollBehavior", "handleEnd", "collisionRect", "newCoordinates", "coordinatesDelta", "getCoordinatesDelta", "scrollDelta", "scrollElementRect", "clampedCoordinates", "min", "max", "canScrollX", "canScrollY", "newScrollCoordinates", "canScrollToNewCoordinates", "scrollTo", "behavior", "scrollBy", "handleMove", "getAdjustedCoordinates", "coordinates", "onMove", "onEnd", "detach", "onCancel", "activators", "onActivation", "nativeEvent", "activator", "activatorNode", "isDistanceConstraint", "constraint", "Boolean", "isDelayConstraint", "AbstractPointerSensor", "events", "listenerTarget", "activated", "initialCoordinates", "timeoutId", "documentListeners", "getEventCoordinates", "handleKeydown", "removeTextSelection", "activationConstraint", "bypassActivationConstraint", "move", "name", "passive", "DragStart", "ContextMenu", "delay", "handlePending", "clearTimeout", "offset", "onPending", "Click", "capture", "SelectionChange", "tolerance", "distance", "cancelable", "onAbort", "getSelection", "removeAllRanges", "PointerSensor", "isPrimary", "button", "MouseButton", "MouseSensor", "RightClick", "TouchSensor", "setup", "noop", "teardown", "touches", "AutoScrollActivator", "TraversalOrder", "useAutoScroller", "Pointer", "canScroll", "draggingRect", "enabled", "interval", "order", "TreeOrder", "pointerCoordinates", "scrollableAncestorRects", "scrollIntent", "useScrollIntent", "disabled", "setAutoScrollInterval", "clearAutoScrollInterval", "useInterval", "scrollSpeed", "useRef", "scrollDirection", "useMemo", "DraggableRect", "scrollContainerRef", "autoScroll", "useCallback", "sortedScrollableAncestors", "reverse", "useEffect", "index", "JSON", "stringify", "defaultScrollIntent", "previousDelta", "usePrevious", "useLazyMemo", "previousIntent", "sign", "useCachedNode", "draggableNodes", "id", "draggableNode", "cachedNode", "useCombineActivators", "sensors", "getSyntheticHandler", "accumulator", "sensor", "Sensor", "sensorActivators", "map", "MeasuringStrategy", "MeasuringFrequency", "defaultValue", "Map", "useDroppableMeasuring", "containers", "dragging", "dependencies", "config", "queue", "setQueue", "useState", "frequency", "strategy", "containersRef", "isDisabled", "disabledRef", "useLatestValue", "measureDroppableContainers", "ids", "concat", "filter", "droppableRects", "previousValue", "container", "set", "measuringScheduled", "Always", "BeforeDragging", "useInitialValue", "computeFn", "useInitialRect", "useMutationObserver", "callback", "handleMutations", "useEvent", "mutationObserver", "MutationObserver", "disconnect", "useResizeObserver", "handleResize", "resizeObserver", "ResizeObserver", "defaultMeasure", "useRect", "fallbackRect", "setRect", "measureRect", "currentRect", "isConnected", "newRect", "records", "record", "type", "HTMLElement", "contains", "useIsomorphicLayoutEffect", "observe", "body", "childList", "subtree", "useRectDelta", "initialRect", "useScrollableAncestors", "previousNode", "ancestors", "useScrollOffsets", "elements", "scrollCoordinates", "setScrollCoordinates", "prevElements", "handleScroll", "previousElements", "cleanup", "entries", "scrollableElement", "entry", "Array", "from", "values", "useScrollOffsetsDelta", "initialScrollOffsets", "hasScrollOffsets", "subtract", "useSensorSetup", "teardownFns", "useSyntheticListeners", "useWindowRect", "useRects", "firstElement", "windowRect", "rects", "setRects", "measureRects", "getMeasurableNode", "children", "firstChild", "useDragOverlayMeasuring", "handleNodeChange", "nodeRef", "setRef", "useNodeRef", "defaultSensors", "defaultData", "defaultMeasuringConfiguration", "draggable", "droppable", "WhileDragging", "Optimized", "dragOverlay", "DroppableContainersMap", "toArray", "getEnabled", "getNodeFor", "defaultPublicContext", "activatorEvent", "activeNodeRect", "collisions", "containerNodeRect", "droppableContainers", "over", "measuringConfiguration", "defaultInternalContext", "ariaDescribedById", "dispatch", "InternalContext", "createContext", "PublicContext", "getInitialState", "nodes", "translate", "reducer", "state", "action", "Action", "DragMove", "DragEnd", "DragCancel", "RegisterDroppable", "SetDroppableDisabled", "UnregisterDroppable", "delete", "RestoreFocus", "useContext", "previousActivatorEvent", "previousActiveId", "activeElement", "requestAnimationFrame", "focusableNode", "findFirstFocusableNode", "focus", "applyModifiers", "modifiers", "args", "useMeasuringConfiguration", "useLayoutShiftScrollCompensation", "initialized", "rectDelta", "ActiveDraggableContext", "Status", "DndContext", "memo", "accessibility", "collisionDetection", "rectIntersection", "measuring", "store", "useReducer", "dispatchMonitorEvent", "registerMonitorListener", "useDndMonitorProvider", "status", "setStatus", "Uninitialized", "isInitialized", "Initialized", "activeId", "activeRects", "initial", "translated", "data", "activeRef", "activeSensor", "setActiveSensor", "setActivatorEvent", "latestProps", "draggableDescribedById", "useUniqueId", "enabledDroppableContainers", "activationCoordinates", "autoScrollOptions", "getAutoScrollerOptions", "initialActiveNodeRect", "layoutShiftCompensation", "parentElement", "sensorContext", "draggingNode", "draggingNodeRect", "scrollAdjustedTranslate", "overNode", "usesDragOverlay", "nodeRectDelta", "modifiedTranslate", "overlayNodeRect", "scrollAdjustment", "activeNodeScrollDelta", "overId", "getFirstCollision", "setOver", "appliedTranslate", "activeSensorRef", "instantiateSensor", "sensorInstance", "onDragAbort", "onDragPending", "onDragStart", "unstable_batchedUpdates", "Initializing", "createHandler", "cancelDrop", "shouldCancel", "Promise", "resolve", "bindActivatorToSensorInstantiator", "activeDraggableNode", "dndKit", "defaultPrevented", "activationContext", "shouldActivate", "capturedBy", "onDragMove", "onDragOver", "overContainer", "publicContext", "internalContext", "React", "DndMonitorContext", "Provider", "restoreFocus", "Accessibility", "hiddenTextDescribedById", "activeSensorDisablesAutoscroll", "autoScrollGloballyDisabled", "NullContext", "defaultRole", "ID_PREFIX", "useDraggable", "attributes", "role", "roleDescription", "tabIndex", "isDragging", "setNodeRef", "setActivatorNodeRef", "dataRef", "memoizedAttributes", "useDndContext", "defaultResizeObserverConfig", "timeout", "useDroppable", "resizeObserverConfig", "previous", "resizeObserverConnected", "callbackId", "resizeObserverDisabled", "updateMeasurementsFor", "resizeObserverTimeout", "isArray", "newElement", "previousElement", "unobserve", "isOver", "AnimationManager", "animation", "clonedChildren", "setClonedChildren", "setElement", "previousChildren", "then", "cloneElement", "ref", "defaultTransform", "NullifiedContextProvider", "baseStyles", "touchAction", "defaultTransition", "isKeyboardActivator", "PositionedOverlay", "forwardRef", "as", "className", "style", "transition", "scaleAdjustedTransform", "styles", "CSS", "Transform", "toString", "getRelativeTransformOrigin", "createElement", "defaultDropAnimationSideEffects", "originalStyles", "getPropertyValue", "setProperty", "classList", "remove", "defaultKeyframeResolver", "final", "defaultDropAnimationConfiguration", "duration", "easing", "keyframes", "sideEffects", "opacity", "useDropAnimation", "activeDraggable", "measurableNode", "createDefaultDropAnimation", "rest", "scale", "finalTransform", "animationKeyframes", "firstKeyframe", "lastKeyframe", "animate", "fill", "onfinish", "useKey", "DragOverlay", "dropAnimation", "dropAnimationConfig", "wrapperElement", "zIndex", "modifiedTransform", "arrayMove", "array", "from", "to", "newArray", "slice", "splice", "length", "getSortedRects", "items", "rects", "reduce", "accumulator", "id", "index", "rect", "get", "Array", "length", "isValidIndex", "itemsEqual", "a", "b", "i", "normalizeDisabled", "disabled", "draggable", "droppable", "defaultScale", "scaleX", "scaleY", "horizontalListSortingStrategy", "activeNodeRect", "fallbackActiveRect", "activeIndex", "overIndex", "itemGap", "getItemGap", "newIndexRect", "x", "left", "width", "y", "currentRect", "previousRect", "nextRect", "rectSortingStrategy", "newRects", "arrayMove", "oldRect", "newRect", "top", "height", "ID_PREFIX", "Context", "React", "createContext", "activeIndex", "containerId", "disableTransforms", "items", "overIndex", "useDragOverlay", "sortedRects", "strategy", "rectSortingStrategy", "disabled", "draggable", "droppable", "SortableContext", "children", "id", "userDefinedItems", "disabledProp", "active", "dragOverlay", "droppableRects", "over", "measureDroppableContainers", "useDndContext", "useUniqueId", "Boolean", "rect", "useMemo", "map", "item", "isDragging", "indexOf", "previousItemsRef", "useRef", "itemsHaveChanged", "itemsEqual", "current", "normalizeDisabled", "useIsomorphicLayoutEffect", "useEffect", "contextValue", "getSortedRects", "Provider", "value", "defaultNewIndexGetter", "arrayMove", "defaultAnimateLayoutChanges", "isSorting", "wasDragging", "index", "newIndex", "previousItems", "previousContainerId", "transition", "defaultTransition", "duration", "easing", "transitionProperty", "disabledTransition", "CSS", "Transition", "toString", "property", "defaultAttributes", "roleDescription", "useDerivedTransform", "node", "derivedTransform", "setDerivedtransform", "useState", "previousIndex", "initial", "getClientRect", "ignoreTransform", "delta", "x", "left", "y", "top", "scaleX", "width", "scaleY", "height", "useSortable", "animateLayoutChanges", "attributes", "userDefinedAttributes", "localDisabled", "data", "customData", "getNewIndex", "localStrategy", "resizeObserverConfig", "globalDisabled", "globalStrategy", "useContext", "normalizeLocalDisabled", "sortable", "itemsAfterCurrentSortable", "slice", "isOver", "setNodeRef", "setDroppableNodeRef", "useDroppable", "updateMeasurementsFor", "activatorEvent", "activeNodeRect", "setDraggableNodeRef", "listeners", "setActivatorNodeRef", "transform", "useDraggable", "useCombinedRefs", "displaceItem", "isValidIndex", "shouldDisplaceDragSource", "dragSourceDisplacement", "finalTransform", "rects", "activeId", "previous", "shouldAnimateLayoutChanges", "timeoutId", "setTimeout", "clearTimeout", "getTransition", "isKeyboardEvent", "undefined", "directions", "KeyboardCode", "Down", "Right", "Up", "Left", "import_jsx_runtime", "defaultOptions", "import_react", "React", "React", "React", "import_jsx_runtime", "handleFocusIn", "handleFocusOut", "handleMutations", "container", "React", "__assign", "React", "React", "import_react", "useCallbackRef", "React", "useIsomorphicLayoutEffect", "defaultValue", "useCallbackRef", "cbs", "React", "SideCar", "React", "React", "React", "Sheet", "isScrollable", "Style", "import_jsx_runtime", "Portal", "Content", "import_jsx_runtime", "Portal", "Content", "React", "React", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "createCollectionScope", "React", "useCollection", "React", "usePrevious", "import_jsx_runtime", "defaultValue", "TRIGGER_NAME", "PORTAL_NAME", "CONTENT_NAME", "Slot", "focusFirst", "handleScroll", "canScrollUp", "canScrollDown", "usePrevious", "key", "Root", "Trigger", "Portal", "Content", "import_jsx_runtime", "Select", "Root2", "SelectValue", "SelectTrigger", "Trigger", "SelectScrollUpButton", "SelectScrollDownButton", "SelectContent", "Portal", "Content2", "SelectLabel", "SelectItem", "SelectSeparator", "import_react", "import_jsx_runtime", "formatDate", "import_jsx_runtime", "getFileIcon", "Select", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "comment", "import_jsx_runtime", "activeTask", "toast"]
}
