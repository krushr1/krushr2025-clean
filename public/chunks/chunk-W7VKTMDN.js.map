{
  "version": 3,
  "sources": ["../../frontend/src/components/notes/NotesPanel.tsx", "../../frontend/src/hooks/use-mobile.tsx", "../../frontend/src/stores/ui-store.ts"],
  "sourcesContent": ["import React, { useState, useEffect, useRef } from 'react'\nimport { useOptimisticDelete } from '@/hooks/use-optimistic-delete'\nimport { Search, Plus, Trash2, Archive, Star, Palette, ArrowLeft, Edit3 } from 'lucide-react'\nimport { FloatingInput } from '../ui/floating-input'\nimport { trpc } from '../../lib/trpc'\nimport { toast } from 'sonner'\nimport { cn } from '../../lib/utils'\nimport { useIsMobile } from '../../hooks/use-mobile'\nimport { useWorkspaceContextStore } from '../../stores/workspace-context-store'\nimport { useUIStore } from '../../stores/ui-store'\n\ninterface NotesPanelProps {\n  workspaceId: string\n  className?: string\n}\n\ninterface Note {\n  id: string\n  title: string\n  content: string\n  color?: string | null\n  isArchived: boolean\n  isPinned: boolean\n  createdAt: string\n  updatedAt: string\n  folder?: {\n    id: string\n    name: string\n    color: string\n  } | null\n}\n\n// Note colors - standard pastel post-it colors\nconst NOTE_COLORS = [\n  { name: 'Yellow', value: '#fef3c7', bgValue: '#fffbeb', border: '#f59e0b' },\n  { name: 'Pink', value: '#fce7f3', bgValue: '#fdf2f8', border: '#ec4899' },\n  { name: 'Blue', value: '#dbeafe', bgValue: '#eff6ff', border: '#3b82f6' },\n  { name: 'Green', value: '#d1fae5', bgValue: '#f0fdf4', border: '#10b981' },\n  { name: 'Purple', value: '#e9d5ff', bgValue: '#faf5ff', border: '#8b5cf6' },\n  { name: 'Orange', value: '#fed7aa', bgValue: '#fff7ed', border: '#f97316' },\n  { name: 'Red', value: '#fecaca', bgValue: '#fef2f2', border: '#ef4444' },\n  { name: 'None', value: '#ffffff', bgValue: '#ffffff', border: '#e5e7eb' }\n]\n\n\n// Helper function to get note color\nconst getNoteColor = (note: Note) => {\n  // Use individual note color first, then folder color, then default to white\n  const noteColor = note.color || note.folder?.color || '#ffffff'\n  const colorConfig = NOTE_COLORS.find(c => c.value.toLowerCase() === noteColor.toLowerCase()) || NOTE_COLORS[7]\n  \n  return colorConfig\n}\n\n// Note Card Component\nfunction NoteCard({ note, isActive, onClick, isFirst, isLast, onArchiveToggle }: {\n  note: Note\n  isActive: boolean\n  onClick: () => void\n  isFirst?: boolean\n  isLast?: boolean\n  onArchiveToggle?: (noteId: string) => void\n}) {\n  const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr)\n    const now = new Date()\n    const diffTime = Math.abs(now.getTime() - date.getTime())\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n    \n    if (diffDays === 1) return 'Today'\n    if (diffDays === 2) return 'Yesterday'\n    if (diffDays <= 7) return `${diffDays - 1}d ago`\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })\n  }\n\n  const colorConfig = getNoteColor(note)\n\n  return (\n    <div\n      onClick={onClick}\n      className={cn(\n        \"border rounded-md p-1.5 cursor-pointer transition-all duration-200 mb-1\",\n        isActive\n          ? \"border border-krushr-primary shadow-md\"\n          : \"border border-gray-300 shadow-sm hover:shadow-md transition-shadow hover:border-krushr-primary/50\"\n      )}\n      style={{\n        backgroundColor: isActive ? 'rgba(20, 49, 151, 0.05)' : colorConfig.bgValue,\n        borderLeftColor: colorConfig.border,\n        borderLeftWidth: '3px',\n        borderLeftStyle: 'solid'\n      }}\n    >\n      <div className=\"flex items-center justify-between gap-1 mb-1\">\n        <h4 className={cn(\n          \"font-medium line-clamp-1 flex-1 min-w-0 font-brand text-sm\",\n          isActive ? \"text-krushr-primary\" : \"text-gray-900\"\n        )}>\n          {note.title || 'Untitled'}\n        </h4>\n        <div className=\"flex items-center gap-0.5 flex-shrink-0\">\n          <span className=\"text-xs text-gray-500 font-manrope\">{formatDate(note.updatedAt)}</span>\n          {note.isPinned && <Star className=\"w-2.5 h-2.5 text-amber-500 fill-current\" />}\n          {note.isArchived && <Archive className=\"w-2.5 h-2.5 text-krushr-gray-400\" />}\n        </div>\n      </div>\n      {note.content && (\n        <p className=\"text-xs text-gray-600 line-clamp-1 font-manrope\">\n          {note.content}\n        </p>\n      )}\n    </div>\n  )\n}\n\n// Search Bar Component\nfunction SearchBar({ value, onChange, onCreateNote, isCreating }: {\n  value: string\n  onChange: (value: string) => void\n  onCreateNote: () => void\n  isCreating: boolean\n}) {\n  return (\n    <div className=\"p-2 w-full\">\n      {/* Single input with inline search icon and create button */}\n      <div className=\"relative flex items-center bg-white border border-gray-300 rounded-lg shadow-sm hover:shadow-md transition-shadow focus-within:shadow-md focus-within:border-krushr-primary h-8\">\n        {/* Search icon */}\n        <div className=\"flex items-center pl-2.5\">\n          <Search className=\"w-3.5 h-3.5 text-gray-400\" />\n        </div>\n        \n        {/* Search input */}\n        <input\n          type=\"search\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          placeholder=\"Search notes...\"\n          className=\"flex-1 min-w-0 h-6 text-sm font-manrope bg-transparent border-0 outline-none px-2 placeholder:text-gray-400 focus:ring-0\"\n        />\n        \n        {/* Create button - inline */}\n        <div className=\"flex items-center pr-1\">\n          <button\n            onClick={onCreateNote}\n            disabled={isCreating}\n            className=\"bg-krushr-primary text-white w-6 h-6 rounded-md flex items-center justify-center hover:bg-krushr-primary/90 transition-all duration-200 disabled:opacity-50 flex-shrink-0\"\n            title=\"Create new note\"\n          >\n            {isCreating ? (\n              <div className=\"w-2 h-2 border border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <Plus className=\"w-3 h-3\" />\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// Editor Header Component\nfunction EditorHeader({ title, onTitleChange, onDelete, isSaving, isDeleting, note, onPin, onColorChange, onArchive, onExport, isSingleColumn, onBack }: {\n  title: string\n  onTitleChange: (title: string) => void\n  onDelete: () => void\n  isSaving: boolean\n  isDeleting: boolean\n  note?: Note\n  onPin: (noteId: string) => void\n  onColorChange: (noteId: string, color: string) => void\n  onArchive?: (noteId: string) => void\n  onExport?: () => void\n  isSingleColumn?: boolean\n  onBack?: () => void\n}) {\n  const [showColorPicker, setShowColorPicker] = useState(false)\n  return (\n    <div className=\"p-2 bg-white\">\n      {/* Title input with compact toolbar */}\n      <div className=\"flex items-center gap-1 mb-1\">\n        {/* Back button for mobile - integrated with title */}\n        {isSingleColumn && onBack && (\n          <button\n            onClick={onBack}\n            className=\"w-6 h-6 flex items-center justify-center text-krushr-gray-600 hover:text-krushr-primary transition-colors flex-shrink-0\"\n            type=\"button\"\n            title=\"Back to Notes\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n          </button>\n        )}\n        \n        <div className=\"flex-1 relative\">\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => onTitleChange(e.target.value)}\n            placeholder=\"Note title...\"\n            className=\"w-full h-6 font-medium text-gray-900 font-brand bg-transparent border-0 outline-none placeholder:text-gray-400 focus:bg-krushr-gray-50 rounded px-2 pr-14 transition-colors text-sm\"\n          />\n          {/* Compact status indicator in title input */}\n          <div className=\"absolute right-1 top-1/2 -translate-y-1/2 flex items-center gap-0.5 text-xs\">\n            {isSaving ? (\n              <>\n                <div className=\"w-1 h-1 bg-amber-500 rounded-full animate-pulse\" />\n                <span className=\"text-amber-600 font-medium font-manrope text-xs\">Save</span>\n              </>\n            ) : (\n              <div className=\"w-1 h-1 bg-green-500 rounded-full\" />\n            )}\n          </div>\n        </div>\n        \n        {/* Extra compact action buttons */}\n        <div className=\"flex items-center gap-0.5\">\n          {note && (\n            <>\n              <button\n                onClick={() => onPin(note.id)}\n                className={`w-5 h-5 flex items-center justify-center rounded transition-colors ${\n                  note.isPinned ? 'text-amber-500' : 'text-krushr-gray-400 hover:text-amber-500'\n                }`}\n                title={note.isPinned ? 'Unpin' : 'Pin'}\n              >\n                <Star className={`w-2.5 h-2.5 ${note.isPinned ? 'fill-current' : ''}`} />\n              </button>\n              \n              <button\n                onClick={() => onArchive?.(note.id)}\n                className={`w-5 h-5 flex items-center justify-center rounded transition-colors ${\n                  note.isArchived ? 'text-krushr-primary' : 'text-krushr-gray-400 hover:text-krushr-primary'\n                }`}\n                title={note.isArchived ? 'Unarchive' : 'Archive'}\n              >\n                <Archive className=\"w-2.5 h-2.5\" />\n              </button>\n              \n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowColorPicker(!showColorPicker)}\n                  className=\"w-5 h-5 flex items-center justify-center rounded transition-colors text-krushr-gray-400 hover:text-krushr-gray-600\"\n                  title=\"Color\"\n                >\n                  <Palette className=\"w-2.5 h-2.5\" />\n                </button>\n                {showColorPicker && (\n                  <>\n                    <div \n                      className=\"fixed inset-0 z-40\" \n                      onClick={() => setShowColorPicker(false)}\n                    />\n                    <div className=\"absolute top-full right-0 mt-0.5 bg-white border border-krushr-gray-200 rounded-lg shadow-xl p-1.5 z-50\">\n                      <div \n                        style={{ \n                          display: 'grid', \n                          gridTemplateColumns: 'repeat(4, 1fr)',\n                          gap: '3px'\n                        }}\n                      >\n                        {NOTE_COLORS.map((color) => (\n                          <button\n                            key={color.value}\n                            onClick={() => {\n                              onColorChange(note.id, color.value)\n                              setShowColorPicker(false)\n                            }}\n                            className={`w-5 h-5 rounded border hover:scale-110 transition-transform ${\n                              getNoteColor(note).value === color.value ? 'border-krushr-primary ring-2 ring-krushr-primary/30' : 'border-krushr-gray-300 hover:border-krushr-primary/50'\n                            }`}\n                            style={{ backgroundColor: color.bgValue }}\n                            title={color.name}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            </>\n          )}\n          \n          <button\n            onClick={onDelete}\n            disabled={isDeleting}\n            className=\"w-5 h-5 text-krushr-gray-400 hover:text-red-500 rounded flex items-center justify-center transition-colors disabled:opacity-50\"\n            title=\"Delete\"\n          >\n            {isDeleting ? (\n              <div className=\"w-2.5 h-2.5 border border-red-500 border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <Trash2 className=\"w-2.5 h-2.5\" />\n            )}\n          </button>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\n// Main Component\nconst NotesPanel = React.forwardRef<HTMLDivElement, NotesPanelProps>(\n  ({ workspaceId, className }, ref) => {\n  const [activeNoteId, setActiveNoteId] = useState<string | null>(null)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [noteTitle, setNoteTitle] = useState('')\n  const [noteContent, setNoteContent] = useState('')\n  const [saveTimer, setSaveTimer] = useState<NodeJS.Timeout | null>(null)\n  const [isSingleColumn, setIsSingleColumn] = useState(false)\n  const [showEditor, setShowEditor] = useState(false)\n  const [hiddenNoteIds, setHiddenNoteIds] = useState<Set<string>>(new Set())\n  const containerRef = useRef<HTMLDivElement>(null)\n  const isMobile = useIsMobile()\n  const { activeContextType, activeEntityId } = useWorkspaceContextStore()\n  const { shouldCreateNote, clearNoteCreation } = useUIStore()\n\n  // tRPC queries\n  const notesQuery = trpc.notes.list.useQuery({\n    workspaceId,\n    search: searchQuery || undefined,\n    taskId: activeContextType === 'task' ? activeEntityId : undefined,\n  })\n\n  const activeNoteQuery = trpc.notes.get.useQuery(\n    { id: activeNoteId! },\n    { enabled: !!activeNoteId }\n  )\n\n  // Mutations\n  const createNote = trpc.notes.create.useMutation({\n    onSuccess: (note) => {\n      setActiveNoteId(note.id)\n      setNoteTitle(note.title)\n      setNoteContent(note.content || '')\n      notesQuery.refetch()\n      toast.success('Note created')\n    }\n  })\n\n  const updateNote = trpc.notes.update.useMutation({\n    onSuccess: () => {\n      notesQuery.refetch()\n      activeNoteQuery.refetch()\n    }\n  })\n\n  const deleteNote = trpc.notes.delete.useMutation({\n    onSuccess: () => {\n      setActiveNoteId(null)\n      setNoteTitle('')\n      setNoteContent('')\n      notesQuery.refetch()\n      toast.success('Note deleted')\n    }\n  })\n\n  const togglePin = trpc.notes.togglePin.useMutation({\n    onSuccess: () => {\n      notesQuery.refetch()\n      activeNoteQuery.refetch()\n      toast.success('Note pin status updated')\n    },\n    onError: (error) => {\n      toast.error('Failed to update pin status')\n    }\n  })\n\n  const toggleArchive = trpc.notes.toggleArchive.useMutation({\n    onSuccess: () => {\n      notesQuery.refetch()\n      activeNoteQuery.refetch()\n      toast.success('Note archive status updated')\n    },\n    onError: (error) => {\n      toast.error('Failed to update archive status')\n    }\n  })\n\n  // Simple client-side export since backend doesn't have export endpoint\n  const handleExportNotes = () => {\n    try {\n      const notesToExport = filteredNotes.filter(note => !note.isArchived)\n      let exportContent = '# Notes Export\\\\n\\\\n'\n      \n      notesToExport.forEach(note => {\n        exportContent += `## ${note.title}\\\\n\\\\n`\n        exportContent += `${note.content || 'No content'}\\\\n\\\\n`\n        exportContent += `*Updated: ${new Date(note.updatedAt).toLocaleDateString()}*\\\\n\\\\n`\n        exportContent += '---\\\\n\\\\n'\n      })\n      \n      const blob = new Blob([exportContent], { type: 'text/markdown' })\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `notes-export-${new Date().toISOString().split('T')[0]}.md`\n      document.body.appendChild(a)\n      a.click()\n      document.body.removeChild(a)\n      URL.revokeObjectURL(url)\n      toast.success('Notes exported successfully')\n    } catch (error) {\n      toast.error('Failed to export notes')\n    }\n  }\n\n  // Note: Individual note colors not supported yet - would need backend changes\n  // For now, we'll show the color picker but explain the limitation\n  const updateNoteFolder = trpc.notes.update.useMutation({\n    onSuccess: () => {\n      notesQuery.refetch()\n      toast.success('Note folder updated')\n    },\n    onError: (error) => {\n      toast.error('Failed to update note folder')\n    }\n  })\n\n  // Load active note data\n  useEffect(() => {\n    if (activeNoteQuery.data) {\n      setNoteTitle(activeNoteQuery.data.title)\n      setNoteContent(activeNoteQuery.data.content || '')\n    }\n  }, [activeNoteQuery.data])\n  \n  // Watch for note creation trigger from command palette\n  useEffect(() => {\n    if (shouldCreateNote) {\n      handleCreateNote()\n      clearNoteCreation()\n    }\n  }, [shouldCreateNote])\n\n  // Responsive layout detection\n  useEffect(() => {\n    const checkSize = () => {\n      if (containerRef.current) {\n        const width = containerRef.current.offsetWidth\n        const shouldBeSingleColumn = width < 360 || isMobile\n        setIsSingleColumn(shouldBeSingleColumn)\n        \n        // Auto-show editor on mobile when note is selected\n        if (shouldBeSingleColumn && activeNoteId && !showEditor) {\n          setShowEditor(true)\n        }\n      }\n    }\n\n    checkSize()\n    const resizeObserver = new ResizeObserver(checkSize)\n    if (containerRef.current) {\n      resizeObserver.observe(containerRef.current)\n    }\n\n    return () => resizeObserver.disconnect()\n  }, [activeNoteId, isMobile, showEditor])\n\n  // Auto-save logic\n  useEffect(() => {\n    if (activeNoteId && (noteTitle || noteContent)) {\n      if (saveTimer) clearTimeout(saveTimer)\n      \n      const timer = setTimeout(() => {\n        updateNote.mutate({\n          id: activeNoteId,\n          title: noteTitle || 'Untitled',\n          content: noteContent\n        })\n      }, 1000)\n      \n      setSaveTimer(timer)\n    }\n    \n    return () => {\n      if (saveTimer) clearTimeout(saveTimer)\n    }\n  }, [noteTitle, noteContent, activeNoteId])\n\n  const handleCreateNote = () => {\n    createNote.mutate({\n      title: 'New Note',\n      content: '',\n      workspaceId,\n      tags: []\n    })\n  }\n\n  const { deleteItem } = useOptimisticDelete()\n\n  const handleDeleteNote = async () => {\n    if (!activeNoteId) return\n    \n    const noteToDelete = notesQuery.data?.notes?.find(n => n.id === activeNoteId)\n    if (!noteToDelete) return\n    \n    await deleteItem({\n      type: 'note',\n      item: noteToDelete,\n      itemName: noteToDelete.title || 'Untitled note',\n      deleteAction: async () => {\n        await deleteNote.mutateAsync({ id: activeNoteId })\n        // Remove from hidden list after successful deletion\n        setHiddenNoteIds(prev => {\n          const newSet = new Set(prev)\n          newSet.delete(activeNoteId)\n          return newSet\n        })\n      },\n      onOptimisticRemove: () => {\n        // Hide the note immediately\n        setHiddenNoteIds(prev => new Set(prev).add(activeNoteId))\n        // Clear active note\n        const remainingNotes = notesQuery.data?.notes?.filter(n => n.id !== activeNoteId && !hiddenNoteIds.has(n.id))\n        setActiveNoteId(remainingNotes?.[0]?.id || null)\n      },\n      onRestore: () => {\n        // Show the note again\n        setHiddenNoteIds(prev => {\n          const newSet = new Set(prev)\n          newSet.delete(noteToDelete.id)\n          return newSet\n        })\n        // Restore as active note\n        setActiveNoteId(noteToDelete.id)\n      }\n    })\n  }\n\n  const handleSelectNote = (note: Note) => {\n    setActiveNoteId(note.id)\n    // Auto-show editor in single column mode\n    if (isSingleColumn) {\n      setShowEditor(true)\n    }\n  }\n\n  const handleBackToList = () => {\n    setShowEditor(false)\n    // Clear active note selection when going back to list\n    setActiveNoteId(null)\n  }\n\n  const handleTogglePin = (noteId: string) => {\n    togglePin.mutate({ id: noteId })\n  }\n\n  const handleToggleArchive = (noteId: string) => {\n    toggleArchive.mutate({ id: noteId })\n  }\n\n  const handleColorChange = (noteId: string, color: string) => {\n    // Update note with individual color\n    updateNote.mutate({\n      id: noteId,\n      color: color\n    })\n    toast.success('Note color updated')\n  }\n\n  const filteredNotes = (notesQuery.data?.notes || []).filter(note => \n    !hiddenNoteIds.has(note.id) &&\n    (searchQuery ? \n      note.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      note.content?.toLowerCase().includes(searchQuery.toLowerCase())\n      : true)\n  )\n\n  return (\n    <div ref={containerRef} className={cn(\"flex h-full bg-krushr-gray-50\", className)}>\n      {/* Notes List */}\n      <div className={cn(\n        \"bg-white flex flex-col shadow-sm transition-all duration-300\",\n        isSingleColumn \n          ? (showEditor ? \"hidden\" : \"w-full\")\n          : \"w-80\"\n      )}>\n        {/* Search Bar */}\n        <SearchBar\n          value={searchQuery}\n          onChange={setSearchQuery}\n          onCreateNote={handleCreateNote}\n          isCreating={createNote.isPending}\n        />\n\n        {/* Notes List */}\n        <div className=\"flex-1 overflow-y-auto\">\n          {notesQuery.isLoading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-krushr-primary\"></div>\n            </div>\n          ) : filteredNotes.length === 0 ? (\n            <div className=\"p-6 text-center\">\n              <div className=\"w-10 h-10 bg-krushr-gray-100 rounded-full flex items-center justify-center mx-auto mb-2\">\n                <Search className=\"w-5 h-5 text-krushr-gray-400\" />\n              </div>\n              <p className=\"text-gray-900 font-medium font-brand\">No notes found</p>\n              <p className=\"text-gray-400 text-sm mt-1 font-manrope\">\n                {searchQuery ? 'Try different keywords' : 'Create your first note'}\n              </p>\n            </div>\n          ) : (\n            <div className=\"p-1.5\">\n              {filteredNotes.map((note, index) => (\n                <NoteCard\n                  key={note.id}\n                  note={note}\n                  isActive={activeNoteId === note.id}\n                  onClick={() => handleSelectNote(note)}\n                  isFirst={index === 0}\n                  isLast={index === filteredNotes.length - 1}\n                  onArchiveToggle={handleToggleArchive}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Editor */}\n      <div className={cn(\n        \"flex flex-col transition-all duration-300\",\n        isSingleColumn \n          ? (showEditor ? \"w-full\" : \"hidden\")\n          : \"flex-1\"\n      )}>\n        {activeNoteId ? (\n          <>\n            \n            {/* Editor Header */}\n            <EditorHeader\n              title={noteTitle}\n              onTitleChange={setNoteTitle}\n              onDelete={handleDeleteNote}\n              isSaving={updateNote.isPending}\n              isDeleting={deleteNote.isPending}\n              note={filteredNotes.find(n => n.id === activeNoteId)}\n              onPin={handleTogglePin}\n              onColorChange={handleColorChange}\n              onArchive={handleToggleArchive}\n              onExport={handleExportNotes}\n              isSingleColumn={isSingleColumn}\n              onBack={handleBackToList}\n            />\n\n            {/* Editor Content - Compact */}\n            <div className=\"flex-1 p-2\" style={{ backgroundColor: activeNoteId ? getNoteColor(filteredNotes.find(n => n.id === activeNoteId) || {} as Note).bgValue : '#ffffff' }}>\n              <textarea\n                value={noteContent}\n                onChange={(e) => setNoteContent(e.target.value)}\n                placeholder=\"Start writing your note...\"\n                className={cn(\n                  \"w-full h-full min-h-[300px] border-0 outline-none resize-none bg-transparent\",\n                  \"font-manrope text-sm text-gray-700 placeholder:text-gray-400\"\n                )}\n              />\n            </div>\n          </>\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center\" style={{ backgroundColor: '#ffffff' }}>\n            <div className=\"text-center max-w-md mx-auto p-6\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-krushr-primary/10 to-krushr-primary/20 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Edit3 className=\"w-8 h-8 text-krushr-primary\" />\n              </div>\n              <h3 className={cn(\n                \"font-medium text-gray-900 mb-2 font-manrope\",\n                isSingleColumn ? \"text-base\" : \"text-lg\"\n              )}>Select a note to edit</h3>\n              <p className={cn(\n                \"text-gray-500 leading-relaxed mb-4 font-manrope\",\n                isSingleColumn ? \"text-xs\" : \"text-sm\"\n              )}>\n                {isSingleColumn \n                  ? \"Tap a note to start editing\"\n                  : \"Choose a note from the sidebar to start editing, or create a new note to get started.\"\n                }\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n})\n\nNotesPanel.displayName = 'NotesPanel'\n\nexport default NotesPanel", "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n", "/**\n * UI State Store\n * Global UI state management for modals, panels, and other UI elements\n */\n\nimport { create } from 'zustand'\n\ninterface UIState {\n  // Task Creation Modal\n  showTaskCreationModal: boolean\n  taskCreationColumnId?: string\n  taskCreationKanbanId?: string\n  \n  // Command Palette\n  showCommandPalette: boolean\n  \n  // Layout Manager\n  showLayoutManager: boolean\n  layoutManagerMode?: 'save' | 'load'\n  \n  // Note Creation\n  shouldCreateNote: boolean\n  \n  // Focus Mode\n  focusMode: boolean\n  focusedPanelId?: string\n  \n  // Methods\n  openTaskCreationModal: (options?: { columnId?: string; kanbanId?: string }) => void\n  closeTaskCreationModal: () => void\n  toggleCommandPalette: () => void\n  setCommandPalette: (show: boolean) => void\n  openLayoutManager: (mode?: 'save' | 'load') => void\n  closeLayoutManager: () => void\n  triggerNoteCreation: () => void\n  clearNoteCreation: () => void\n  toggleFocusMode: (panelId?: string) => void\n  exitFocusMode: () => void\n}\n\nexport const useUIStore = create<UIState>((set) => ({\n  // Initial state\n  showTaskCreationModal: false,\n  taskCreationColumnId: undefined,\n  taskCreationKanbanId: undefined,\n  showCommandPalette: false,\n  showLayoutManager: false,\n  layoutManagerMode: undefined,\n  shouldCreateNote: false,\n  focusMode: false,\n  focusedPanelId: undefined,\n  \n  // Methods\n  openTaskCreationModal: (options) => set({\n    showTaskCreationModal: true,\n    taskCreationColumnId: options?.columnId,\n    taskCreationKanbanId: options?.kanbanId,\n  }),\n  \n  closeTaskCreationModal: () => set({\n    showTaskCreationModal: false,\n    taskCreationColumnId: undefined,\n    taskCreationKanbanId: undefined,\n  }),\n  \n  toggleCommandPalette: () => set((state) => ({\n    showCommandPalette: !state.showCommandPalette,\n  })),\n  \n  setCommandPalette: (show) => set({ showCommandPalette: show }),\n  \n  openLayoutManager: (mode) => set({\n    showLayoutManager: true,\n    layoutManagerMode: mode || 'save',\n  }),\n  \n  closeLayoutManager: () => set({\n    showLayoutManager: false,\n    layoutManagerMode: undefined,\n  }),\n  \n  triggerNoteCreation: () => set({ shouldCreateNote: true }),\n  \n  clearNoteCreation: () => set({ shouldCreateNote: false }),\n  \n  toggleFocusMode: (panelId) => set((state) => {\n    // If no panelId provided (keyboard shortcut), toggle focus mode\n    if (!panelId) {\n      return {\n        focusMode: !state.focusMode,\n        focusedPanelId: state.focusMode ? undefined : state.focusedPanelId,\n      }\n    }\n    \n    // If we're already in focus mode and clicking the same panel, exit focus mode\n    if (state.focusMode && state.focusedPanelId === panelId) {\n      return {\n        focusMode: false,\n        focusedPanelId: undefined,\n      }\n    }\n    \n    // If we're not in focus mode, or switching to a different panel\n    return {\n      focusMode: true,\n      focusedPanelId: panelId,\n    }\n  }),\n  \n  exitFocusMode: () => set({\n    focusMode: false,\n    focusedPanelId: undefined,\n  }),\n}))"],
  "mappings": "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",
  "names": ["React"]
}
